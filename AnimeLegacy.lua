-- This file was generated using Luraph Obfuscator v13.6.7

return (function(iS, tS, JS, nS, lI, NI, PS, oS, FS, sS, yS, zS, ZI, qS, xI, IS, uS, _S, rS, aS, VI, jS, bS, CS, cI, YI,
                 DI, wS, gS, UI, TS, kS, mI, HS, AS, hS, ES, XS, BS, RS, pI, SS, QI, OS, eS, KS, fI, Q, N, p)
    local WI = ({}); local vI = (1.078951216E9); local l, Y, W = "", nil, (nil); do
        repeat
            if vI == 1.078951216E9 then
                do l = select; end
                ; Y = kS; if not (not WI[3.45238499E8]) then vI = WI[3.45238499E8]; else
                    do vI = 1.711894223E9; end
                    ; WI[3.45238499E8] = vI;
                end
                ;
            else
                if vI ~= 1.711894223E9 then else
                    W = string.rep; break;
                end
                ;
            end
            ;
        until false
        ;
    end
    ; local V, K, v, dI = -1668681295, true, nil, 1.296696602E9; local x = (qS); local Z, y = rS, '\068Z\1116\084'; repeat
        if dI > 6.50351025E8 and dI < 1.521672028E9 then
            if not WI[1.09218199E9] then
                do dI = 6.50351025E8; end
                ; (WI)[1.09218199E9] = dI;
            else dI = WI[1.09218199E9]; end
            ; y = gS or _S.unpack;
        elseif dI < 1.296696602E9 then
            do
                if not (not WI[7.3692685E7]) then dI = WI[7.3692685E7]; else
                    dI = 1.521672028E9; WI[7.3692685E7] = dI;
                end
                ;
            end
            ; V = string.char; K = nil;
        else
            if not (dI > 1.296696602E9) then else
                v = yS; do break; end
                ;
            end
            ;
        end
        ;
    until false
    ; local LI = 1.65677793E8; local M, f = 526045234, (false); repeat
        if LI < 2.87188684E8 then
            if not (not WI[6.4430088E7]) then LI = WI[6.4430088E7]; else
                do LI = 2.87188684E8; end
                ; do (WI)[6.4430088E7] = LI; end
                ;
            end
            ; M = wS;
        else
            if LI > 1.65677793E8 then
                f = error; do break; end
                ;
            end
            ;
        end
        ;
    until false
    ; local k, r = rawset, (math.floor); local GI = (1.260937238E9); local _, w, GS = nil, nil, ('\094\054a#WN\049'); local G = (tS); do
        while '>n\116XM\100\074lW' do
            if GI < 1.260937238E9 then
                GS = function(...)
                    do return (...)(); end
                    ;
                end; break;
            else
                if not (GI > 9.9260541E7) then else
                    _ = JS; w = "\126\0887\078\088z?D"; do
                        if not WI[1.172751303E9] then
                            GI = 9.9260541E7; WI[1.172751303E9] = GI;
                        else GI = WI[1.172751303E9]; end
                        ;
                    end
                    ;
                end
                ;
            end
            ;
        end
        ;
    end
    ; local MI = 9.64796611E8; local D = 0.11144584664762902; do
        repeat
            if not (MI <= 1.8665286E7) then
                if MI == 5.5664109E7 then break; else
                    w = function(JI, oI, EI)
                        if oI > EI then return; end
                        ; local jI = EI - oI + 1; do
                            if jI >= 8 then return JI[oI], JI[oI + 0X001], JI[oI + 2], JI[oI + 0x03], JI[oI + oS],
                                    JI[oI + 5], JI[oI + 0x006], JI[oI + 0x7], w(JI, oI + ES, EI); elseif jI >= 7 then return
                                JI[oI], JI[oI + 1], JI[oI + 0X2], JI[oI + 0x003], JI[oI + 4], JI[oI + 5], JI[oI + 6],
                                    w(JI, oI + 7, EI); else
                                if jI >= jS then return JI[oI], JI[oI + 1], JI[oI + 2], JI[oI + 0x03], JI[oI + 0X4],
                                        JI[oI + 5], w(JI, oI + 0x6, EI); elseif jI >= 5 then return JI[oI], JI[oI + 1],
                                        JI[oI + 2], JI[oI + 0X0003], JI[oI + oS], w(JI, oI + 0x5, EI); elseif jI >= 4 then return
                                    JI[oI], JI[oI + AS], JI[oI + 2], JI[oI + 3], w(JI, oI + 0X4, EI); elseif jI >= 0X0003 then return
                                    JI[oI], JI[oI + 0X1], JI[oI + 2], w(JI, oI + 3, EI); else
                                    if not (jI >= 0X02) then
                                        do return JI[oI], w(JI, oI + 0X1, EI); end
                                        ;
                                    else return JI[oI], JI[oI + 1], w(JI, oI + nS, EI); end
                                    ;
                                end
                                ;
                            end
                            ;
                        end
                        ;
                    end; if not (not WI[1.503080058E9]) then
                        do MI = WI[1.503080058E9]; end
                        ;
                    else
                        MI = 1.8665286E7; WI[1.503080058E9] = MI;
                    end
                    ;
                end
                ;
            else
                do
                    if not WI[2.60762513E8] then
                        MI = 5.5664109E7; WI[2.60762513E8] = MI;
                    else MI = WI[2.60762513E8]; end
                    ;
                end
                ; D = string.byte;
            end
            ;
        until false
        ;
    end
    ; local o = (getfenv); local I = ({ [0X0] = { [0x0] = 0X00000, 0X001, 2, 3, 4, 0x5, 6, 7, 0x8, 0X9, 10, 0Xb, 0X00C, 0x0000D, 0XE, 15 }, {
        [0x00] = 1, KS, OS, 2, 5, 0X00004, 7, jS, aS, 0X00008, 0X0B, 10, iS, FS, 15, uS }, { [0] = 0X2, 3, 0, AS, 6,
        0X07, 4, 0x005, PS, 11, 0X8, 9, 0X0e, eS, 12, 13 }, { [0] = 3, 2, AS, 0X00000, 7, 0X6, 0x5, 4, 11, 0x0000A, 0X9,
        0X0008, 0xf, 14, 13, 12 }, { [0] = 4, 5, 6, 0x0007, 0, 1, 2, 3, 12, 0xd, 14, 0xF, 8, 9, 0xA, IS }, { [0] = 5, 4,
        7, 0X006, 1, KS, 3, 2, 0X0000d, 12, 0X0000f, 14, 9, 0x00008, 11, 0x0a }, { [KS] = 6, 7, 4, 0X005, 2, 0X3, 0,
        0X0001, 0X0E, 15, 0Xc, 0X000d, 10, 0X0b, 8, 0X9 }, { [0] = XS, 6, 5, 4, 3, 2, 0X01, 0, 0XF, 0X0000E, 0XD, 12, 11,
        10, 0x009, 0x08 }, { [0] = 8, 9, 10, 11, 0X000c, 0x000D, 0xe, 0x000f, 0, 0X01, 2, 0X3, 0X004, 5, 0X06, 7 }, {
        [0X0] = 9, 0X0008, 0Xb, PS, 0xd, 0xC, eS, uS, 1, KS, 0X03, 2, 5, 0x0004, 7, 6 }, { [0] = 0Xa, 0XB, 0x8, 9, uS,
        0Xf, 12, 13, 0X2, 0X00003, 0X0, 0x01, jS, 7, 0X4, BS }, { [0X0] = 0x000b, 0x0A, 9, 8, 15, 0XE, 13, 12, 3, nS, AS,
        0, 7, 6, 0X5, 0X4 }, { [0x0] = 0xC, 0XD, 0x0000e, 15, 0x8, 9, PS, 11, 4, 5, 6, 0X007, 0, 0x1, 2, 0x3 }, {
        [0] = 0X000D, 12, 15, 0XE, 9, 0X008, 11, 0X00A, 5, 4, 7, 6, AS, 0, OS, 0X00002 }, { [0] = 0Xe, 15, 0XC, 13, PS,
        0XB, 8, 9, 0X6, 0x7, 4, 0X5, 0X2, 0X0003, 0X0, 1 }, { [KS] = 15, 14, 13, 12, IS, 10, 9, 8, 7, 6, 5, 4, 0X3, 2, 1,
        0 } }); local q = (next); local E = (o and o() or SS); local j, c, u = function(...) return (...)[...]; end,
        false, false; local A = 0x1; local kI = 1.253325422E9; repeat
        if kI == 1.253325422E9 then
            c = CS; if not WI[1.635889084E9] then
                do kI = 1.94756341E8; end
                ; WI[1.635889084E9] = kI;
            else
                do kI = WI[1.635889084E9]; end
                ;
            end
            ;
        else
            if kI ~= 1.94756341E8 then else
                u = 9007199254740992; break;
            end
            ;
        end
        ;
    until false
    ; local O = v(
    Z(

        0X0005), "(\046)(.\041",
        function(JI, oI)
            if oI == "H" then
                K = c(JI); return '';
            else
                local EI = (V(c(JI .. oI, 0X010))); do
                    if K then
                        local jI = W(EI, K); do K = nil; end
                        ; return jI;
                    else return EI; end
                    ;
                end
                ;
            end
            ;
        end); local i = 4294967296; local L = ('2\114'); local xS = nil; local d = nil; local P = (nil); local qI = 7.69566619E8; repeat
        if qI < 7.69566619E8 then
            do P = i - AS; end
            ; do break; end
            ;
        elseif not (qI > 6.31781438E8) then else
            do
                if not WI[9.0556395E7] then
                    qI = 6.31781438E8; WI[9.0556395E7] = qI;
                else qI = WI[9.0556395E7]; end
                ;
            end
            ; do L = zS; end
            ; xS = {}; d = string.match;
        end
        ;
    until false
    ; local a = (2147483648); local m, e, ZS = nil, nil, ("\097T\125("); local X, B, rI = false, nil, 1.0970158E9; repeat
        if not (rI <= 1.211545066E9) then
            if not (rI <= 1.597537527E9) then
                if rI < 2.005625921E9 then
                    do B = X and X[sS] or
                        function(JI, oI)
                            local jI, EI = nil, nil; for AI = 187.0, 34550.0, 8824.0 do
                                if AI == 187.0 then JI = JI % i; elseif AI == 17835.0 then
                                    EI = 0X00001; break;
                                elseif AI == 9011.0 then
                                    oI = oI % i; jI = 0X00;
                                end
                                ;
                            end
                            ; do
                                while JI > 0 and oI > 0X0 do
                                    local nI = 0.6945809348485544; local AI = (nil); for KI = 8012.0, 8728.0, 358.0 do
                                        if not (KI > 8012.0) then AI = JI % hS; else
                                            if KI ~= 8370.0 then
                                                jI = jI + I[AI][nI] * EI; JI = (JI - AI) / 0X00010;
                                            else
                                                do nI = oI % 16; end
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    end
                                    ; oI = (oI - nI) / 0X10; EI = EI * 16;
                                end
                                ;
                            end
                            ; return jI + JI * EI + oI * EI;
                        end; end
                    ; break;
                else
                    if not WI[1.377279055E9] then
                        rI = 1.845385388E9; (WI)[1.377279055E9] = rI;
                    else
                        do rI = WI[1.377279055E9]; end
                        ;
                    end
                    ; X = (bit or TS);
                end
                ;
            else
                e = { [0X00000] = 1, 2, 4, 8, 0X10, 32, 0x0040, 128, 256, 0x200, bS, 2048, 4096, 8192, RS, 32768, 65536,
                    0x020000, 262144, 524288, 0X100000, 2097152, 0X400000, 0X800000, 0x1000000, 0X2000000, HS, 134217728,
                    268435456, 536870912, 1073741824, a, i, [35] = 34359738368, [0X2a] = 4398046511104,
                    [49] = 562949953421312 }; do
                    if not (not WI[1.136760661E9]) then rI = WI[1.136760661E9]; else
                        rI = 1.211545066E9; do WI[1.136760661E9] = rI; end
                        ;
                    end
                    ;
                end
                ;
            end
            ;
        else
            if not (rI >= 1.211545066E9) then
                m = assert; if not WI[3.7255483E8] then
                    do rI = 1.597537527E9; end
                    ; do (WI)[3.7255483E8] = rI; end
                    ;
                else rI = WI[3.7255483E8]; end
                ;
            else
                if not (not WI[3.83549616E8]) then
                    do rI = WI[3.83549616E8]; end
                    ;
                else
                    rI = 2.005625921E9; WI[3.83549616E8] = rI;
                end
                ; do ZS = { [nS] = xS }; end
                ;
            end
            ;
        end
        ;
    until false
    ; local S = (X and X.band or function(JI, oI)
        JI = JI % i; for EI = 294.0, 9627.0, 9282.0 do
            if EI < 9576.0 then oI = oI % i; else
                if not (EI > 294.0) then else return ((JI + oI) - B(JI, oI)) / nS; end
                ;
            end
            ;
        end
        ;
    end); local C, g = nil, 0.42185101269799197; local z, b, R, gI = nil, nil, 0.18562766616929693, (6.9912868E8); local H = -0X39b80F00; repeat
        if gI <= 6.9912868E8 then
            do H = { 3, 1, 0X006 }; end
            ; if not (not WI[3.2927677E8]) then gI = WI[3.2927677E8]; else
                gI = 1.086097319E9; (WI)[3.2927677E8] = gI;
            end
            ; C = X and X[QI] or
            function(JI, oI)
                JI = JI % i; local EI = (4.23650277E8); while true do
                    do
                        if EI == 4.23650277E8 then
                            oI = oI % i; do EI = 1.843282944E9; end
                            ;
                        elseif EI ~= 1.843282944E9 then else
                            do return P - S(P - JI, P - oI); end
                            ;
                        end
                        ;
                    end
                    ;
                end
                ;
            end; g = NI.wrap;
        else
            if gI == 1.667064026E9 then
                b = X and X[mI]; do R = X and X[lI]; end
                ; break;
            else
                z = X and X[pI] or function(JI) return P - (JI % i); end; if not (not WI[1.062911321E9]) then gI = WI
                    [1.062911321E9]; else
                    do gI = 1.667064026E9; end
                    ; WI[1.062911321E9] = gI;
                end
                ;
            end
            ;
        end
        ;
    until false
    ; local F = (nil); local s, _I = nil, 5.68094982E8; local t = true; while 0.7380107887273538 do
        if not (_I <= 5.68094982E8) then
            do
                if not (_I > 1.396642989E9) then
                    b = b or
                    function(JI, oI)
                        for EI = 9513.0, 16814.0, 7301.0 do
                            if EI == 16814.0 then
                                if oI < KS then return R(JI, -oI); end
                                ;
                            else
                                do
                                    if not (oI >= 32) then else return 0; end
                                    ;
                                end
                                ;
                            end
                            ;
                        end
                        ; do return (JI * e[oI]) % i; end
                        ;
                    end; do
                        if not WI[5.49135603E8] then
                            _I = 4.99445288E8; (WI)[5.49135603E8] = _I;
                        else _I = WI[5.49135603E8]; end
                        ;
                    end
                    ;
                else
                    if _I ~= 1.688715674E9 then
                        if not WI[2.39788445E8] then
                            _I = 1.688715674E9; do WI[2.39788445E8] = _I; end
                            ;
                        else _I = WI[2.39788445E8]; end
                        ; R = R or
                        function(JI, oI)
                            local jI = 7.23911804E8; local EI = (0x3963c93b); repeat
                                if not (jI <= 2.03796238E8) then
                                    do
                                        if jI < 1.987472149E9 then
                                            jI = 5.4695339E7; if not (oI >= 0X20) then else return 0X0; end
                                            ;
                                        else return EI - EI % 0x1; end
                                        ;
                                    end
                                    ;
                                else
                                    do
                                        if jI == 2.03796238E8 then
                                            jI = 1.987472149E9; EI = (JI % i / e[oI]);
                                        else
                                            jI = 2.03796238E8; do
                                                if not (oI < 0X00) then else return b(JI, -oI); end
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    end
                                    ;
                                end
                                ;
                            until false
                            ;
                        end;
                    else
                        s = function(JI, oI, EI)
                            local jI, AI = (JI / e[oI]) % e[EI], 4.69672937E8; do
                                repeat
                                    if AI < 5.2724434E8 then
                                        jI = jI - jI % AS; AI = 5.2724434E8;
                                    else
                                        if not (AI > 4.69672937E8) then else return jI; end
                                        ;
                                    end
                                    ;
                                until false
                                ;
                            end
                            ;
                        end; break;
                    end
                    ;
                end
                ;
            end
            ;
        else
            do
                if _I ~= 5.68094982E8 then
                    t = function(JI, oI, EI)
                        if not oI then oI = 1; end
                        ; if not (not EI) then else EI = #JI; end
                        ; local jI = EI - oI + 1; if not (jI > cI) then return y(JI, oI, EI); else return w(JI, oI, EI); end
                        ;
                    end; do
                        if not (not WI[3.08520374E8]) then
                            do _I = WI[3.08520374E8]; end
                            ;
                        else
                            do _I = 2.017131367E9; end
                            ; do (WI)[3.08520374E8] = _I; end
                            ;
                        end
                        ;
                    end
                    ;
                else
                    F = 4503599627370496; if not WI[4.22381284E8] then
                        _I = 1.396642989E9; (WI)[4.22381284E8] = _I;
                    else _I = WI[4.22381284E8]; end
                    ;
                end
                ;
            end
            ;
        end
        ;
    end
    ; local J, T = setfenv,
        { [9] = 0X5, [7] = 6, [5] = 0x1, [BS] = 0, [oS] = 5, [9] = 0x0000, [0x6] = 0x2, [7] = 6, [0X00000] = 0X3,
            [0X1] = 5, [3] = 0X04, [4] = 6 }; local h = function()
        local oI = 1.602790625E9; local JI = (nil); repeat
            if not (oI > 5.7107886E8) then
                oI = 1.006493115E9; A = A + 0x01;
            else
                if oI <= 1.006493115E9 then return JI; else
                    do JI = D(O, A, A); end
                    ; do oI = 5.7107886E8; end
                    ;
                end
                ;
            end
            ;
        until false
        ;
    end; local QS = (function()
        local EI = nil; local jI, AI = false, (4.6647826E7); local oI = true; local JI = nil; repeat
            if not (AI <= 4.6647826E7) then
                if AI ~= 9.20216137E8 then return jI * 16777216 + EI * 0X10000 + oI * 256 + JI; else
                    A = A + 4; AI = 1.002637076E9;
                end
                ;
            else
                do AI = 9.20216137E8; end
                ; do JI, oI, EI, jI = D(O, A, A + 0X3); end
                ;
            end
            ;
        until false
        ;
    end); local NS = (function()
        local EI = 1.783880629E9; local JI, oI = 0.020946649103257164, nil; do
            while 0.4503658168896757 do
                if not (EI <= 1.5219088E7) then
                    if not (EI >= 1.849245615E9) then
                        JI, oI = QS(), QS(); do EI = 1.5219088E7; end
                        ;
                    else return oI * i + JI; end
                    ;
                else
                    if oI == 0x0 then return JI; else
                        if oI >= a then oI = oI - i; end
                        ;
                    end
                    ; do EI = 1.849245615E9; end
                    ;
                end
                ;
            end
            ;
        end
        ;
    end); local pS = (-1031938893); local mS = (nil); local yI = (1.371843428E9); repeat
        if yI < 2.088337267E9 then
            if not WI[1.41701692E9] then
                yI = 2.088337267E9; WI[1.41701692E9] = yI;
            else yI = WI[1.41701692E9]; end
            ; pS = function()
                local JI, oI, EI, nI, jI = nil, 0.5967369459872983, 0.5377484491629393, 0X05Cb2f7Fb, (nil); local KI = 1.379194532E9; repeat
                    if KI > 5.38501656E8 then
                        if not (KI > 9.5976127E8) then
                            if not (JI == 0X0 and oI == 0) then else return 0.0; end
                            ; do EI = (-0X0001) ^ s(oI, YI, 0X1); end
                            ; do KI = 1.96365405E8; end
                            ;
                        else
                            do
                                if KI == 1.379194532E9 then
                                    JI = QS(); do KI = 1.822896563E9; end
                                    ;
                                else
                                    oI = QS(); do KI = 9.5976127E8; end
                                    ;
                                end
                                ;
                            end
                            ;
                        end
                        ;
                    elseif not (KI > 1.96365405E8) then
                        nI = 1; KI = 5.38501656E8;
                    else
                        do jI = s(oI, UI, IS); end
                        ; break;
                    end
                    ;
                until false
                ; local AI = s(oI, 0X0, 0X14) * i + JI; do
                    for OI = 1096.0, 11779.0, 4271.0 do
                        if OI ~= 1096.0 then return EI * (2 ^ (jI - 0X3FF)) * (AI / F + nI); else
                            if jI == 0x0 then
                                if AI ~= 0X000 then
                                    local OI = 9.40291273E8; repeat
                                        if OI > 9.40291273E8 then
                                            nI = 0x00000; break;
                                        else
                                            if not (OI < 1.722824596E9) then else
                                                do jI = 0X01; end
                                                ; OI = 1.722824596E9;
                                            end
                                            ;
                                        end
                                        ;
                                    until false
                                    ;
                                else
                                    do return EI * KS; end
                                    ;
                                end
                                ;
                            else
                                if jI ~= 2047 then else
                                    do
                                        if AI ~= 0X0000 then
                                            do return EI * (1 / 0); end
                                            ;
                                        else return EI * (0x0 / KS); end
                                        ;
                                    end
                                    ;
                                end
                                ;
                            end
                            ;
                        end
                        ;
                    end
                    ;
                end
                ;
            end;
        else
            if not (yI > 1.371843428E9) then else
                mS = function()
                    local oI = 0X000; local JI = 0X0; repeat
                        local EI = (D(O, A, A)); do A = A + 0X0001; end
                        ; do JI = JI + ((EI > 0X07F and EI - 128 or EI) * e[oI]); end
                        ; if EI < 0X00080 then return JI; end
                        ; oI = oI + 0X7;
                    until false
                    ;
                end; break;
            end
            ;
        end
        ;
    until false
    ; local cS = h(); local US = (function(...) return l("#", ...), { ... }; end); local fS = AS; local DS = (function()
        f(
        'Yo\117\114\032\101\110vironm\101\110t does n\111\116 \115\117\112\112or\116\032\076\117\097\074IT\'s \070F\073\032l\105\098rar\121,\032\116here\102\111\114\101\032\121ou ca\110\110o\116\032u\115e\032\076\076/\085L\076/i su\102f\105\120es.'); end); local YS, VS =
    'u\120', (0.6440181049977926); local wI = (2.142325064E9); while "`EJI" do
        if wI == 2.142325064E9 then
            YS = function(JI)
                local oI = (QS()); local EI = (nil); for jI = 3731.0, 6059.0, 2328.0 do
                    if jI ~= 3731.0 then
                        for jI = 1, oI, 0x1F3D do
                            local AI, nI = nil, (false); for KI = 1366.0, 110128.0, 9905.0 do
                                if KI == 21176.0 then nI = { D(O, A + jI - 1, A + AI - 1) }; else
                                    if KI == 40986.0 then
                                        do EI = EI .. V(t(nI)); end
                                        ; break;
                                    else
                                        if KI ~= 1366.0 then
                                            if KI == 11271.0 then
                                                if not (AI > oI) then else AI = oI; end
                                                ;
                                            else
                                                if KI ~= 31081.0 then else
                                                    do
                                                        for KI = 1, #nI do
                                                            local OI = (2.29312588E8); do
                                                                while "m\122" do
                                                                    if OI < 1.658365755E9 then
                                                                        OI = 1.658365755E9; (nI)[KI] = B(nI[KI], cS);
                                                                    else
                                                                        cS = (JI * cS + 193) % 256; do break; end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        else AI = jI + 7997 - 1; end
                                        ;
                                    end
                                    ;
                                end
                                ;
                            end
                            ;
                        end
                        ;
                    else EI = ''; end
                    ;
                end
                ; A = A + oI; return EI;
            end; do
                if not (not WI[3.55173847E8]) then wI = WI[3.55173847E8]; else
                    do wI = 6.1496327E7; end
                    ; (WI)[3.55173847E8] = wI;
                end
                ;
            end
            ;
        else
            if wI ~= 6.1496327E7 then else
                VS = DS; do break; end
                ;
            end
            ;
        end
        ;
    end
    ; local lS = (function()
        local JI = (mS()); if not (JI >= F) then else return JI - u; end
        ; return JI;
    end); local WS, U = DS, xI; local MS, tI = 0x00005b1F7CC2, (2.01425999E9); local dS, LS = nil, (nil); local vS = (false); while -0X35D636B1 do
        do
            if tI > 4.96363191E8 then
                if not (tI > 1.671398072E9) then
                    LS = function()
                        local JI, EI, XI = "\070", 0.5976350250652792, 2.11652848E9; repeat
                            if XI == 2.11652848E9 then
                                JI = { fI, {}, fI, nil, nil, nil, nil, {}, {} }; do XI = 2.085539135E9; end
                                ;
                            else
                                if XI ~= 2.085539135E9 then else
                                    EI = {}; break;
                                end
                                ;
                            end
                            ;
                        until false
                        ; local oI = ({}); local AI = (false); local jI = -0X254B146b; local BI = (1.00374632E8); while 0.07233348110611981 do
                            if BI == 1.00374632E8 then
                                jI = 0X001; JI[7] = mS(); BI = 7.22935975E8;
                            else
                                if BI ~= 7.22935975E8 then else
                                    do (JI)[0X1] = mS(); end
                                    ; AI = JI[2]; break;
                                end
                                ;
                            end
                            ;
                        end
                        ; local nI = QS(); for CI = 1, nI do
                            local zI, bI, RI = nil, false, (0.9950048383199899); local HI = 9.89962044E8; repeat
                                if HI <= 1.63305422E8 then
                                    RI = QS(); break;
                                else
                                    if not (HI >= 1.842475371E9) then
                                        do HI = 1.842475371E9; end
                                        ; zI = QS();
                                    else
                                        HI = 1.63305422E8; bI = QS();
                                    end
                                    ;
                                end
                                ;
                            until false
                            ; for TI = zI, bI do (AI)[TI] = RI; end
                            ;
                        end
                        ; local KI = nil; for CI = 3834.0, 6988.0, 1577.0 do
                            do
                                if CI == 6988.0 then JI[0x003] = s(KI, 0X001, 1) ~= 0; else
                                    if CI == 3834.0 then JI[11] = QS(); else
                                        if CI == 5411.0 then
                                            JI[16] = h(); KI = h();
                                        end
                                        ;
                                    end
                                    ;
                                end
                                ;
                            end
                            ;
                        end
                        ; JI[0X5] = s(KI, 2, 0X1) ~= 0; local aI = (JI[0x00009]); local OI = (QS() - 75512); local iI = {}; for CI = 1, OI do
                            local zI, bI, RI, HI = lS(), lS(), lS(), (lS()); local TI, sI, hI = zI % 8, HI % 8, (RI % 8); aI[CI] = {
                                [1] = sI == OS and LS() or (HI - sI) / 8, [4] = TI, [nS] = hI, [jS] = (RI - hI) / 8,
                                [0X5] = sI, [7] = bI, [0X003] = (zI - TI) / 8 };
                        end
                        ; do JI[6] = iI; end
                        ; local FI = 0.5698301590621828; local PI = false; local uI = nil; local eI, SI = 1368628299,
                            (7.37141575E8); while "4$k\107\057\051(" do
                            do
                                if SI < 4.62161212E8 then
                                    SI = 4.62161212E8; uI = JI[8];
                                elseif SI > 1.041942522E9 then
                                    do eI = h(); end
                                    ; break;
                                else
                                    if SI < 7.37141575E8 and SI > 3.83956753E8 then
                                        for CI = KS, FI - 0X0001 do uI[CI] = LS(); end
                                        ; SI = 1.870471019E9; PI = QS() - 0x0003116;
                                    elseif SI > 4.62161212E8 and SI < 1.041942522E9 then
                                        SI = 1.041942522E9; for CI = AS, mS() do iI[CI] = { h(), mS() }; end
                                        ;
                                    else
                                        if not (SI < 1.870471019E9 and SI > 7.37141575E8) then else
                                            SI = 3.83956753E8; FI = QS() - 45891;
                                        end
                                        ;
                                    end
                                    ;
                                end
                                ;
                            end
                            ;
                        end
                        ; local II = h() ~= 0X0; do
                            for CI = 4413.0, 81810.0, 3990.0 do
                                if CI <= 8403.0 then
                                    if CI ~= 8403.0 then
                                        for CI = 1, PI do
                                            local RI = (nil); local zI, bI = "H\113\032d", (nil); for HI = 4473.0, 22950.0, 6159.0 do
                                                if not (HI <= 10632.0) then
                                                    if HI == 22950.0 then RI = { zI, {} }; else
                                                        if bI == ZI then zI = Z(YS(eI), QS()); elseif bI == 82 then
                                                            do zI = QS() + VS(QS()) * i; end
                                                            ;
                                                        elseif bI == 0x85 then zI = Z(YS(eI), 0X5); elseif bI == 0X41 then zI =
                                                            Z(YS(eI), 4); elseif bI == DI then zI = vS(0, pS()); elseif bI == 32 then zI =
                                                            pS(); elseif bI == VI then zI = h() == 1; elseif bI == 4 then
                                                            do zI = pS(); end
                                                            ;
                                                        elseif bI == 121 then
                                                            do zI = NS(); end
                                                            ;
                                                        elseif bI == 0XFf then zI = NS(); elseif bI ~= 137 then else zI =
                                                            QS() + WS(QS()) * i; end
                                                        ;
                                                    end
                                                    ;
                                                else
                                                    if HI == 10632.0 then bI = h(); else zI = fI; end
                                                    ;
                                                end
                                                ;
                                            end
                                            ; oI[CI - AS] = jI; for HI = 7995.0, 13509.0, 2757.0 do
                                                if HI > 7995.0 and HI < 13509.0 then jI = jI + AS; elseif HI > 10752.0 then
                                                    do
                                                        if II then
                                                            local HI = (8.39191505E8); while true do
                                                                if HI == 8.39191505E8 then
                                                                    xS[fS] = RI; do HI = 1.89260262E9; end
                                                                    ;
                                                                elseif HI == 1.89260262E9 then
                                                                    fS = fS + 0X001; break;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                elseif HI < 10752.0 then EI[jI] = RI; end
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    else
                                        do
                                            for CI = 1, OI do
                                                local zI, bI = nil, (1.79257948E8); do
                                                    while true do
                                                        if bI < 3.81811211E8 then
                                                            zI = JI[0x00009][CI]; bI = 3.81811211E8;
                                                        elseif bI > 1.79257948E8 then
                                                            for RI, HI in q, H do
                                                                local sI, hI = 0.5695107153415597, 1.410721708E9; local TI = (0.500382204312638); while true do
                                                                    if hI == 1.410721708E9 then
                                                                        hI = 1.537621787E9; TI = T[HI];
                                                                    else
                                                                        if hI == 1.537621787E9 then
                                                                            sI = zI[TI]; if sI == nS then
                                                                                local Nr = (nil); local Qr = (nil); for pr = 1644.0, 33745.0, 3401.0 do
                                                                                    if pr ~= 1644.0 then
                                                                                        if pr ~= 5045.0 then
                                                                                            do
                                                                                                if pr == 8446.0 then
                                                                                                    if Nr then
                                                                                                        (zI)[TI] = Nr
                                                                                                        [0X001]; local pr =
                                                                                                        Nr[0x2]; pr[#pr + 0x0001] = {
                                                                                                            zI, TI };
                                                                                                    end
                                                                                                    ; do break; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else Nr = EI[Qr]; end
                                                                                        ;
                                                                                    else
                                                                                        do Qr = oI[zI[HI]]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            elseif sI == AS then
                                                                                do (zI)[HI] = CI + zI[HI] + AS; end
                                                                                ;
                                                                            elseif sI == 4 then (zI)[HI] = uI[zI[HI]]; elseif sI ~= 0X5 then else (zI)[HI] =
                                                                                r(zI[HI]); end
                                                                            ; do break; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; do break; end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    end
                                    ;
                                elseif not (CI <= 12393.0) then return JI; else (JI)[4] = mS(); end
                                ;
                            end
                            ;
                        end
                        ;
                    end; if not (not WI[2.058044172E9]) then tI = WI[2.058044172E9]; else
                        do tI = 4.96363191E8; end
                        ; (WI)[2.058044172E9] = tI;
                    end
                    ;
                else
                    if tI == 2.128057514E9 then
                        MS = dS(E, MS, nil)(LS, Q, j, GS, pS, h, QS, p); break;
                    else
                        do vS = DS; end
                        ; do dS = function(oI, JI, EI)
                                local aI, iI = JI[0x003], (JI[0X5]); local nI = (JI[0X1]); local KI, OI = JI[4], (JI[2]); local jI =
                                JI[0x00009]; local AI = JI[8]; local uI = (G({}, { __mode = 'v' })); local PI = (nil); local FI =
                                JI[7]; if not (FI >= 0x0004) then
                                    if not (FI >= 2) then
                                        if FI == 0X1 then
                                            do PI = function(...)
                                                    local eI = 0X0000; local II, XI = 0X00001, {}; local BI = {
                                                        [0X00001] = XI, [0X2] = JI }; local SI = ((o and o() or _ENV)); local zI, bI =
                                                    US(...); local CI = (SI == E and oI or SI); zI = zI - 0X1; do
                                                        for hI = 0, zI do
                                                            do
                                                                if nI > hI then
                                                                    do (XI)[hI] = bI[hI + 0X0001]; end
                                                                    ;
                                                                else
                                                                    do break; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ; if not aI then bI = nil; else
                                                        if iI then (XI)[nI] = { n = zI >= nI and zI - nI + 0X1 or 0,
                                                                t(bI, nI + 1, zI + 1) }; end
                                                        ;
                                                    end
                                                    ; if CI ~= SI then
                                                        do
                                                            if J then J(PI, CI); else _ENV = CI; end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ; local RI, HI, TI, sI = Y(function()
                                                        repeat
                                                            local hI = (jI[II]); local Qr = (hI[7]); do II = II + 0x1; end
                                                            ; if Qr < 0X8 then
                                                                if not (Qr < 0x04) then
                                                                    do
                                                                        if not (Qr >= 0x6) then
                                                                            if Qr ~= 5 then (XI)[hI[0X6]] = hI[5]; else
                                                                                XI[0x00000] = CI[hI[0X00005]]; II = II +
                                                                                1; do eI = 0X0000; end
                                                                                ; XI[eI] = XI[eI](); do II = II + 0X1; end
                                                                                ; II = II + 0x001; hI = jI[II]; II = II +
                                                                                0X001; if not (not XI[0x00]) then else
                                                                                    do II = hI[1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if Qr ~= 7 then
                                                                                do XI[hI[6]] = CI[hI[5]]; end
                                                                                ;
                                                                            else
                                                                                (XI)[0] = CI[hI[0X5]]; II = II + 1; II =
                                                                                II + 0x1; hI = jI[II]; II = II + 0x1; XI[0] =
                                                                                XI[0X000][hI[0x4]]; II = II + 1; eI = 0; (XI)[eI] =
                                                                                XI[eI](); do hI = jI[II]; end
                                                                                ; II = II + 0X1; do
                                                                                    if not XI[0] then II = hI[0X1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    if Qr < 0x2 then
                                                                        if Qr == 1 then
                                                                            local Nr = (EI[0]); XI[0X0] = Nr[0x0001]
                                                                            [Nr[0X2]]; II = II + 0X1; eI = 0; local pr = (0X1); do XI[eI] =
                                                                                XI[eI](); end
                                                                            ; do II = II + 0X1; end
                                                                            ; II = II + 0x1; II = II + 0X1; Nr = EI[0X1]; (XI)[0X1] =
                                                                            Nr[1][Nr[2]]; hI = jI[II]; II = II + 0X00001; local mr =
                                                                            XI[0x00001]; XI[pr + 0x1] = mr; (XI)[pr] = mr
                                                                            [hI[0X00004]]; II = II + 1; XI[0X03] = XI
                                                                            [0X0]; II = II + 1; do pr = 0x1; end
                                                                            ; (XI[pr])(XI[pr + 1], XI[pr + 0X2]); eI = pr -
                                                                            1; hI = jI[II]; II = II + 0X1; II = hI[0X1];
                                                                        else
                                                                            for Nr = hI[0X06], hI[1] do XI[Nr] = nil; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr == 0X3 then else
                                                                            repeat
                                                                                local Nr, pr, mr = uI, XI, ({}); for lr, cr in q, Nr do
                                                                                    do
                                                                                        for Yr, Ur in q, cr do
                                                                                            if not (Ur[0X01] == pr and Ur[0X2] >= 0) then else
                                                                                                local xr = Ur[0X2]; if not (not mr[xr]) then else (mr)[xr] = {
                                                                                                        pr[xr] }; end
                                                                                                ; (Ur)[0X1] = mr[xr]; (Ur)[0X2] = 1;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            until true
                                                                            ; return;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                do
                                                                    if not (Qr < 0x0C) then
                                                                        if not (Qr >= 0X000e) then
                                                                            do
                                                                                if Qr == 0x000D then
                                                                                    do XI[hI[0X6]] = XI[hI[0X00001]] <
                                                                                        XI[hI[3]]; end
                                                                                    ;
                                                                                else XI[hI[6]] = z(XI[hI[1]]); end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (Qr >= 15) then II = hI[1]; else
                                                                                if Qr == 0x10 then XI[hI[6]] = S(
                                                                                    XI[hI[1]], XI[hI[0x3]]); else
                                                                                    local Nr = XI[hI[0X01]] /
                                                                                    XI[hI[0X00003]]; (XI)[hI[6]] = Nr -
                                                                                    Nr % 1;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if not (Qr >= 10) then
                                                                            if Qr ~= 0X9 then
                                                                                do XI[hI[0X6]] = { t({}, 1, hI[0X1]) }; end
                                                                                ;
                                                                            else
                                                                                local Nr = hI[6]; local pr = (hI[0x00003] - 0x1) *
                                                                                50; local mr = XI[Nr]; for lr = 1, hI[1] do mr[pr + lr] =
                                                                                    XI[Nr + lr]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if Qr == 0x00B then
                                                                                    local Nr = (hI[0X1]); local mr = (Nr[6]); local pr = (nil); local lr = #
                                                                                    mr; if lr > 0x00000 then
                                                                                        pr = {}; for cr = 1, lr do
                                                                                            local Yr = (mr[cr]); if Yr[1] ~= 0 then
                                                                                                do pr[cr - 0X00001] = EI
                                                                                                    [Yr[2]]; end
                                                                                                ;
                                                                                            else pr[cr - 1] = { XI, Yr
                                                                                                    [2] }; end
                                                                                            ;
                                                                                        end
                                                                                        ; (L)(uI, pr);
                                                                                    end
                                                                                    ; (XI)[hI[0X6]] = dS(CI, Nr, pr);
                                                                                else
                                                                                    do XI[hI[6]] = XI[hI[0X1]] %
                                                                                        XI[hI[0X3]]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        until false
                                                        ;
                                                    end); if not (RI) then
                                                        if U(HI) ~= 's\116\114\105\110g' then f(HI, 0X0); else
                                                            if not (d(HI, "att\101mpt\032t\111\032\121\105e\108d a\099ross \109et\097\109\101thod\047\067\037\045\099a\108\108 boun\100\097r\121")) then else return
                                                                _(); end
                                                            ; if not (d(HI, "^\046-\058\037d+\058 ")) then (f)(HI, 0X00); else (f)(
                                                                "Lur\097ph\032\083\099ri\112t\058" ..
                                                                (OI[II - 1] or "(i\110ter\110a\108)") ..
                                                                "\058\032" .. x(HI), 0); end
                                                            ;
                                                        end
                                                        ;
                                                    elseif HI then
                                                        if sI == 0x1 then return XI[TI](); else return XI[TI](t(XI,
                                                                TI + 0x001, eI)); end
                                                        ;
                                                    elseif TI then
                                                        do return t(XI, TI, sI); end
                                                        ;
                                                    end
                                                    ;
                                                end; end
                                            ;
                                        else PI = function(...)
                                                local II = (0X1); local XI = {}; local BI = { [0X2] = JI, [0X00001] = XI }; local SI = (o and o() or _ENV); local CI = (SI == E and oI or SI); local eI = 0; local zI, bI =
                                                US(...); zI = zI - 1; for hI = 0X0, zI do
                                                    if nI > hI then
                                                        do (XI)[hI] = bI[hI + 0X1]; end
                                                        ;
                                                    else break; end
                                                    ;
                                                end
                                                ; if not aI then
                                                    do bI = nil; end
                                                    ;
                                                else
                                                    if not (iI) then else (XI)[nI] = { n = zI >= nI and zI - nI + 1 or
                                                        0X00000, t(bI, nI + 1, zI + 1) }; end
                                                    ;
                                                end
                                                ; if CI ~= SI then
                                                    if not (J) then _ENV = CI; else (J)(PI, CI); end
                                                    ;
                                                end
                                                ; local RI, HI, TI, sI = Y(function()
                                                    while 472690795 do
                                                        local hI = (jI[II]); local Qr = hI[7]; do II = II + 1; end
                                                        ; do
                                                            if Qr < 0X8 then
                                                                do
                                                                    if Qr >= 4 then
                                                                        if not (Qr >= 0X0006) then
                                                                            if Qr == 5 then else
                                                                                for Nr = hI[0X6], hI[1] do
                                                                                    do XI[Nr] = nil; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if Qr == 0X7 then
                                                                                local Nr = hI[6]; local mr = (XI[Nr]); local pr = ((hI[3] - 1) * 50); for lr = 1, hI[1] do mr[pr + lr] =
                                                                                    XI[Nr + lr]; end
                                                                                ;
                                                                            else
                                                                                local Nr = (hI[6]); local pr = g(function(...)
                                                                                    _(); for mr, lr, cr, Yr, Ur, xr, fr, Zr, Dr, Vr in ... do (_)(
                                                                                        true,
                                                                                            { mr, lr, cr, Yr, Ur, xr, fr,
                                                                                                Zr, Dr, Vr }); end
                                                                                    ;
                                                                                end); pr(XI[Nr], XI[Nr + 0X001], XI
                                                                                [Nr + 2]); eI = Nr; (XI)[Nr] = pr; II =
                                                                                hI[0X1];
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr < 0x2 then
                                                                            if Qr == 0X00001 then (XI)[hI[6]] = CI
                                                                                [hI[0X5]]; else XI[hI[0X6]] = hI[0X5]; end
                                                                            ;
                                                                        else
                                                                            if Qr ~= 0x3 then
                                                                                do XI[0] = CI[hI[5]]; end
                                                                                ; hI = jI[II]; do II = II + 1; end
                                                                                ; local Nr = (0X0); XI[1] = hI[0X5]; II =
                                                                                II + 1; XI[Nr](XI[Nr + 1]); eI = Nr - 1; II =
                                                                                II + 1; II = II + 0X1; do hI = jI[II]; end
                                                                                ; II = II + 0X1; do (XI)[0] = CI[hI[5]]; end
                                                                                ; II = II + 1; do II = II + 1; end
                                                                                ; local pr = XI[0]; hI = jI[II]; II = II +
                                                                                1; Nr = 0; (XI)[Nr + 0X001] = pr; (XI)[Nr] =
                                                                                pr[hI[0X4]]; hI = jI[II]; II = II + 1; do (XI)[2] =
                                                                                    hI[5]; end
                                                                                ; do II = II + 0X1; end
                                                                                ; Nr = 0X0; do (XI)[Nr] = XI[Nr](
                                                                                    XI[Nr + 0X1], XI[Nr + 0X2]); end
                                                                                ; eI = Nr; II = II + 1; II = II + 0X1; hI =
                                                                                jI[II]; II = II + 1; Nr = 0x0; pr = XI
                                                                                [0X00]; do XI[Nr + 1] = pr; end
                                                                                ; (XI)[Nr] = pr[hI[4]]; do hI = jI[II]; end
                                                                                ; II = II + 0X001; (XI)[2] = hI[1]; hI =
                                                                                jI[II]; do II = II + 1; end
                                                                                ; (XI)[0x3] = hI[0X1]; hI = jI[II]; II =
                                                                                II + 1; (XI)[0X4] = hI[1]; hI = jI[II]; do II =
                                                                                    II + 1; end
                                                                                ; XI[5] = hI[5]; hI = jI[II]; do II = II +
                                                                                    0X1; end
                                                                                ; XI[6] = CI[hI[5]]; II = II + 0X1; II =
                                                                                II + 1; hI = jI[II]; II = II + 1; (XI)[7] =
                                                                                hI[1]; II = II + 0x00001; Nr = 0X00000; do eI =
                                                                                    Nr + 8 - 1; end
                                                                                ; (XI[Nr])(t(XI, Nr + 1, eI)); eI = Nr -
                                                                                1; II = II + 0X1; II = II + 1; do hI = jI
                                                                                    [II]; end
                                                                                ; II = II + 0X00001; do II = hI[1]; end
                                                                                ;
                                                                            else
                                                                                do (XI)[hI[0x6]] = XI[hI[0X1]] ^
                                                                                    XI[hI[0X3]]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            elseif Qr < 0Xc then
                                                                if not (Qr >= 0X00A) then
                                                                    if Qr ~= 0x9 then
                                                                        repeat
                                                                            local Nr, pr, mr = uI, XI, ({}); for lr, cr in q, Nr do
                                                                                do
                                                                                    for Yr, Ur in q, cr do
                                                                                        if not (Ur[0X1] == pr and Ur[0X0002] >= 0) then else
                                                                                            local xr = Ur[2]; if not (not mr[xr]) then else (mr)[xr] = {
                                                                                                    pr[xr] }; end
                                                                                            ; do Ur[1] = mr[xr]; end
                                                                                            ; Ur[0X00002] = 0x01;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        until true
                                                                        ; return;
                                                                    else
                                                                        if not (not (XI[hI[1]] <= XI[hI[3]])) then else
                                                                            do II = hI[0X0006]; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    do
                                                                        if Qr ~= 11 then (XI[hI[6]])[XI[hI[0X1]]] = XI
                                                                            [hI[0x0003]]; else (XI)[hI[0X6]] = {
                                                                                t({}, 1, hI[1]) }; end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                do
                                                                    if not (Qr < 14) then
                                                                        if not (Qr >= 15) then
                                                                            do (XI)[0X0] = CI[hI[5]]; end
                                                                            ; hI = jI[II]; II = II + 1; XI[0x0] = XI[0]
                                                                            [hI[0X4]]; do II = II + 1; end
                                                                            ; II = II + 0X1; II = II + 0x00001; local Nr = (EI[0x0]); (XI)[0X1] =
                                                                            Nr[0X1][Nr[2]]; do II = II + 0X1; end
                                                                            ; local lr = (3); II = II + 0X1; local pr = 0X1; do hI =
                                                                                jI[II]; end
                                                                            ; II = II + 0X01; local mr = (XI[1]); do XI[pr + 1] =
                                                                                mr; end
                                                                            ; XI[pr] = mr[hI[4]]; do hI = jI[II]; end
                                                                            ; II = II + 0x1; (XI)[3] = hI[5]; II = II +
                                                                            0X1; pr = 0X1; local cr = 0; if lr == 0 then else
                                                                                do eI = pr + lr - 1; end
                                                                                ;
                                                                            end
                                                                            ; local Yr, Ur = nil, nil; if lr ~= 0X00001 then
                                                                                do Yr, Ur = US(XI[pr](t(XI, pr + 0x1, eI))); end
                                                                                ;
                                                                            else Yr, Ur = US(XI[pr]()); end
                                                                            ; if cr == 0X001 then eI = pr - 1; else
                                                                                if cr ~= 0X0 then
                                                                                    Yr = pr + cr - 2; eI = Yr + 0X1;
                                                                                else
                                                                                    Yr = Yr + pr - 1; eI = Yr;
                                                                                end
                                                                                ; local xr = 0; do
                                                                                    for fr = pr, Yr do
                                                                                        do xr = xr + 0X1; end
                                                                                        ; (XI)[fr] = Ur[xr];
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ; II = II + 1; II = II + 1; II = II + 0X1; pr = 0X000; (XI)[pr] =
                                                                            XI[pr](t(XI, pr + 1, eI)); eI = pr; hI = jI
                                                                            [II]; do II = II + 1; end
                                                                            ; if not XI[0X0000] then II = hI[1]; end
                                                                            ;
                                                                        else
                                                                            if Qr ~= 16 then
                                                                                local Nr = hI[1]; local pr = (nil); local mr = (Nr[6]); local lr = #
                                                                                mr; if lr > 0 then
                                                                                    pr = {}; for cr = 0X1, lr do
                                                                                        local Yr = (mr[cr]); if Yr[1] ~= 0X0000 then
                                                                                            do (pr)[cr - 1] = EI[Yr[2]]; end
                                                                                            ;
                                                                                        else pr[cr - 0X1] = { XI,
                                                                                                Yr[0X0002] }; end
                                                                                        ;
                                                                                    end
                                                                                    ; (L)(uI, pr);
                                                                                end
                                                                                ; XI[hI[6]] = dS(CI, Nr, pr);
                                                                            else II = hI[1]; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr == 0Xd then
                                                                            local Nr = XI[hI[0x01]] / XI[hI[0X3]]; (XI)[hI[6]] =
                                                                            Nr - Nr % 1;
                                                                        else
                                                                            local Nr = EI[0X0000]; XI[0] = Nr[1]
                                                                            [Nr[0X02]]; II = II + 0X1; local pr = 0X0; II =
                                                                            II + 1; hI = jI[II]; II = II + 0X0001; local mr =
                                                                            XI[0X0]; XI[pr + 1] = mr; XI[pr] = mr
                                                                            [hI[0X4]]; do hI = jI[II]; end
                                                                            ; II = II + 1; XI[2] = hI[0X5]; II = II +
                                                                            0X00001; do pr = 0X0; end
                                                                            ; XI[pr] = XI[pr](XI[pr + 0X1], XI[pr + 2]); eI =
                                                                            pr; hI = jI[II]; II = II + 1; if not (not XI[0]) then else
                                                                                do II = hI[0X001]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end); do
                                                    if RI then
                                                        if HI then
                                                            do
                                                                if sI == 0x1 then return XI[TI](); else return XI[TI](t(
                                                                    XI, TI + 0X1, eI)); end
                                                                ;
                                                            end
                                                            ;
                                                        elseif TI then return t(XI, TI, sI); end
                                                        ;
                                                    elseif U(HI) ~= 'stri\110\103' then (f)(HI, 0); else
                                                        if not (d(HI, "\097\116t\101\109p\116\032t\111 \121ie\108\100 \097c\114\111ss me\116ame\116hod\047C\037-\099\097\108\108 \098ou\110dar\121")) then else return
                                                            _(); end
                                                        ; do
                                                            if not (d(HI, '\094\046-:\037d+\058\032')) then (f)(HI, 0); else (f)(
                                                                "\076\117\114\097\112\104\032Sc\114i\112\116:" ..
                                                                (OI[II - 1] or '(i\110\116\101\114\110al\041') ..
                                                                ': ' .. x(HI), 0X0); end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end; end
                                        ;
                                    else
                                        if FI ~= 3 then PI = function(...)
                                                local II, XI = 1, ({}); local SI = ((o and o() or _ENV)); local BI = ({
                                                    [0X2] = JI, [0X00001] = XI }); local zI, bI = US(...); local CI = (SI == E and oI or SI); zI =
                                                zI - 1; for hI = 0X0000, zI do
                                                    if not (nI > hI) then break; else XI[hI] = bI[hI + 0X0001]; end
                                                    ;
                                                end
                                                ; if not aI then bI = nil; else
                                                    if iI then XI[nI] = { n = zI >= nI and zI - nI + 1 or 0,
                                                            t(bI, nI + 0X1, zI + 1) }; end
                                                    ;
                                                end
                                                ; local eI = (0x0); do
                                                    if CI ~= SI then
                                                        if J then J(PI, CI); else _ENV = CI; end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ; local RI, HI, TI, sI = Y(function()
                                                    while -123695099 do
                                                        local hI = (jI[II]); local Qr = hI[7]; II = II + 1; if not (Qr >= 9) then
                                                            do
                                                                if Qr >= 0X4 then
                                                                    if not (Qr < 6) then
                                                                        if not (Qr >= 7) then (XI)[hI[6]] = S(XI[hI[1]],
                                                                                XI[hI[3]]); else
                                                                            if Qr == 0X8 then
                                                                                do XI[hI[0X006]] = XI[hI[0X01]] ^
                                                                                    XI[hI[0x03]]; end
                                                                                ;
                                                                            else
                                                                                if not XI[hI[6]] then
                                                                                    do II = hI[0X00001]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    elseif Qr == 5 then (XI)[hI[6]] = hI[0X00005]; else end
                                                                    ;
                                                                else
                                                                    if not (Qr < 2) then
                                                                        if Qr == 0x3 then XI[hI[0X00006]] = XI[hI[1]] *
                                                                            XI[hI[0x003]]; else
                                                                            local Nr = hI[0x1]; local pr = nil; local mr =
                                                                            Nr[0X6]; local lr = #mr; if lr > 0X0 then
                                                                                pr = {}; for cr = 1, lr do
                                                                                    local Yr = (mr[cr]); do
                                                                                        if Yr[1] ~= 0X0 then pr[cr - 1] =
                                                                                            EI[Yr[0X2]]; else
                                                                                            do (pr)[cr - 0X1] = { XI,
                                                                                                    Yr[2] }; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ; L(uI, pr);
                                                                            end
                                                                            ; XI[hI[6]] = dS(CI, Nr, pr);
                                                                        end
                                                                        ;
                                                                    else
                                                                        do
                                                                            if Qr == 1 then
                                                                                do II = hI[0X1]; end
                                                                                ;
                                                                            else
                                                                                local Nr = EI[0]; XI[0] = Nr[0X01]
                                                                                [Nr[0x2]]; II = II + 1; do II = II +
                                                                                    0X001; end
                                                                                ; local pr = (0X000); hI = jI[II]; II =
                                                                                II + 0X00001; local mr = (XI[0]); (XI)[pr + 1] =
                                                                                mr; (XI)[pr] = mr[hI[0X4]]; hI = jI[II]; II =
                                                                                II + 1; do XI[2] = hI[5]; end
                                                                                ; do II = II + 1; end
                                                                                ; pr = 0; do (XI)[pr] = XI[pr](XI[pr + 1],
                                                                                        XI[pr + 2]); end
                                                                                ; eI = pr; do hI = jI[II]; end
                                                                                ; II = II + 1; do
                                                                                    if not (not XI[0]) then else II = hI
                                                                                        [0X001]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        else
                                                            do
                                                                if Qr < 0Xe then
                                                                    if Qr >= 0Xb then
                                                                        if not (Qr < 0X00c) then
                                                                            if Qr == 13 then XI[hI[6]] = true; else
                                                                                if XI[hI[0X6]] then
                                                                                    do II = hI[1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            local Nr = (EI[1]); XI[2] = Nr[1][Nr[2]]; local pr = (0X3); II =
                                                                            II + 0X1; do II = II + 1; end
                                                                            ; hI = jI[II]; II = II + 0X01; XI[3] = CI
                                                                            [hI[0X005]]; hI = jI[II]; do II = II +
                                                                                0X00001; end
                                                                            ; local mr = (XI[0X00003]); XI[pr + 1] = mr; do XI[pr] =
                                                                                mr[hI[0X4]]; end
                                                                            ; do hI = jI[II]; end
                                                                            ; II = II + 0x0001; (XI)[5] = hI[0x5]; II =
                                                                            II + 1; pr = 3; (XI)[pr] = XI[pr](
                                                                            XI[pr + 0X00001], XI[pr + 0X2]); eI = pr; do hI =
                                                                                jI[II]; end
                                                                            ; II = II + 1; XI[0X3] = XI[3][hI[4]]; II =
                                                                            II + 1; II = II + 0x1; hI = jI[II]; do II =
                                                                                II + 0X1; end
                                                                            ; do XI[3] = XI[0X3][hI[4]]; end
                                                                            ; do II = II + 1; end
                                                                            ; II = II + 0X1; hI = jI[II]; II = II + 1; do (XI)[3] =
                                                                                XI[3][hI[4]]; end
                                                                            ; do hI = jI[II]; end
                                                                            ; II = II + 0X1; (XI)[3] = XI[3][hI[4]]; do hI =
                                                                                jI[II]; end
                                                                            ; do II = II + 1; end
                                                                            ; XI[0x00003] = XI[3][hI[0X00004]]; hI = jI
                                                                            [II]; do II = II + 0X1; end
                                                                            ; do (XI)[0X003] = XI[3][hI[4]]; end
                                                                            ; hI = jI[II]; II = II + 0X1; XI[3] = XI
                                                                            [0X003][hI[0X00004]]; hI = jI[II]; II = II +
                                                                            0X001; (XI)[0X4] = hI[5]; do II = II + 0X001; end
                                                                            ; pr = 0X002; (XI[pr])(XI[pr + 0X1], XI
                                                                            [pr + 2]); do eI = pr - 0X1; end
                                                                            ; II = II + 1; do II = II + 1; end
                                                                            ; do hI = jI[II]; end
                                                                            ; do II = II + 1; end
                                                                            ; II = hI[1];
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr ~= 0x000A then (XI)[hI[0X0006]] = {
                                                                                t({}, 0X01, hI[1]) }; else
                                                                            XI[0X0] = CI[hI[5]]; II = II + 0X1; II = II +
                                                                            1; hI = jI[II]; do II = II + 0x1; end
                                                                            ; XI[0] = XI[0][hI[0X00004]]; do II = II +
                                                                                0X1; end
                                                                            ; eI = 0; XI[eI] = XI[eI](); hI = jI[II]; do II =
                                                                                II + 0X0001; end
                                                                            ; if not XI[0] then II = hI[1]; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    if not (Qr < 0X10) then
                                                                        if Qr < 0X0011 then
                                                                            (XI)[0] = CI[hI[5]]; II = II + 1; II = II + 1; local Nr = 0X00000; do hI =
                                                                                jI[II]; end
                                                                            ; do II = II + 1; end
                                                                            ; local pr = XI[0X0]; do (XI)[Nr + 0x1] = pr; end
                                                                            ; do (XI)[Nr] = pr[hI[4]]; end
                                                                            ; hI = jI[II]; II = II + 0x01; (XI)[2] = hI
                                                                            [5]; II = II + 1; Nr = 0X0; do XI[Nr] = XI
                                                                                [Nr](XI[Nr + 0X1], XI[Nr + 0X2]); end
                                                                            ; eI = Nr; hI = jI[II]; II = II + 0X0001; (XI)[0x000] =
                                                                            XI[0][hI[0X0004]]; hI = jI[II]; II = II +
                                                                            0X001; (XI)[0] = XI[0X0][hI[0x00004]]; II =
                                                                            II + 1; do II = II + 0x001; end
                                                                            ; hI = jI[II]; do II = II + 0X001; end
                                                                            ; XI[0X0000] = XI[0][hI[0X4]]; hI = jI[II]; II =
                                                                            II + 1; XI[0] = XI[0X0][hI[0X4]]; hI = jI
                                                                            [II]; II = II + 1; XI[0X0] = XI[0][hI[0X4]]; do hI =
                                                                                jI[II]; end
                                                                            ; II = II + 0X1; XI[0X0] = XI[0X00000]
                                                                            [hI[0X4]]; do hI = jI[II]; end
                                                                            ; II = II + 0X1; (XI)[0] = XI[0][hI[4]]; II =
                                                                            II + 0X0001; do II = II + 0X1; end
                                                                            ; hI = jI[II]; II = II + 1; (XI)[0X1] = XI
                                                                            [0][hI[0x4]]; hI = jI[II]; II = II + 1; (XI)[0x1] =
                                                                            XI[0X1][hI[0X04]]; II = II + 0x001; II = II +
                                                                            0X00001; hI = jI[II]; II = II + 0X001; XI[2] =
                                                                            CI[hI[0X5]]; do hI = jI[II]; end
                                                                            ; II = II + 0x1; do (XI)[2] = XI[0X2]
                                                                                [hI[0X0004]]; end
                                                                            ; II = II + 1; II = II + 1; hI = jI[II]; II =
                                                                            II + 0X1; XI[0X03] = hI[0X00001]; do hI = jI
                                                                                [II]; end
                                                                            ; II = II + 0X1; (XI)[0X04] = hI[1]; do hI =
                                                                                jI[II]; end
                                                                            ; II = II + 0x0001; XI[5] = hI[1]; II = II +
                                                                            1; Nr = 2; eI = Nr + 0X4 - 1; (XI)[Nr] = XI
                                                                            [Nr](t(XI, Nr + 0X1, eI)); eI = Nr; II = II +
                                                                            0X1; II = II + 1; do hI = jI[II]; end
                                                                            ; II = II + 0X1; if XI[1] == XI[0x02] then else II =
                                                                                hI[6]; end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if Qr == 0X12 then
                                                                                    do
                                                                                        for Nr = hI[6], hI[0X1] do
                                                                                            do (XI)[Nr] = nil; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else XI[hI[6]] = CI[hI[0X00005]]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr == 15 then
                                                                            repeat
                                                                                local Nr, pr, mr = uI, XI, hI[6]; local lr = {}; for cr, Yr in q, Nr do
                                                                                    for Ur, xr in q, Yr do
                                                                                        if xr[1] == pr and xr[0X2] >= mr then
                                                                                            local fr = xr[0X2]; if not lr[fr] then lr[fr] = {
                                                                                                    pr[fr] }; end
                                                                                            ; xr[0x01] = lr[fr]; do (xr)[2] = 1; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            until 0.9707074117776042
                                                                            ;
                                                                        else
                                                                            do
                                                                                repeat
                                                                                    local Nr, pr = uI, (XI); local mr = {}; for lr, cr in q, Nr do
                                                                                        for Yr, Ur in q, cr do
                                                                                            if not (Ur[1] == pr and Ur[2] >= 0) then else
                                                                                                local xr = Ur[2]; if not mr[xr] then mr[xr] = {
                                                                                                        pr[xr] }; end
                                                                                                ; Ur[0x1] = mr[xr]; Ur[2] = 0X01;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                until 2017531101
                                                                                ;
                                                                            end
                                                                            ; do return; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end); do
                                                    if RI then
                                                        if HI then
                                                            if sI ~= 0X1 then
                                                                do return XI[TI](t(XI, TI + 1, eI)); end
                                                                ;
                                                            else
                                                                do return XI[TI](); end
                                                                ;
                                                            end
                                                            ;
                                                        elseif TI then
                                                            do return t(XI, TI, sI); end
                                                            ;
                                                        end
                                                        ;
                                                    else
                                                        if U(HI) == '\115tr\105\110g' then
                                                            if not (d(HI, 'a\116t\101\109pt to \121\105e\108\100 \097cros\115\032met\097\109e\116\104od\047C\037-cal\108 bou\110\100\097\114y')) then else
                                                                do return _(); end
                                                                ;
                                                            end
                                                            ; do
                                                                if not (d(HI, '\094.\045\058\037\100+:\032')) then (f)(
                                                                    HI, 0); else f(
                                                                    'L\117\114ap\104\032Sc\114\105\112t\058' ..
                                                                    (OI[II - 1] or "\040i\110\116er\110al\041") ..
                                                                    ': ' .. x(HI), 0); end
                                                                ;
                                                            end
                                                            ;
                                                        else f(HI, 0); end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end; else PI = function(...)
                                                local II = (0X1); local XI = {}; local BI = { [0X00001] = XI, [0X2] = JI }; local SI = ((o and o() or _ENV)); local eI = 0; local zI, bI =
                                                US(...); zI = zI - 0X001; local CI = (SI == E and oI or SI); do
                                                    for hI = 0X0, zI do
                                                        if nI > hI then (XI)[hI] = bI[hI + 0X0001]; else break; end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ; if not aI then bI = nil; else
                                                    if not (iI) then else XI[nI] = { n = zI >= nI and zI - nI + 0X1 or
                                                        0X000, t(bI, nI + 0X1, zI + 0x1) }; end
                                                    ;
                                                end
                                                ; if CI ~= SI then
                                                    if J then J(PI, CI); else _ENV = CI; end
                                                    ;
                                                end
                                                ; local RI, HI, TI, sI = Y(function()
                                                    repeat
                                                        local hI = (jI[II]); local Qr = hI[0X7]; II = II + 0X1; do
                                                            if Qr >= 23 then
                                                                if not (Qr < 35) then
                                                                    if Qr < 0x29 then
                                                                        if not (Qr < 0x26) then
                                                                            if Qr >= 0X27 then
                                                                                if Qr ~= 40 then
                                                                                    do XI[hI[6]] = hI[5]; end
                                                                                    ;
                                                                                else
                                                                                    local Nr, pr = 0X0008, (XI[0X7]); XI[Nr + 0X00001] =
                                                                                    pr; (XI)[Nr] = pr[hI[0x4]]; hI = jI
                                                                                    [II]; II = II + 0x1; (XI)[0Xa] = hI
                                                                                    [0x5]; do II = II + 1; end
                                                                                    ; do Nr = 0X8; end
                                                                                    ; XI[Nr] = XI[Nr](XI[Nr + 0x001],
                                                                                        XI[Nr + 2]); eI = Nr; hI = jI
                                                                                    [II]; II = II + 1; if XI[0x8] then
                                                                                        do II = hI[1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                local Nr = (hI[0X0006]); for pr = Nr, Nr + (hI[1] - 0X0001) do XI[pr] =
                                                                                    bI[nI + (pr - Nr) + 0x1]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if Qr < 36 then
                                                                                local Nr, pr = 0X008, XI[0X7]; do (XI)[Nr + 0x01] =
                                                                                    pr; end
                                                                                ; XI[Nr] = pr[hI[0X4]]; hI = jI[II]; II =
                                                                                II + 1; (XI)[10] = hI[0X5]; do II = II +
                                                                                    1; end
                                                                                ; Nr = 8; XI[Nr] = XI[Nr](XI[Nr + 0x1],
                                                                                    XI[Nr + 2]); eI = Nr; hI = jI[II]; do II =
                                                                                    II + 1; end
                                                                                ; if not XI[0X8] then II = hI[1]; end
                                                                                ;
                                                                            else
                                                                                if Qr == 0x0025 then XI[hI[6]] = R(
                                                                                    XI[hI[1]], XI[hI[3]]); else
                                                                                    if not (XI[hI[1]] <= XI[hI[3]]) then II =
                                                                                        hI[6]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr < 0x02C then
                                                                            do
                                                                                if Qr < 0X2A then
                                                                                    do XI[hI[6]] = CI[hI[0X5]]; end
                                                                                    ;
                                                                                else
                                                                                    if Qr == 0X2B then
                                                                                        (XI)[0] = CI[hI[5]]; II = II + 1; II =
                                                                                        II + 0X1; hI = jI[II]; II = II +
                                                                                        1; (XI)[0X00] = XI[0][hI[4]]; II =
                                                                                        II + 1; do eI = 0X00; end
                                                                                        ; (XI)[eI] = XI[eI](); do II = II +
                                                                                            0x1; end
                                                                                        ; II = II + 1; hI = jI[II]; II =
                                                                                        II + 1; if not XI[0x0] then
                                                                                            do II = hI[1]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        local Nr, pr = 0X8, XI[0X00007]; do XI[Nr + 1] =
                                                                                            pr; end
                                                                                        ; XI[Nr] = pr[hI[4]]; hI = jI
                                                                                        [II]; II = II + 1; XI[10] = hI
                                                                                        [0x5]; do II = II + 1; end
                                                                                        ; Nr = 0X8; XI[Nr] = XI[Nr](
                                                                                        XI[Nr + 0X1], XI[Nr + 0x2]); do eI =
                                                                                            Nr; end
                                                                                        ; hI = jI[II]; II = II + 0X01; if not (XI[8]) then else II =
                                                                                            hI[1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if Qr >= 45 then
                                                                                if Qr ~= 46 then
                                                                                    do (XI)[5] = hI[0X0005]; end
                                                                                    ; local Nr = (EI[1]); II = II + 1; do (Nr[1])[Nr[0X002]] =
                                                                                        XI[0X5]; end
                                                                                    ; hI = jI[II]; II = II + 0X1; II = hI
                                                                                    [1];
                                                                                else
                                                                                    local Nr, pr = 8, (XI[0X07]); XI[Nr + 0X1] =
                                                                                    pr; XI[Nr] = pr[hI[4]]; hI = jI[II]; II =
                                                                                    II + 1; XI[0XA] = hI[5]; II = II +
                                                                                    0X001; Nr = 8; do (XI)[Nr] = XI[Nr](
                                                                                        XI[Nr + 1], XI[Nr + 2]); end
                                                                                    ; eI = Nr; hI = jI[II]; do II = II +
                                                                                        0X1; end
                                                                                    ; if XI[8] then
                                                                                        do II = hI[1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    if not (Qr < 0X01D) then
                                                                        if not (Qr < 32) then
                                                                            if Qr < 33 then
                                                                                local pr = (XI[0X7]); local Nr = (8); do XI[Nr + 0X001] =
                                                                                    pr; end
                                                                                ; (XI)[Nr] = pr[hI[0X4]]; do hI = jI[II]; end
                                                                                ; II = II + 1; (XI)[0XA] = hI[0X05]; II =
                                                                                II + 0x001; Nr = 0X8; (XI)[Nr] = XI[Nr](
                                                                                XI[Nr + 0X1], XI[Nr + 0x002]); eI = Nr; II =
                                                                                II + 1; II = II + 0X1; hI = jI[II]; II =
                                                                                II + 0x1; do
                                                                                    if XI[0x8] then II = hI[0x001]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if Qr ~= 34 then
                                                                                    local Nr = hI[6]; local pr, mr, lr =
                                                                                    XI[Nr](); if pr then
                                                                                        (XI)[Nr + 1] = mr; (XI)[Nr + 2] =
                                                                                        lr; II = hI[0X001];
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    local Nr, pr = 8, (XI[7]); (XI)[Nr + 1] =
                                                                                    pr; (XI)[Nr] = pr[hI[4]]; hI = jI
                                                                                    [II]; do II = II + 0X1; end
                                                                                    ; XI[10] = hI[5]; do II = II + 0x1; end
                                                                                    ; Nr = 0X8; XI[Nr] = XI[Nr](XI[Nr + 1],
                                                                                        XI[Nr + 0X02]); eI = Nr; II = II +
                                                                                    0X1; II = II + 0x00001; hI = jI[II]; II =
                                                                                    II + 1; do
                                                                                        if XI[8] then II = hI[1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (Qr < 0x1E) then
                                                                                if Qr ~= 0X1f then
                                                                                    local Nr = (hI[6]); local pr = (g(function(...)
                                                                                        (_)(); do
                                                                                            for mr, lr, cr, Yr, Ur, xr, fr, Zr, Dr, Vr in ... do
                                                                                                _(true,
                                                                                                    { mr, lr, cr, Yr, Ur,
                                                                                                        xr, fr, Zr, Dr,
                                                                                                        Vr }); end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end)); pr(XI[Nr], XI[Nr + 1],
                                                                                        XI[Nr + 2]); eI = Nr; do XI[Nr] =
                                                                                        pr; end
                                                                                    ; II = hI[1];
                                                                                else
                                                                                    (XI[7])[hI[0X00005]] = hI[0X4]; hI =
                                                                                    jI[II]; II = II + 1; do XI[7][hI[0x5]] =
                                                                                        hI[4]; end
                                                                                    ; hI = jI[II]; II = II + 1; II = hI
                                                                                    [0X0001];
                                                                                end
                                                                                ;
                                                                            else
                                                                                local pr = (XI[7]); local Nr = 8; (XI)[Nr + 0x0001] =
                                                                                pr; do (XI)[Nr] = pr[hI[4]]; end
                                                                                ; hI = jI[II]; II = II + 1; XI[10] = hI
                                                                                [5]; II = II + 1; Nr = 0X8; (XI)[Nr] = XI
                                                                                [Nr](XI[Nr + 1], XI[Nr + 2]); eI = Nr; do II =
                                                                                    II + 0x1; end
                                                                                ; II = II + 0X1; hI = jI[II]; II = II +
                                                                                0x0001; do
                                                                                    if XI[8] then II = hI[1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr >= 26 then
                                                                            if Qr >= 0X01B then
                                                                                if Qr ~= 28 then
                                                                                    local Nr = (EI[hI[0X001]]); (XI)[hI[6]] =
                                                                                    Nr[0X1][Nr[0X2]];
                                                                                else
                                                                                    do (XI[hI[0x6]])[hI[5]] = hI[4]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                local Nr, pr = hI[6], (hI[1]); eI = Nr +
                                                                                pr - 0x0001; repeat
                                                                                    local mr, lr, cr = uI, XI, {}; for Yr, Ur in q, mr do
                                                                                        for xr, fr in q, Ur do
                                                                                            if not (fr[1] == lr and fr[2] >= 0X0) then else
                                                                                                local Zr = fr[0x2]; if not cr[Zr] then cr[Zr] = {
                                                                                                        lr[Zr] }; end
                                                                                                ; fr[1] = cr[Zr]; do (fr)[0X2] = 0X00001; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                until true
                                                                                ; return true, Nr, pr;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if Qr >= 0x018 then
                                                                                if Qr == 0x00019 then
                                                                                    local pr = (XI[0X00007]); local Nr = 0X8; do XI[Nr + 1] =
                                                                                        pr; end
                                                                                    ; (XI)[Nr] = pr[hI[4]]; hI = jI[II]; II =
                                                                                    II + 0x0001; XI[10] = hI[0x5]; II =
                                                                                    II + 0X1; Nr = 8; XI[Nr] = XI[Nr](
                                                                                    XI[Nr + 1], XI[Nr + 0X2]); eI = Nr; II =
                                                                                    II + 0X0001; do II = II + 0X1; end
                                                                                    ; do hI = jI[II]; end
                                                                                    ; II = II + 0X01; if not XI[0X8] then II =
                                                                                        hI[0x01]; end
                                                                                    ;
                                                                                else
                                                                                    if XI[hI[0X006]] then II = hI[1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                local Nr, pr = 0X8, (XI[7]); XI[Nr + 0X01] =
                                                                                pr; XI[Nr] = pr[hI[4]]; hI = jI[II]; do II =
                                                                                    II + 0X01; end
                                                                                ; do (XI)[10] = hI[0x05]; end
                                                                                ; II = II + 0X1; Nr = 0X8; (XI)[Nr] = XI
                                                                                [Nr](XI[Nr + 1], XI[Nr + 2]); eI = Nr; hI =
                                                                                jI[II]; II = II + 0X1; do
                                                                                    if not (not XI[8]) then else
                                                                                        do II = hI[1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                do
                                                                    if not (Qr >= 0x0b) then
                                                                        do
                                                                            if Qr >= 5 then
                                                                                if Qr < 8 then
                                                                                    if not (Qr >= 6) then
                                                                                        local Nr = (EI[0]); (XI)[0] = Nr
                                                                                        [1][Nr[2]]; local mr = XI[0]; II =
                                                                                        II + 0X1; II = II + 0x1; hI = jI
                                                                                        [II]; do II = II + 0x1; end
                                                                                        ; local pr = (0); XI[pr + 0X1] =
                                                                                        mr; XI[pr] = mr[hI[0X4]]; hI = jI
                                                                                        [II]; II = II + 1; do (XI)[0X0002] =
                                                                                            hI[0x5]; end
                                                                                        ; do II = II + 0x001; end
                                                                                        ; pr = 0; XI[pr] = XI[pr](
                                                                                        XI[pr + 0X1], XI[pr + 0X2]); do eI =
                                                                                            pr; end
                                                                                        ; hI = jI[II]; do II = II +
                                                                                            0X0001; end
                                                                                        ; if not XI[0X0] then II = hI
                                                                                            [0X1]; end
                                                                                        ;
                                                                                    else
                                                                                        if Qr == 0x07 then
                                                                                            (XI[7])[hI[0X5]] = hI
                                                                                            [0X00004]; do hI = jI[II]; end
                                                                                            ; do II = II + 0X1; end
                                                                                            ; do (XI[7])[hI[5]] = hI[4]; end
                                                                                            ; hI = jI[II]; II = II + 0X1; II =
                                                                                            hI[1];
                                                                                        else
                                                                                            local pr = (XI[7]); local Nr = (8); (XI)[Nr + 0X1] =
                                                                                            pr; do XI[Nr] = pr[hI[4]]; end
                                                                                            ; hI = jI[II]; II = II + 1; (XI)[0X0A] =
                                                                                            hI[5]; II = II + 0x1; Nr = 8; do XI[Nr] =
                                                                                                XI[Nr](XI[Nr + 1],
                                                                                                    XI[Nr + 2]); end
                                                                                            ; do eI = Nr; end
                                                                                            ; hI = jI[II]; II = II + 1; if not (not XI[8]) then else II =
                                                                                                hI[0x1]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if not (Qr < 0X9) then
                                                                                        if Qr == 10 then
                                                                                            if not (not XI[hI[0X0006]]) then else
                                                                                                do II = hI[1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            local Nr, pr = 8, XI[0x7]; do XI[Nr + 1] =
                                                                                                pr; end
                                                                                            ; XI[Nr] = pr[hI[4]]; hI = jI
                                                                                            [II]; II = II + 1; (XI)[0xa] =
                                                                                            hI[0X5]; II = II + 1; Nr = 0x8; (XI)[Nr] =
                                                                                            XI[Nr](XI[Nr + 1],
                                                                                                XI[Nr + 0x02]); eI = Nr; do II =
                                                                                                II + 1; end
                                                                                            ; II = II + 1; hI = jI[II]; do II =
                                                                                                II + 1; end
                                                                                            ; if not XI[0X8] then II = hI
                                                                                                [0X1]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        local pr = nil; local Nr = hI[1]; local mr =
                                                                                        Nr[6]; local lr = #mr; do
                                                                                            if lr > 0 then
                                                                                                do pr = {}; end
                                                                                                ; do
                                                                                                    for cr = 0X1, lr do
                                                                                                        local Yr = mr
                                                                                                        [cr]; do
                                                                                                            if Yr[0X1] == 0X00 then (pr)[cr - 1] = {
                                                                                                                    XI,
                                                                                                                    Yr[2] }; else (pr)[cr - 0X1] =
                                                                                                                EI[Yr[2]]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ; L(uI, pr);
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ; do (XI)[hI[0X6]] = dS(CI, Nr,
                                                                                                pr); end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (Qr < 2) then
                                                                                    if Qr >= 0X0003 then
                                                                                        if Qr ~= 0X04 then
                                                                                            local Nr, pr = 0X8, XI[7]; XI[Nr + 1] =
                                                                                            pr; (XI)[Nr] = pr[hI[4]]; hI =
                                                                                            jI[II]; II = II + 1; XI[0XA] =
                                                                                            hI[5]; II = II + 0X1; Nr = 0X08; do (XI)[Nr] =
                                                                                                XI[Nr](XI[Nr + 0x1],
                                                                                                    XI[Nr + 0x2]); end
                                                                                            ; eI = Nr; do II = II + 0x01; end
                                                                                            ; II = II + 0X1; hI = jI[II]; II =
                                                                                            II + 1; if not (not XI[8]) then else
                                                                                                do II = hI[0X1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            local Nr, pr = 0X8, (XI[0x7]); (XI)[Nr + 0X1] =
                                                                                            pr; (XI)[Nr] = pr[hI[4]]; hI =
                                                                                            jI[II]; II = II + 0x1; XI[0x0000A] =
                                                                                            hI[5]; II = II + 0x1; Nr = 0X0008; XI[Nr] =
                                                                                            XI[Nr](XI[Nr + 0X001],
                                                                                                XI[Nr + 2]); eI = Nr; II =
                                                                                            II + 0x1; II = II + 1; do hI =
                                                                                                jI[II]; end
                                                                                            ; II = II + 0X1; if not (XI[0X08]) then else II =
                                                                                                hI[0X1]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else XI[hI[0X6]] = XI[hI[1]] >
                                                                                        XI[hI[0X3]]; end
                                                                                    ;
                                                                                else
                                                                                    if Qr ~= 0x1 then
                                                                                        local Nr, pr = 0X0008, (XI[7]); XI[Nr + 0x01] =
                                                                                        pr; do (XI)[Nr] = pr[hI[0X4]]; end
                                                                                        ; hI = jI[II]; do II = II +
                                                                                            0X0001; end
                                                                                        ; (XI)[0X000a] = hI[0X00005]; do II =
                                                                                            II + 0X1; end
                                                                                        ; do Nr = 0X8; end
                                                                                        ; XI[Nr] = XI[Nr](XI[Nr + 1],
                                                                                            XI[Nr + 0X2]); eI = Nr; do hI =
                                                                                            jI[II]; end
                                                                                        ; do II = II + 0X01; end
                                                                                        ; if XI[0X8] then
                                                                                            do II = hI[0X01]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        local Nr, pr = 0x00008, XI[0X7]; (XI)[Nr + 1] =
                                                                                        pr; XI[Nr] = pr[hI[4]]; hI = jI
                                                                                        [II]; II = II + 0X1; XI[0X00a] =
                                                                                        hI[5]; II = II + 1; Nr = 8; do (XI)[Nr] =
                                                                                            XI[Nr](XI[Nr + 0X1],
                                                                                                XI[Nr + 0X0002]); end
                                                                                        ; eI = Nr; hI = jI[II]; II = II +
                                                                                        0x1; if not XI[8] then II = hI
                                                                                            [0X1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    elseif not (Qr >= 0x000011) then
                                                                        do
                                                                            if Qr >= 0xE then
                                                                                if not (Qr < 0xF) then
                                                                                    do
                                                                                        if Qr ~= 16 then
                                                                                            (XI)[5] = CI[hI[0X005]]; local pr = (XI[0x3]); hI =
                                                                                            jI[II]; local mr = (2); II =
                                                                                            II + 1; local Nr = (6); XI[Nr + 0x1] =
                                                                                            pr; (XI)[Nr] = pr[hI[4]]; do II =
                                                                                                II + 0X0001; end
                                                                                            ; Nr = 0X06; local lr = 0; do
                                                                                                if mr ~= 0X0 then
                                                                                                    do eI = Nr + mr - 1; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ; local cr, Yr = nil, nil; if mr ~= 0x1 then cr, Yr =
                                                                                                US(XI[Nr](t(XI, Nr + 0X1,
                                                                                                    eI))); else cr, Yr =
                                                                                                US(XI[Nr]()); end
                                                                                            ; do
                                                                                                if lr ~= 1 then
                                                                                                    if lr ~= 0x0 then
                                                                                                        cr = Nr + lr -
                                                                                                        0X2; eI = cr + 1;
                                                                                                    else
                                                                                                        do cr = cr + Nr -
                                                                                                            0x01; end
                                                                                                        ; eI = cr;
                                                                                                    end
                                                                                                    ; local xr = (0X0000); do
                                                                                                        for fr = Nr, cr do
                                                                                                            xr = xr + 1; XI[fr] =
                                                                                                            Yr[xr];
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else eI = Nr - 0x1; end
                                                                                                ;
                                                                                            end
                                                                                            ; II = II + 1; II = II + 1; II =
                                                                                            II + 0X1; Nr = 5; mr = 0X000; do lr = 4; end
                                                                                            ; if mr == 0 then else
                                                                                                do eI = Nr + mr - 0X001; end
                                                                                                ;
                                                                                            end
                                                                                            ; cr, Yr = nil; if mr ~= 1 then cr, Yr =
                                                                                                US(XI[Nr](t(XI, Nr + 0x1,
                                                                                                    eI))); else cr, Yr =
                                                                                                US(XI[Nr]()); end
                                                                                            ; if lr == 0X001 then eI = Nr -
                                                                                                1; else
                                                                                                if lr ~= 0 then
                                                                                                    cr = Nr + lr - 2; eI =
                                                                                                    cr + 0x1;
                                                                                                else
                                                                                                    do cr = cr + Nr - 0X1; end
                                                                                                    ; do eI = cr; end
                                                                                                    ;
                                                                                                end
                                                                                                ; local xr = (0); for fr = Nr, cr do
                                                                                                    do xr = xr + 0X1; end
                                                                                                    ; (XI)[fr] = Yr[xr];
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ; II = II + 1; II = II + 0X1; hI =
                                                                                            jI[II]; do II = II + 0X1; end
                                                                                            ; Nr = 0X5; local Ur = (g(function(...)
                                                                                                (_)(); do
                                                                                                    for xr, fr in ... do (_)(
                                                                                                        true, xr, fr); end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end)); (Ur)(XI[Nr],
                                                                                                XI[Nr + 0x01], XI
                                                                                            [Nr + 0x2]); eI = Nr; (XI)[Nr] =
                                                                                            Ur; do II = hI[0X1]; end
                                                                                            ;
                                                                                        else
                                                                                            XI[0X00007][hI[5]] = hI[4]; do hI =
                                                                                                jI[II]; end
                                                                                            ; II = II + 1; XI[7][hI[5]] =
                                                                                            hI[4]; hI = jI[II]; II = II +
                                                                                            0X1; XI[0X7][hI[0x0005]] = hI
                                                                                            [0X4]; do hI = jI[II]; end
                                                                                            ; II = II + 0X1; do II = hI
                                                                                                [0X1]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        repeat
                                                                                            local Nr, pr = uI, XI; local mr = {}; for lr, cr in q, Nr do
                                                                                                for Yr, Ur in q, cr do
                                                                                                    if Ur[0X1] == pr and Ur[2] >= 0 then
                                                                                                        local xr = (Ur[2]); do
                                                                                                            if not (not mr[xr]) then else
                                                                                                                do mr[xr] = {
                                                                                                                        pr[xr] }; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ; (Ur)[0X0001] =
                                                                                                        mr[xr]; Ur[0x2] = 1;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        until true
                                                                                        ;
                                                                                    end
                                                                                    ; return;
                                                                                end
                                                                                ;
                                                                            else
                                                                                do
                                                                                    if not (Qr < 0XC) then
                                                                                        do
                                                                                            if Qr ~= 13 then
                                                                                                do XI[hI[6]] = {
                                                                                                        t({}, 0X1, hI[1]) }; end
                                                                                                ;
                                                                                            else
                                                                                                local pr = XI[0x7]; local Nr = 0X8; (XI)[Nr + 1] =
                                                                                                pr; XI[Nr] = pr[hI[4]]; hI =
                                                                                                jI[II]; II = II + 0X1; do XI[0xa] =
                                                                                                    hI[0X5]; end
                                                                                                ; II = II + 1; Nr = 0X008; do (XI)[Nr] =
                                                                                                    XI[Nr](XI[Nr + 1],
                                                                                                        XI[Nr + 0X2]); end
                                                                                                ; eI = Nr; II = II + 1; II =
                                                                                                II + 0X1; hI = jI[II]; II =
                                                                                                II + 1; if XI[0x08] then II =
                                                                                                    hI[1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else XI[hI[0X06]] = b(XI[hI[1]],
                                                                                            XI[hI[3]]); end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr < 0X0014 then
                                                                            if not (Qr < 0x012) then
                                                                                do
                                                                                    if Qr ~= 19 then
                                                                                        local Nr, pr = 8, (XI[7]); (XI)[Nr + 0X01] =
                                                                                        pr; do (XI)[Nr] = pr[hI[0X4]]; end
                                                                                        ; hI = jI[II]; do II = II +
                                                                                            0X00001; end
                                                                                        ; (XI)[0xa] = hI[5]; II = II + 1; Nr = 0X8; do (XI)[Nr] =
                                                                                            XI[Nr](XI[Nr + 1],
                                                                                                XI[Nr + 0x00002]); end
                                                                                        ; eI = Nr; do hI = jI[II]; end
                                                                                        ; II = II + 1; if not (XI[0x8]) then else II =
                                                                                            hI[0X0001]; end
                                                                                        ;
                                                                                    else
                                                                                        XI[0X00] = hI[5]; hI = jI[II]; II =
                                                                                        II + 1; XI[1] = CI[hI[0X5]]; II =
                                                                                        II + 1; do II = II + 1; end
                                                                                        ; hI = jI[II]; II = II + 1; XI[0X2] =
                                                                                        XI[1][hI[0X4]]; hI = jI[II]; do II =
                                                                                            II + 1; end
                                                                                        ; (XI)[3] = XI[1][hI[4]]; do II =
                                                                                            II + 0x01; end
                                                                                        ; do II = II + 1; end
                                                                                        ; hI = jI[II]; II = II + 0X00001; do (XI)[4] =
                                                                                            XI[0X002][hI[0X04]]; end
                                                                                        ; II = II + 0x1; II = II + 1; do hI =
                                                                                            jI[II]; end
                                                                                        ; II = II + 1; do (XI[0x4])[hI[0x5]] =
                                                                                            hI[0x4]; end
                                                                                        ; hI = jI[II]; II = II + 1; XI[4][hI[0x005]] =
                                                                                        hI[4]; hI = jI[II]; do II = II +
                                                                                            0X1; end
                                                                                        ; (XI[4])[hI[5]] = hI[0x04]; hI =
                                                                                        jI[II]; II = II + 1; (XI[4])[hI[0X5]] =
                                                                                        hI[4]; hI = jI[II]; do II = II +
                                                                                            0X1; end
                                                                                        ; XI[3][hI[0X5]] = hI[4]; hI = jI
                                                                                        [II]; II = II + 1; (XI[3])[hI[0X5]] =
                                                                                        hI[4]; hI = jI[II]; do II = II +
                                                                                            1; end
                                                                                        ; do (XI[0x0003])[hI[0X005]] = hI
                                                                                            [4]; end
                                                                                        ; hI = jI[II]; II = II + 1; (XI)[5] =
                                                                                        CI[hI[5]]; II = II + 1; II = II +
                                                                                        1; do II = II + 0X1; end
                                                                                        ; do eI = 5; end
                                                                                        ; (XI)[eI] = XI[eI](); II = II +
                                                                                        1; II = II + 1; hI = jI[II]; II =
                                                                                        II + 0x01; XI[5] = XI[0X005]
                                                                                        [hI[4]]; do II = II + 1; end
                                                                                        ; do II = II + 1; end
                                                                                        ; hI = jI[II]; II = II + 1; local Nr = 0x006; XI[5][hI[0X005]] =
                                                                                        hI[0X00004]; hI = jI[II]; do II =
                                                                                            II + 1; end
                                                                                        ; local mr = 2; do XI[5] = CI
                                                                                            [hI[0X5]]; end
                                                                                        ; hI = jI[II]; II = II + 1; local pr =
                                                                                        XI[1]; (XI)[Nr + 1] = pr; XI[Nr] =
                                                                                        pr[hI[4]]; II = II + 0X1; Nr = 6; local lr = 0; if mr ~= 0 then eI =
                                                                                            Nr + mr - 0X01; end
                                                                                        ; local cr, Yr = nil, nil; if mr ~= 0X1 then cr, Yr =
                                                                                            US(XI[Nr](t(XI, Nr + 1, eI))); else cr, Yr =
                                                                                            US(XI[Nr]()); end
                                                                                        ; if lr == 1 then eI = Nr -
                                                                                            0X00001; else
                                                                                            if lr ~= 0x0 then
                                                                                                cr = Nr + lr - 2; eI = cr +
                                                                                                0x1;
                                                                                            else
                                                                                                do cr = cr + Nr - 0X1; end
                                                                                                ; eI = cr;
                                                                                            end
                                                                                            ; local xr = (0); for fr = Nr, cr do
                                                                                                xr = xr + 1; XI[fr] = Yr
                                                                                                [xr];
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ; II = II + 1; Nr = 0X5; do mr = 0X000; end
                                                                                        ; lr = 0X4; if mr ~= 0X0 then eI =
                                                                                            Nr + mr - 0X1; end
                                                                                        ; cr, Yr = nil; if mr ~= 1 then cr, Yr =
                                                                                            US(XI[Nr](t(XI, Nr + 0x001,
                                                                                                eI))); else cr, Yr = US(
                                                                                            XI[Nr]()); end
                                                                                        ; do
                                                                                            if lr ~= 0X1 then
                                                                                                do
                                                                                                    if lr ~= 0 then
                                                                                                        cr = Nr + lr - 2; eI =
                                                                                                        cr + 1;
                                                                                                    else
                                                                                                        cr = cr + Nr - 1; eI =
                                                                                                        cr;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ; local xr = (0X00000); for fr = Nr, cr do
                                                                                                    xr = xr + 0x1; (XI)[fr] =
                                                                                                    Yr[xr];
                                                                                                end
                                                                                                ;
                                                                                            else eI = Nr - 0X01; end
                                                                                            ;
                                                                                        end
                                                                                        ; hI = jI[II]; II = II + 0X01; Nr = 0x5; local Ur =
                                                                                        g(function(...)
                                                                                            _(); for xr, fr in ... do (_)(
                                                                                                true, xr, fr); end
                                                                                            ;
                                                                                        end); (Ur)(XI[Nr], XI[Nr + 0x1],
                                                                                            XI[Nr + 0X0002]); eI = Nr; XI[Nr] =
                                                                                        Ur; do II = hI[1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                XI[0X8] = CI[hI[5]]; local Nr = (0X8); hI =
                                                                                jI[II]; II = II + 0x1; (XI)[8] = XI[8]
                                                                                [hI[0X004]]; hI = jI[II]; II = II + 1; XI[9] =
                                                                                hI[1]; II = II + 1; do XI[Nr] = XI[Nr](
                                                                                    XI[Nr + 1]); end
                                                                                ; eI = Nr; II = II + 0X001; II = II + 1; hI =
                                                                                jI[II]; do II = II + 0X1; end
                                                                                ; do XI[0X07][hI[5]] = XI[0x008]; end
                                                                                ; hI = jI[II]; II = II + 0X1; do II = hI
                                                                                    [1]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if not (Qr < 0X0015) then
                                                                                    if Qr == 0X16 then
                                                                                        for Nr = hI[0X6], hI[0X01] do (XI)[Nr] = nil; end
                                                                                        ;
                                                                                    else
                                                                                        local Nr = (0X8); local pr = (XI[0X7]); (XI)[Nr + 0X1] =
                                                                                        pr; XI[Nr] = pr[hI[0X0004]]; do hI =
                                                                                            jI[II]; end
                                                                                        ; II = II + 1; (XI)[10] = hI
                                                                                        [0x5]; do II = II + 1; end
                                                                                        ; Nr = 0X8; XI[Nr] = XI[Nr](
                                                                                        XI[Nr + 1], XI[Nr + 0X2]); eI =
                                                                                        Nr; II = II + 1; II = II + 0x1; hI =
                                                                                        jI[II]; II = II + 1; do
                                                                                            if not (XI[8]) then else
                                                                                                do II = hI[0X1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else II = hI[0X1]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    until false
                                                    ;
                                                end); if not (RI) then
                                                    if U(HI) ~= "s\116ri\110\103" then (f)(HI, 0); else
                                                        if not (d(HI, "\097t\116em\112\116 t\111\032\121i\101\108\100 ac\114o\115s \109\101\116\097m\101th\111d/C%\045\099a\108\108 \098oun\100a\114y")) then else return
                                                            _(); end
                                                        ; if not (d(HI, "\094.-:%\100+: ")) then (f)(HI, 0); else f(
                                                            "L\117r\097\112h\032Sc\114\105p\116:" ..
                                                            (OI[II - 1] or "(i\110te\114nal)") .. ": " .. x(HI), 0x00000); end
                                                        ;
                                                    end
                                                    ;
                                                else
                                                    if HI then
                                                        if sI ~= 1 then
                                                            do return XI[TI](t(XI, TI + 1, eI)); end
                                                            ;
                                                        else return XI[TI](); end
                                                        ;
                                                    else
                                                        if not (TI) then else return t(XI, TI, sI); end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end; end
                                        ;
                                    end
                                    ;
                                else
                                    if not (FI < 6) then
                                        if not (FI >= 0X0007) then PI = function(...)
                                                local eI = (0X000); local II, XI = 1, {}; local BI = ({ [0X2] = JI,
                                                    [0X00001] = XI }); local SI = ((o and o() or _ENV)); local zI, bI =
                                                US(...); zI = zI - 0X0001; local CI = (SI == E and oI or SI); for hI = 0x0, zI do
                                                    do
                                                        if nI > hI then (XI)[hI] = bI[hI + 1]; else break; end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ; do
                                                    if not aI then
                                                        do bI = nil; end
                                                        ;
                                                    else
                                                        if not (iI) then else (XI)[nI] = { n = zI >= nI and zI - nI + 1 or
                                                            0, t(bI, nI + 0x1, zI + 1) }; end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ; if CI == SI then else
                                                    if J then J(PI, CI); else _ENV = CI; end
                                                    ;
                                                end
                                                ; local RI, HI, TI, sI = Y(function()
                                                    repeat
                                                        local hI = (jI[II]); local Qr = (hI[0x7]); II = II + 1; if Qr >= 13 then
                                                            if Qr < 19 then
                                                                if not (Qr < 0x000010) then
                                                                    if not (Qr >= 17) then
                                                                        do (XI)[9] = CI[hI[5]]; end
                                                                        ; II = II + 1; II = II + 0x00001; hI = jI[II]; do II =
                                                                            II + 0X1; end
                                                                        ; XI[0X9] = XI[9][hI[0X4]]; do II = II + 1; end
                                                                        ; II = II + 1; hI = jI[II]; local Nr = 0X9; II =
                                                                        II + 0X1; (XI)[0Xa] = hI[0X00001]; II = II + 1; (XI[Nr])(
                                                                        XI[Nr + 0X0001]); do eI = Nr - 0X00001; end
                                                                        ; hI = jI[II]; II = II + 1; II = hI[1];
                                                                    else
                                                                        if Qr == 18 then
                                                                            local Nr = (hI[1]); local pr = (nil); local mr =
                                                                            Nr[0X0006]; local lr = #mr; if not (lr > 0X0) then else
                                                                                pr = {}; do
                                                                                    for cr = 1, lr do
                                                                                        local Yr = (mr[cr]); if Yr[1] ~= 0 then pr[cr - 0X01] =
                                                                                            EI[Yr[2]]; else (pr)[cr - 0X00001] = {
                                                                                                XI, Yr[0X2] }; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ; (L)(uI, pr);
                                                                            end
                                                                            ; XI[hI[0X6]] = dS(CI, Nr, pr);
                                                                        else
                                                                            XI[7] = CI[hI[5]]; hI = jI[II]; do II = II +
                                                                                0X1; end
                                                                            ; do XI[0X7] = XI[0X7][hI[0X4]]; end
                                                                            ; II = II + 0X00001; II = II + 1; hI = jI
                                                                            [II]; II = II + 0X1; (XI)[7] = XI[7][hI[4]]; II =
                                                                            II + 0X1; II = II + 1; hI = jI[II]; do II =
                                                                                II + 1; end
                                                                            ; (XI)[0x07] = XI[0X007][hI[4]]; II = II + 1; II =
                                                                            II + 0X0001; hI = jI[II]; II = II + 0X1; XI[7] =
                                                                            XI[7][hI[4]]; hI = jI[II]; II = II + 1; (XI)[7] =
                                                                            XI[7][hI[0x4]]; II = II + 1; do II = II + 0x1; end
                                                                            ; II = II + 1; (XI)[0X0008] = XI[0x6] - XI
                                                                            [7]; hI = jI[II]; II = II + 1; (XI)[8] = XI
                                                                            [0X008][hI[4]]; do II = II + 1; end
                                                                            ; II = II + 0x0001; hI = jI[II]; do II = II +
                                                                                0X1; end
                                                                            ; if not (not (hI[5] <= XI[8])) then else II =
                                                                                hI[6]; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    if Qr >= 14 then
                                                                        if Qr ~= 0XF then
                                                                            do XI[0x6] = XI[0X00005][hI[0X004]]; end
                                                                            ; hI = jI[II]; II = II + 0X01; XI[0X7] = CI
                                                                            [hI[5]]; hI = jI[II]; II = II + 0X1; (XI)[0X7] =
                                                                            XI[7][hI[4]]; do II = II + 0X001; end
                                                                            ; II = II + 1; hI = jI[II]; local Nr = 8; do II =
                                                                                II + 1; end
                                                                            ; XI[7] = XI[0X7][hI[0X4]]; II = II + 1; II =
                                                                            II + 0X1; hI = jI[II]; II = II + 0x1; XI[7] =
                                                                            XI[0X7][hI[4]]; hI = jI[II]; do II = II + 0X1; end
                                                                            ; XI[7] = XI[7][hI[0X4]]; hI = jI[II]; II =
                                                                            II + 0X1; XI[0X8] = CI[hI[0X5]]; do II = II +
                                                                                0X1; end
                                                                            ; II = II + 0X1; hI = jI[II]; II = II + 0X1; XI[8] =
                                                                            XI[0x08][hI[0x4]]; do II = II + 1; end
                                                                            ; do (XI)[9] = XI[6]; end
                                                                            ; II = II + 1; (XI)[Nr] = XI[Nr](XI[Nr + 0X1]); eI =
                                                                            Nr; hI = jI[II]; II = II + 0X0001; (XI[0x7])[hI[0X5]] =
                                                                            XI[8]; do hI = jI[II]; end
                                                                            ; II = II + 1; II = hI[0x1];
                                                                        else
                                                                            for Nr = hI[0X6], hI[1] do
                                                                                do (XI)[Nr] = nil; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        (XI)[6] = CI[hI[0X5]]; hI = jI[II]; local Nr = 0X6; II =
                                                                        II + 1; (XI)[7] = hI[0X5]; II = II + 1; XI[Nr](
                                                                        XI[Nr + 1]); eI = Nr - 1; do hI = jI[II]; end
                                                                        ; II = II + 0X001; II = hI[1];
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                if Qr < 0x16 then
                                                                    if not (Qr >= 0x0014) then
                                                                        (XI)[9] = CI[hI[5]]; II = II + 1; II = II + 1; hI =
                                                                        jI[II]; II = II + 1; XI[9] = XI[9][hI[4]]; do II =
                                                                            II + 1; end
                                                                        ; II = II + 1; hI = jI[II]; II = II + 1; do (XI)[0X9] =
                                                                            XI[0X9][hI[4]]; end
                                                                        ; local Nr = 10; II = II + 0X001; II = II + 0X1; hI =
                                                                        jI[II]; II = II + 1; (XI)[9] = XI[9][hI[0X0004]]; II =
                                                                        II + 1; II = II + 0X1; hI = jI[II]; II = II + 1; XI[9] =
                                                                        XI[9][hI[0X004]]; hI = jI[II]; II = II + 1; (XI)[0x00a] =
                                                                        CI[hI[5]]; do hI = jI[II]; end
                                                                        ; II = II + 1; do XI[0Xa] = XI[10][hI[0X4]]; end
                                                                        ; II = II + 1; do XI[0x00B] = XI[6]; end
                                                                        ; do II = II + 1; end
                                                                        ; do XI[Nr] = XI[Nr](XI[Nr + 1]); end
                                                                        ; eI = Nr; hI = jI[II]; II = II + 0X1; do XI[9][hI[5]] =
                                                                            XI[0x00A]; end
                                                                        ; hI = jI[II]; II = II + 1; II = hI[1];
                                                                    else
                                                                        do
                                                                            if Qr == 0x15 then XI[hI[0x6]] = b(
                                                                                XI[hI[0X00001]], XI[hI[0X3]]); else (XI)[hI[6]] = -
                                                                                XI[hI[1]]; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    if not (Qr < 24) then
                                                                        do
                                                                            if Qr == 0X19 then
                                                                                do (XI)[hI[0X06]] = CI[hI[0x5]]; end
                                                                                ;
                                                                            else XI[hI[0X6]] = XI[hI[1]] ==
                                                                                XI[hI[0X0003]]; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        do
                                                                            if Qr == 0X17 then XI[hI[6]] = C(
                                                                                XI[hI[0X0001]], XI[hI[3]]); else
                                                                                if not (XI[hI[1]] <= hI[0x00004]) then II =
                                                                                    hI[0X6]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        else
                                                            if not (Qr >= 6) then
                                                                do
                                                                    if not (Qr >= 3) then
                                                                        if not (Qr >= 0X1) then
                                                                            local Nr = (EI[1]); do (XI)[0x9] = Nr[0X1]
                                                                                [Nr[0X00002]]; end
                                                                            ; do II = II + 0X01; end
                                                                            ; local pr = (10); do eI = 0X009; end
                                                                            ; (XI)[eI] = XI[eI](); II = II + 0X001; II =
                                                                            II + 1; II = II + 0x1; do Nr = EI[2]; end
                                                                            ; XI[0XA] = Nr[0x1][Nr[0x0002]]; do hI = jI
                                                                                [II]; end
                                                                            ; II = II + 0x1; (XI)[10] = XI[0X0a][hI[4]]; II =
                                                                            II + 1; II = II + 1; hI = jI[II]; II = II + 1; (XI)[10] =
                                                                            XI[0X000a][hI[4]]; II = II + 0X001; II = II +
                                                                            0X1; hI = jI[II]; II = II + 0X1; local mr = (XI[0XA]); do (XI)[pr + 0X00001] =
                                                                                mr; end
                                                                            ; (XI)[pr] = mr[hI[0X0004]]; do hI = jI[II]; end
                                                                            ; II = II + 1; XI[12] = XI[0X9][hI[4]]; II =
                                                                            II + 1; II = II + 0X0001; do hI = jI[II]; end
                                                                            ; II = II + 0X00001; do (XI)[12] = XI[12]
                                                                                [hI[0x04]]; end
                                                                            ; II = II + 0X00001; II = II + 1; II = II +
                                                                            0X1; pr = 10; XI[pr](XI[pr + 1], XI
                                                                            [pr + 0X002]); do eI = pr - 1; end
                                                                            ; do II = II + 1; end
                                                                            ; II = II + 1; II = II + 0X1; Nr = EI[1]; XI[10] =
                                                                            Nr[1][Nr[2]]; II = II + 1; eI = 0Xa; XI[eI] =
                                                                            XI[eI](); II = II + 0X1; XI[9] = XI[10]; hI =
                                                                            jI[II]; II = II + 1; do II = hI[0X00001]; end
                                                                            ;
                                                                        else
                                                                            if Qr == 2 then
                                                                                do
                                                                                    repeat
                                                                                        local Nr, pr = uI, (XI); local mr = ({}); for lr, cr in q, Nr do
                                                                                            for Yr, Ur in q, cr do
                                                                                                if not (Ur[1] == pr and Ur[0X2] >= 0x0) then else
                                                                                                    local xr = (Ur[0x02]); if not (not mr[xr]) then else (mr)[xr] = {
                                                                                                            pr[xr] }; end
                                                                                                    ; (Ur)[1] = mr[xr]; do Ur[2] = 1; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    until true
                                                                                    ;
                                                                                end
                                                                                ; return;
                                                                            else (CI)[hI[5]] = XI[hI[6]]; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        do
                                                                            if Qr < 0x4 then
                                                                                do II = hI[0X1]; end
                                                                                ;
                                                                            else
                                                                                if Qr ~= 5 then
                                                                                    (XI)[0] = CI[hI[5]]; II = II + 0X001; II =
                                                                                    II + 1; hI = jI[II]; II = II + 1; (XI)[0] =
                                                                                    XI[0][hI[4]]; II = II + 1; II = II +
                                                                                    1; II = II + 1; do eI = 0; end
                                                                                    ; do XI[eI] = XI[eI](); end
                                                                                    ; hI = jI[II]; II = II + 1; if not XI[0] then
                                                                                        do II = hI[1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else XI[hI[0x6]] = hI[5]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                if Qr < 0X9 then
                                                                    if Qr >= 7 then
                                                                        if Qr ~= 0X0008 then
                                                                            local Nr = (EI[0]); XI[0X0] = Nr[0x0001]
                                                                            [Nr[2]]; do II = II + 1; end
                                                                            ; do II = II + 0X00001; end
                                                                            ; hI = jI[II]; local pr = 0; II = II + 1; local mr =
                                                                            XI[0]; (XI)[pr + 0X1] = mr; XI[pr] = mr
                                                                            [hI[0X0004]]; hI = jI[II]; do II = II + 1; end
                                                                            ; (XI)[2] = hI[5]; II = II + 0X0001; do pr = 0X0; end
                                                                            ; (XI)[pr] = XI[pr](XI[pr + 0X1], XI[pr + 2]); do eI =
                                                                                pr; end
                                                                            ; II = II + 1; II = II + 1; hI = jI[II]; II =
                                                                            II + 0x1; do
                                                                                if not (not XI[0]) then else II = hI[1]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            local Nr, pr = EI[0X0], (0X7); XI[0X07] = Nr
                                                                            [0x01][Nr[2]]; hI = jI[II]; do II = II + 0X1; end
                                                                            ; local mr = (XI[7]); XI[pr + 1] = mr; (XI)[pr] =
                                                                            mr[hI[4]]; hI = jI[II]; II = II + 1; (XI)[0X09] =
                                                                            hI[5]; II = II + 1; pr = 7; (XI)[pr] = XI
                                                                            [pr](XI[pr + 1], XI[pr + 2]); eI = pr; hI =
                                                                            jI[II]; do II = II + 0X1; end
                                                                            ; do
                                                                                if not XI[0x7] then II = hI[1]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else (XI)[hI[6]] = { t({}, 0x001, hI[0x0001]) }; end
                                                                    ;
                                                                else
                                                                    do
                                                                        if Qr >= 0X0000b then
                                                                            if Qr == 0xc then else
                                                                                local Nr = EI[0]; do XI[0] = Nr[1]
                                                                                    [Nr[2]]; end
                                                                                ; local mr = XI[0]; hI = jI[II]; II = II +
                                                                                0X01; local pr = 0X00; do (XI)[pr + 1] =
                                                                                    mr; end
                                                                                ; XI[pr] = mr[hI[0X004]]; hI = jI[II]; do II =
                                                                                    II + 1; end
                                                                                ; XI[0x0002] = hI[0X0005]; II = II + 1; pr = 0; (XI)[pr] =
                                                                                XI[pr](XI[pr + 1], XI[pr + 2]); local lr = 0X002; eI =
                                                                                pr; II = II + 1; do Nr = EI[0X0]; end
                                                                                ; (XI)[1] = Nr[1][Nr[0X2]]; II = II + 1; do II =
                                                                                    II + 1; end
                                                                                ; hI = jI[II]; II = II + 1; pr = 0X1; mr =
                                                                                XI[0x00001]; (XI)[pr + 0X1] = mr; XI[pr] =
                                                                                mr[hI[0x004]]; hI = jI[II]; II = II +
                                                                                0X00001; (XI)[0X3] = hI[5]; II = II + 1; pr = 0X1; XI[pr] =
                                                                                XI[pr](XI[pr + 1], XI[pr + 2]); do eI =
                                                                                    pr; end
                                                                                ; II = II + 0x001; Nr = EI[0X0]; XI[0X2] =
                                                                                Nr[1][Nr[2]]; hI = jI[II]; do II = II + 1; end
                                                                                ; pr = 2; do mr = XI[0X002]; end
                                                                                ; XI[pr + 0x1] = mr; do XI[pr] = mr
                                                                                    [hI[0X4]]; end
                                                                                ; hI = jI[II]; II = II + 1; XI[4] = hI
                                                                                [0X5]; II = II + 0x1; pr = 0X0002; (XI)[pr] =
                                                                                XI[pr](XI[pr + 0x1], XI[pr + 2]); do eI =
                                                                                    pr; end
                                                                                ; hI = jI[II]; do II = II + 0x00001; end
                                                                                ; do pr = 3; end
                                                                                ; mr = XI[0X2]; XI[pr + 1] = mr; do (XI)[pr] =
                                                                                    mr[hI[0X04]]; end
                                                                                ; hI = jI[II]; do II = II + 1; end
                                                                                ; do XI[0X5] = hI[0X005]; end
                                                                                ; hI = jI[II]; II = II + 0x1; (XI)[6] =
                                                                                hI[5]; II = II + 1; pr = 0x3; eI = pr +
                                                                                0X0004 - 1; XI[pr] = XI[pr](t(XI, pr +
                                                                                0x1, eI)); do eI = pr; end
                                                                                ; II = II + 1; do XI[0X4] = {}; end
                                                                                ; hI = jI[II]; II = II + 1; (XI[4])[hI[5]] =
                                                                                XI[0X003]; do hI = jI[II]; end
                                                                                ; II = II + 0x01; XI[5] = CI[hI[5]]; do hI =
                                                                                    jI[II]; end
                                                                                ; II = II + 0X1; pr = 5; mr = XI[5]; do XI[pr + 0x00001] =
                                                                                    mr; end
                                                                                ; (XI)[pr] = mr[hI[0X4]]; do hI = jI[II]; end
                                                                                ; II = II + 0X1; XI[0x07] = hI[0X005]; II =
                                                                                II + 0X01; pr = 0x05; XI[pr] = XI[pr](
                                                                                XI[pr + 0X001], XI[pr + 0X2]); eI = pr; do hI =
                                                                                    jI[II]; end
                                                                                ; II = II + 0x00001; XI[0X5] = XI[5]
                                                                                [hI[0X4]]; do II = II + 1; end
                                                                                ; do II = II + 0X1; end
                                                                                ; hI = jI[II]; do II = II + 0X1; end
                                                                                ; do (XI)[0X5] = XI[5][hI[4]]; end
                                                                                ; hI = jI[II]; II = II + 0X1; (XI)[5] =
                                                                                XI[5][hI[4]]; hI = jI[II]; II = II + 1; XI[0X5] =
                                                                                XI[5][hI[0x4]]; II = II + 1; II = II + 1; hI =
                                                                                jI[II]; II = II + 1; (XI)[5] = XI[5]
                                                                                [hI[4]]; hI = jI[II]; II = II + 1; XI[0X5] =
                                                                                XI[0x5][hI[0x4]]; hI = jI[II]; do II = II +
                                                                                    1; end
                                                                                ; pr = 0x00005; mr = XI[5]; XI[pr + 1] =
                                                                                mr; (XI)[pr] = mr[hI[4]]; hI = jI[II]; do II =
                                                                                    II + 0X0001; end
                                                                                ; (XI)[0X7] = CI[hI[0X5]]; II = II + 1; do II =
                                                                                    II + 1; end
                                                                                ; II = II + 1; XI[8] = XI[0x00004]; II =
                                                                                II + 1; pr = 0x00007; local cr = 0x0000; if lr == 0 then else eI =
                                                                                    pr + lr - 0X1; end
                                                                                ; local Yr, Ur = nil, nil; if lr == 0x1 then Yr, Ur =
                                                                                    US(XI[pr]()); else
                                                                                    do Yr, Ur = US(XI[pr](t(XI, pr + 1,
                                                                                            eI))); end
                                                                                    ;
                                                                                end
                                                                                ; if cr == 1 then
                                                                                    do eI = pr - 0x1; end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if cr ~= 0 then
                                                                                            Yr = pr + cr - 0X2; eI = Yr +
                                                                                            1;
                                                                                        else
                                                                                            Yr = Yr + pr - 1; eI = Yr;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ; local xr = 0; do
                                                                                        for fr = pr, Yr do
                                                                                            do xr = xr + 1; end
                                                                                            ; (XI)[fr] = Ur[xr];
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ; II = II + 0X1; pr = 0X0005; (XI[pr])(t(
                                                                                XI, pr + 1, eI)); eI = pr - 1; hI = jI
                                                                                [II]; II = II + 0x00001; do (XI)[5] = CI
                                                                                    [hI[0X0005]]; end
                                                                                ; hI = jI[II]; II = II + 0X01; do (XI)[0X006] =
                                                                                    hI[1]; end
                                                                                ; II = II + 0x1; do pr = 0X5; end
                                                                                ; (XI[pr])(XI[pr + 0X1]); do eI = pr -
                                                                                    0X0001; end
                                                                                ; do II = II + 1; end
                                                                                ; do II = II + 0X1; end
                                                                                ; hI = jI[II]; do II = II + 0X001; end
                                                                                ; XI[5] = CI[hI[0X5]]; do hI = jI[II]; end
                                                                                ; II = II + 1; XI[5] = XI[5][hI[4]]; II =
                                                                                II + 0X0001; XI[5] = XI[0X5][XI[0x0]]; hI =
                                                                                jI[II]; II = II + 0X1; XI[5] = XI[0x005]
                                                                                [hI[0X4]]; II = II + 0X1; II = II + 1; II =
                                                                                II + 0X01; (XI)[5] = XI[0X005][XI[1]]; II =
                                                                                II + 0x001; II = II + 0X1; hI = jI[II]; II =
                                                                                II + 1; (XI)[0X00005] = XI[5]
                                                                                [hI[0X00004]]; hI = jI[II]; II = II + 1; if not (not XI[5]) then else
                                                                                    do II = hI[1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if Qr ~= 10 then
                                                                                local Nr = (hI[0X6]); for pr = Nr, Nr + (hI[1] - 0x0001) do (XI)[pr] =
                                                                                    bI[nI + (pr - Nr) + 0X0001]; end
                                                                                ;
                                                                            else XI[hI[0X6]] = hI[0X1]; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    until false
                                                    ;
                                                end); do
                                                    if not (RI) then
                                                        if U(HI) ~= 's\116\114\105\110\103' then f(HI, 0); else
                                                            do
                                                                if d(HI, 'a\116t\101\109p\116\032t\111 \121\105eld\032a\099\114os\115\032\109et\097m\101th\111\100/\067%-\099\097\108l \098\111\117\110\100a\114\121') then
                                                                    do return _(); end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; if not (d(HI, '^\046\045:\037d+\058 ')) then f(HI, 0); else (f)(
                                                                '\076\117\114a\112h\032\083\099\114i\112\116:' ..
                                                                (OI[II - 0X1] or "\040i\110te\114n\097\108)") ..
                                                                ':\032' .. x(HI), 0); end
                                                            ;
                                                        end
                                                        ;
                                                    else
                                                        if HI then
                                                            if sI == 1 then return XI[TI](); else return XI[TI](t(XI,
                                                                    TI + 0x1, eI)); end
                                                            ;
                                                        elseif not (TI) then else return t(XI, TI, sI); end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end; else
                                            if FI ~= 0X0008 then PI = function(...)
                                                    local II, XI, eI = 0X1, {}, (0); local SI = (o and o() or _ENV); local zI, bI =
                                                    US(...); local BI = ({ [0X00001] = XI, [0X2] = JI }); zI = zI - 1; local CI = ((SI == E and oI or SI)); do
                                                        for hI = 0, zI do
                                                            if nI > hI then XI[hI] = bI[hI + 1]; else break; end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ; if not aI then bI = nil; else
                                                        if not (iI) then else XI[nI] = { n = zI >= nI and zI - nI + 0x1 or
                                                            0, t(bI, nI + 0X0001, zI + 0X00001) }; end
                                                        ;
                                                    end
                                                    ; do
                                                        if CI == SI then else
                                                            if J then J(PI, CI); else
                                                                do _ENV = CI; end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ; local RI, HI, TI, sI = Y(function()
                                                        repeat
                                                            local hI = (jI[II]); local Qr = hI[0x07]; II = II + 1; if not (Qr >= 0X000A) then
                                                                if Qr >= 0X00005 then
                                                                    if Qr >= 0X007 then
                                                                        if not (Qr < 0X8) then
                                                                            if Qr == 9 then (XI)[hI[0X6]] = true; else XI[hI[6]] =
                                                                                B(XI[hI[0X1]], XI[hI[3]]); end
                                                                            ;
                                                                        else
                                                                            repeat
                                                                                local Nr, pr = uI, XI; local mr = {}; do
                                                                                    for lr, cr in q, Nr do
                                                                                        for Yr, Ur in q, cr do
                                                                                            if not (Ur[0X001] == pr and Ur[0x2] >= 0) then else
                                                                                                local xr = Ur[0X2]; if not mr[xr] then (mr)[xr] = {
                                                                                                        pr[xr] }; end
                                                                                                ; Ur[1] = mr[xr]; Ur[0x00002] = 0X0001;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            until true
                                                                            ; return;
                                                                        end
                                                                        ;
                                                                    else
                                                                        do
                                                                            if Qr ~= 6 then
                                                                                for Nr = hI[6], hI[0X001] do (XI)[Nr] = nil; end
                                                                                ;
                                                                            else BI[hI[1]] = XI[hI[6]]; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    if Qr >= 0X2 then
                                                                        do
                                                                            if Qr < 0X3 then else
                                                                                if Qr == 0x4 then
                                                                                    local pr = 0X0; local Nr = EI[0]; XI[0] =
                                                                                    Nr[1][Nr[0x2]]; II = II + 1; II = II +
                                                                                    0X00001; hI = jI[II]; do II = II + 1; end
                                                                                    ; local mr = XI[0X000]; XI[pr + 0X1] =
                                                                                    mr; (XI)[pr] = mr[hI[0X0004]]; do hI =
                                                                                        jI[II]; end
                                                                                    ; II = II + 1; do (XI)[2] = hI[0X5]; end
                                                                                    ; do II = II + 0X1; end
                                                                                    ; pr = 0; do XI[pr] = XI[pr](
                                                                                        XI[pr + 0X1], XI[pr + 0x2]); end
                                                                                    ; do eI = pr; end
                                                                                    ; II = II + 0X1; II = II + 1; hI = jI
                                                                                    [II]; do II = II + 1; end
                                                                                    ; do
                                                                                        if not XI[0] then II = hI[0X1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    do XI[hI[6]] = #XI[hI[1]]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr == 0X1 then
                                                                            do (XI)[hI[0X00006]] = CI[hI[0X005]]; end
                                                                            ;
                                                                        else
                                                                            local Nr = hI[0x6]; local lr = (XI[Nr + 2]); local pr, mr =
                                                                            XI[Nr], XI[Nr + 1]; XI[Nr] = g(function()
                                                                                for cr = pr, mr, lr do _(true, cr); end
                                                                                ;
                                                                            end); II = hI[0X1];
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                if not (Qr < 15) then
                                                                    if not (Qr >= 0X12) then
                                                                        if not (Qr >= 0X000010) then
                                                                            (XI)[0X0] = CI[hI[5]]; do II = II + 1; end
                                                                            ; II = II + 0X1; hI = jI[II]; II = II + 0X1; do (XI)[0X000] =
                                                                                XI[0][hI[4]]; end
                                                                            ; II = II + 1; eI = 0x0; XI[eI] = XI[eI](); hI =
                                                                            jI[II]; II = II + 1; if not (not XI[0]) then else II =
                                                                                hI[1]; end
                                                                            ;
                                                                        else
                                                                            if Qr ~= 0x11 then
                                                                                local pr = (nil); local Nr = (hI[1]); local mr =
                                                                                Nr[0X0006]; local lr = #mr; if not (lr > 0x0) then else
                                                                                    pr = {}; for cr = 0X001, lr do
                                                                                        local Yr = (mr[cr]); if Yr[0X01] ~= 0x0 then (pr)[cr - 0X001] =
                                                                                            EI[Yr[0x2]]; else
                                                                                            do pr[cr - 0X1] = { XI, Yr
                                                                                                    [2] }; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ; (L)(uI, pr);
                                                                                end
                                                                                ; do (XI)[hI[6]] = dS(CI, Nr, pr); end
                                                                                ;
                                                                            else (XI)[hI[6]] = { t({}, 1, hI[1]) }; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr >= 0X13 then
                                                                            if Qr == 20 then
                                                                                do II = hI[1]; end
                                                                                ;
                                                                            else
                                                                                if not (XI[hI[1]] < XI[hI[0X3]]) then
                                                                                    do II = hI[6]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            local Nr = EI[0]; local pr = (0X0); (XI)[0X0] =
                                                                            Nr[0X001][Nr[0X002]]; II = II + 0X1; II = II +
                                                                            0X001; do hI = jI[II]; end
                                                                            ; II = II + 0X1; local mr = XI[0]; do (XI)[pr + 1] =
                                                                                mr; end
                                                                            ; do XI[pr] = mr[hI[4]]; end
                                                                            ; hI = jI[II]; do II = II + 0X0001; end
                                                                            ; (XI)[0X00002] = hI[5]; II = II + 1; pr = 0; XI[pr] =
                                                                            XI[pr](XI[pr + 0X1], XI[pr + 2]); eI = pr; II =
                                                                            II + 1; II = II + 1; hI = jI[II]; II = II + 1; (XI)[0] =
                                                                            XI[0] * hI[4]; hI = jI[II]; II = II + 0X1; (XI)[0X1] =
                                                                            CI[hI[0X5]]; II = II + 1; II = II + 1; II =
                                                                            II + 0x1; (XI)[0X02] = XI[0]; do II = II +
                                                                                0x1; end
                                                                            ; do pr = 1; end
                                                                            ; XI[pr](XI[pr + 1]); do eI = pr - 1; end
                                                                            ; II = II + 0X1; do II = II + 1; end
                                                                            ; hI = jI[II]; do II = II + 1; end
                                                                            ; do (XI)[0X1] = CI[hI[5]]; end
                                                                            ; hI = jI[II]; II = II + 1; pr = 1; do mr =
                                                                                XI[0X0001]; end
                                                                            ; XI[pr + 0X1] = mr; (XI)[pr] = mr[hI[4]]; hI =
                                                                            jI[II]; II = II + 1; do XI[3] = hI[0X5]; end
                                                                            ; II = II + 1; do pr = 0X001; end
                                                                            ; (XI)[pr] = XI[pr](XI[pr + 0X01], XI[pr + 2]); do eI =
                                                                                pr; end
                                                                            ; hI = jI[II]; II = II + 1; XI[0x2] = CI
                                                                            [hI[0X5]]; do II = II + 1; end
                                                                            ; II = II + 1; hI = jI[II]; II = II + 0X1; do pr = 2; end
                                                                            ; do mr = XI[0x2]; end
                                                                            ; (XI)[pr + 0X01] = mr; (XI)[pr] = mr[hI[4]]; hI =
                                                                            jI[II]; II = II + 1; (XI)[4] = hI[0X5]; do II =
                                                                                II + 0x1; end
                                                                            ; do pr = 2; end
                                                                            ; do (XI)[pr] = XI[pr](XI[pr + 0X1],
                                                                                    XI[pr + 0X02]); end
                                                                            ; eI = pr; do hI = jI[II]; end
                                                                            ; II = II + 0X01; (XI)[2] = XI[2]
                                                                            [hI[0x0004]]; II = II + 1; II = II + 0x1; hI =
                                                                            jI[II]; II = II + 1; pr = 0X3; do mr = XI
                                                                                [0x1]; end
                                                                            ; do (XI)[pr + 0X1] = mr; end
                                                                            ; XI[pr] = mr[hI[4]]; hI = jI[II]; II = II +
                                                                            0X001; do XI[5] = CI[hI[5]]; end
                                                                            ; do II = II + 0X00001; end
                                                                            ; II = II + 0X01; hI = jI[II]; II = II + 1; XI[0X0005] =
                                                                            XI[0X005][hI[4]]; II = II + 0x00001; II = II +
                                                                            0X00001; II = II + 0x00001; XI[0X6] = XI[2]; II =
                                                                            II + 0X1; pr = 3; eI = pr + 0X4 - 0x001; XI
                                                                                [pr](t(XI, pr + 0x001, eI)); eI = pr -
                                                                            0X1; II = II + 0x01; II = II + 1; hI = jI
                                                                            [II]; II = II + 1; II = hI[1];
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    if Qr < 0xc then
                                                                        do
                                                                            if Qr ~= 0X00b then
                                                                                if not (XI[hI[0X001]] < XI[hI[3]]) then else II =
                                                                                    hI[0X00006]; end
                                                                                ;
                                                                            else
                                                                                if XI[hI[1]] <= XI[hI[0X03]] then
                                                                                    do II = hI[0X00006]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if not (Qr < 0XD) then
                                                                            if Qr == 14 then XI[hI[6]] = hI[0x5]; else
                                                                                local Nr = (hI[1]); local mr, pr = Nr[6],
                                                                                    nil; local lr = (#mr); if not (lr > 0x0) then else
                                                                                    pr = {}; for cr = 0X1, lr do
                                                                                        local Yr = (mr[cr]); do
                                                                                            if Yr[1] ~= 0 then pr[cr - 1] =
                                                                                                EI[Yr[2]]; else
                                                                                                do (pr)[cr - 1] = { XI,
                                                                                                        Yr[2] }; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ; L(uI, pr);
                                                                                end
                                                                                ; (XI)[hI[6]] = N[hI[3]](pr);
                                                                            end
                                                                            ;
                                                                        else
                                                                            local Nr = XI[hI[1]] / XI[hI[3]]; XI[hI[0X006]] =
                                                                            Nr - Nr % 1;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        until false
                                                        ;
                                                    end); do
                                                        if not (RI) then
                                                            do
                                                                if U(HI) ~= "\115\116\114ing" then (f)(HI, 0X0); else
                                                                    if not (d(HI, '\097\116\116emp\116 to\032y\105e\108d\032ac\114o\115s m\101ta\109\101t\104\111\100\047C\037\045\099\097\108l\032b\111\117ndary')) then else return
                                                                        _(); end
                                                                    ; if d(HI, '\094\046-:\037\100+: ') then (f)(
                                                                        "L\117raph\032\083cri\112\116\058" ..
                                                                        (OI[II - 0x001] or '(i\110te\114\110al)') ..
                                                                        '\058 ' .. x(HI), 0); else f(HI, 0); end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        else
                                                            do
                                                                if HI then
                                                                    if sI == 1 then
                                                                        do return XI[TI](); end
                                                                        ;
                                                                    else return XI[TI](t(XI, TI + 1, eI)); end
                                                                    ;
                                                                else
                                                                    if not (TI) then else return t(XI, TI, sI); end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end; else
                                                do PI = function(...)
                                                        local XI, eI = {}, (0); local II = 0X01; local BI = ({ [0X2] = JI,
                                                            [0X00001] = XI }); local SI = ((o and o() or _ENV)); local zI, bI =
                                                        US(...); zI = zI - 0X1; local CI = (SI == E and oI or SI); for hI = 0X0, zI do
                                                            if nI > hI then XI[hI] = bI[hI + 0X1]; else
                                                                do break; end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ; if not aI then bI = nil; else
                                                            if not (iI) then else XI[nI] = { n = zI >= nI and zI - nI +
                                                                0X1 or 0, t(bI, nI + 0X01, zI + 0X1) }; end
                                                            ;
                                                        end
                                                        ; if CI == SI then else
                                                            if J then J(PI, CI); else
                                                                do _ENV = CI; end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ; local RI, HI, TI, sI = Y(function()
                                                            do
                                                                while '\113XU' do
                                                                    local hI = (jI[II]); local Qr = (hI[0x7]); do II = II +
                                                                        1; end
                                                                    ; if not (Qr >= 58) then
                                                                        if not (Qr >= 0X01d) then
                                                                            do
                                                                                if Qr >= 0x0000e then
                                                                                    do
                                                                                        if not (Qr >= 0x15) then
                                                                                            if not (Qr >= 17) then
                                                                                                do
                                                                                                    if Qr >= 0x000f then
                                                                                                        if Qr ~= 16 then XI[hI[0X00006]] = -
                                                                                                            XI[hI[1]]; else XI[hI[6]] =
                                                                                                            hI[0X00005] >=
                                                                                                            XI[hI[3]]; end
                                                                                                        ;
                                                                                                    else
                                                                                                        local Nr = hI
                                                                                                        [0X6]; local pr, mr =
                                                                                                        XI[Nr](); if not (pr) then else
                                                                                                            (XI)[Nr + 1] =
                                                                                                            mr; II = hI
                                                                                                            [1];
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if Qr < 0X13 then
                                                                                                    if Qr ~= 18 then
                                                                                                        local pr, Nr =
                                                                                                        zI - nI, hI[6]; if not (pr < 0x000) then else pr = -0X1; end
                                                                                                        ; do
                                                                                                            for mr = Nr, Nr + pr do XI[mr] =
                                                                                                                bI[nI + (mr - Nr) + 0X001]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ; do eI = Nr + pr; end
                                                                                                        ;
                                                                                                    else
                                                                                                        do XI[hI[0X6]] =
                                                                                                            S(XI[hI[1]],
                                                                                                                XI[hI[0X3]]); end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    if Qr == 20 then
                                                                                                        local Nr = hI
                                                                                                        [0X6]; do (XI)[Nr] =
                                                                                                            XI[Nr](t(XI,
                                                                                                                Nr + 0X1,
                                                                                                                eI)); end
                                                                                                        ; do eI = Nr; end
                                                                                                        ;
                                                                                                    else (XI)[hI[0x6]] =
                                                                                                        hI[5]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if Qr >= 25 then
                                                                                                if not (Qr >= 0X1B) then
                                                                                                    if Qr ~= 26 then (XI)[hI[0x6]] =
                                                                                                        hI[5] *
                                                                                                        XI[hI[0X003]]; else XI[hI[6]] =
                                                                                                        XI[hI[1]] ^
                                                                                                        XI[hI[3]]; end
                                                                                                    ;
                                                                                                else
                                                                                                    if Qr == 28 then
                                                                                                        local Nr = (hI[0X01]); (XI)[hI[6]] =
                                                                                                        XI[Nr] ..
                                                                                                        XI[Nr + 0x1];
                                                                                                    else (XI)[hI[0X6]] =
                                                                                                        XI[hI[1]] >
                                                                                                        XI[hI[0x3]]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if not (Qr < 0x00017) then
                                                                                                    if Qr == 24 then XI[hI[0X6]] =
                                                                                                        C(XI[hI[1]],
                                                                                                            XI[hI[0X00003]]); else
                                                                                                        if XI[hI[1]] == XI[hI[0X003]] then II =
                                                                                                            hI[6]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    if Qr ~= 0X16 then (XI[hI[0X00006]])[XI[hI[0x01]]] =
                                                                                                        hI[0X4]; else
                                                                                                        local Nr = (hI[0X06]); do eI =
                                                                                                            Nr + hI[0X1] -
                                                                                                            0X1; end
                                                                                                        ; XI[Nr](t(XI,
                                                                                                            Nr + 1, eI)); eI =
                                                                                                        Nr - 1;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if Qr >= 7 then
                                                                                        if not (Qr < 10) then
                                                                                            if not (Qr < 0X0000c) then
                                                                                                do
                                                                                                    if Qr ~= 13 then
                                                                                                        local Nr = hI
                                                                                                        [0x00006]; local pr, mr, lr =
                                                                                                        XI[Nr](); do
                                                                                                            if not (pr) then else
                                                                                                                (XI)[Nr + 0X1] =
                                                                                                                mr; (XI)[Nr + 0X02] =
                                                                                                                lr; II =
                                                                                                                hI[0X001];
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else (XI)[hI[0X6]] =
                                                                                                        XI[hI[0X0001]] -
                                                                                                        XI[hI[0X03]]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                do
                                                                                                    if Qr == 11 then
                                                                                                        local Nr = (hI[0x6]); (XI)[Nr] =
                                                                                                        XI[Nr](
                                                                                                        XI[Nr + 0X1],
                                                                                                            XI[Nr + 2]); do eI =
                                                                                                            Nr; end
                                                                                                        ;
                                                                                                    else
                                                                                                        do
                                                                                                            if XI[hI[1]] ~= hI[4] then else II =
                                                                                                                hI[6]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if Qr < 0X8 then
                                                                                                local Nr = hI[0X01]; local pr = nil; local mr = (Nr[0X06]); local lr = (#mr); if not (lr > 0) then else
                                                                                                    do pr = {}; end
                                                                                                    ; for cr = 0X001, lr do
                                                                                                        local Yr = (mr[cr]); if Yr[0X001] == 0 then pr[cr - 0X0001] = {
                                                                                                                XI,
                                                                                                                Yr[0X2] }; else pr[cr - 1] =
                                                                                                            EI[Yr[2]]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ; (L)(uI, pr);
                                                                                                end
                                                                                                ; XI[hI[0X00006]] = N
                                                                                                [hI[0x3]](pr);
                                                                                            else
                                                                                                if Qr == 0x0009 then XI[hI[6]] =
                                                                                                    XI[hI[0x1]] ~=
                                                                                                    hI[0X4]; else
                                                                                                    if XI[hI[1]] <= XI[hI[0x00003]] then II =
                                                                                                        hI[6]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if Qr >= 0X3 then
                                                                                                do
                                                                                                    if Qr >= 0X5 then
                                                                                                        if Qr ~= 6 then
                                                                                                            do XI[hI[0X6]] =
                                                                                                                XI[hI[1]] <
                                                                                                                XI[hI[0X3]]; end
                                                                                                            ;
                                                                                                        else
                                                                                                            local Nr = (hI[0x6]); local pr = (XI[Nr]); local mr, lr =
                                                                                                            XI[Nr + 0X00001],
                                                                                                                XI[Nr + 0X2]; XI[Nr] =
                                                                                                            g(function()
                                                                                                                for cr = pr, mr, lr do
                                                                                                                    _(
                                                                                                                    true,
                                                                                                                        cr); end
                                                                                                                ;
                                                                                                            end); do II =
                                                                                                                hI[1]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else
                                                                                                        do
                                                                                                            if Qr == 0X04 then XI[hI[6]] =
                                                                                                                XI[hI[1]] <=
                                                                                                                hI[4]; else
                                                                                                                local Nr = (XI[hI[0X1]] / XI[hI[3]]); XI[hI[6]] =
                                                                                                                Nr -
                                                                                                                Nr % 0X1;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if not (Qr >= 1) then (XI)[hI[6]] =
                                                                                                    XI[hI[0X1]]; else
                                                                                                    if Qr == 0X2 then
                                                                                                        repeat
                                                                                                            local pr, mr, lr =
                                                                                                            uI, XI, ({}); for cr, Yr in q, pr do
                                                                                                                do
                                                                                                                    for Ur, xr in q, Yr do
                                                                                                                        if xr[0X1] == mr and xr[0x002] >= 0X00 then
                                                                                                                            local fr = (xr[2]); if not (not lr[fr]) then else (lr)[fr] = {
                                                                                                                                    mr[fr] }; end
                                                                                                                            ; do (xr)[0X1] =
                                                                                                                                lr[fr]; end
                                                                                                                            ; (xr)[0X0002] = 1;
                                                                                                                        end
                                                                                                                        ;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        until true
                                                                                                        ; local Nr = hI
                                                                                                        [0X6]; return
                                                                                                        false, Nr, Nr;
                                                                                                    else (XI)[hI[0X6]] =
                                                                                                        XI[hI[0x1]] *
                                                                                                        hI[4]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (Qr < 0X00002B) then
                                                                                if not (Qr >= 0X32) then
                                                                                    if Qr >= 0X2e then
                                                                                        if Qr < 48 then
                                                                                            if Qr ~= 0X2F then
                                                                                                local Nr = (hI[0x1]); local pr = (XI[Nr]); for mr = Nr + 0X1, hI[0X3] do pr =
                                                                                                    pr .. XI[mr]; end
                                                                                                ; do (XI)[hI[0X6]] = pr; end
                                                                                                ;
                                                                                            else
                                                                                                do (XI)[hI[6]] = ZS
                                                                                                    [hI[1]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            do
                                                                                                if Qr == 49 then
                                                                                                    eI = hI[0X6]; XI[eI](); do eI =
                                                                                                        eI - 0X1; end
                                                                                                    ;
                                                                                                else
                                                                                                    local Nr = (hI[6]); local pr = ((hI[3] - 0X1) * 0X32); local mr = (XI[Nr]); for lr = 1, eI - Nr do (mr)[pr + lr] =
                                                                                                        XI[Nr + lr]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if Qr >= 44 then
                                                                                            do
                                                                                                if Qr ~= 45 then
                                                                                                    local Nr = (hI[0X6]); local pr, mr =
                                                                                                    XI[Nr](); if pr then
                                                                                                        for lr = 1, hI[0X3] do XI[Nr + lr] =
                                                                                                            mr[lr]; end
                                                                                                        ; II = hI[1];
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    local Nr = hI[0X006]; local pr = (g(function(...)
                                                                                                        _(); for mr, lr, cr, Yr, Ur, xr, fr, Zr, Dr, Vr in ... do
                                                                                                            _(true,
                                                                                                                { mr, lr,
                                                                                                                    cr,
                                                                                                                    Yr,
                                                                                                                    Ur,
                                                                                                                    xr,
                                                                                                                    fr,
                                                                                                                    Zr,
                                                                                                                    Dr,
                                                                                                                    Vr }); end
                                                                                                        ;
                                                                                                    end)); (pr)(XI[Nr],
                                                                                                        XI[Nr + 1],
                                                                                                        XI[Nr + 2]); do eI =
                                                                                                        Nr; end
                                                                                                    ; XI[Nr] = pr; II =
                                                                                                    hI[1];
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else (XI)[hI[0X6]] = XI
                                                                                            [hI[0X0001]] >= XI[hI[3]]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if Qr >= 54 then
                                                                                        if not (Qr < 56) then
                                                                                            if Qr == 0X00039 then
                                                                                                if not (XI[hI[1]] < XI[hI[3]]) then else II =
                                                                                                    hI[0X006]; end
                                                                                                ;
                                                                                            else ZS[hI[1]] = XI[hI[0X6]]; end
                                                                                            ;
                                                                                        else
                                                                                            if Qr == 0x37 then II = hI
                                                                                                [0X1]; else
                                                                                                do XI[hI[6]] = hI[0x05] >
                                                                                                    hI[4]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if not (Qr >= 52) then
                                                                                                do
                                                                                                    if Qr == 0X33 then
                                                                                                        local Nr = (hI[0X6]); local pr = (g(function(...)
                                                                                                            (_)(); for mr in ... do
                                                                                                                _(true,
                                                                                                                    mr); end
                                                                                                            ;
                                                                                                        end)); (pr)(
                                                                                                        XI[Nr], XI[Nr + 1],
                                                                                                            XI[Nr + 0x2]); eI =
                                                                                                        Nr; do (XI)[Nr] =
                                                                                                            pr; end
                                                                                                        ; II = hI[1];
                                                                                                    else (XI)[hI[6]] = XI
                                                                                                        [hI[1]] /
                                                                                                        XI[hI[3]]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if Qr ~= 0X35 then
                                                                                                    do (XI)[hI[6]] = XI
                                                                                                        [hI[1]] > hI[4]; end
                                                                                                    ;
                                                                                                else (XI)[hI[6]] = XI
                                                                                                    [hI[1]] ~=
                                                                                                    XI[hI[0X3]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if Qr < 0X24 then
                                                                                    if not (Qr >= 0X20) then
                                                                                        if not (Qr >= 30) then (XI)[hI[0X6]] =
                                                                                            XI[hI[1]] * XI[hI[3]]; else
                                                                                            if Qr == 31 then
                                                                                                local Nr = (EI[hI[0X0001]]); (XI)[hI[6]] =
                                                                                                Nr[1][Nr[0X2]];
                                                                                            else
                                                                                                eI = hI[6]; XI[eI] = XI
                                                                                                [eI]();
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if Qr < 0x22 then
                                                                                            if Qr ~= 0x21 then (XI)[hI[0X6]] = true; else
                                                                                                do
                                                                                                    if not (not (XI[hI[1]] <= XI[hI[3]])) then else II =
                                                                                                        hI[6]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if Qr == 35 then
                                                                                                local Nr = hI[6]; local pr, mr =
                                                                                                XI[Nr](); do
                                                                                                    if pr then
                                                                                                        II = hI[0X01]; do XI[Nr + 3] =
                                                                                                            mr; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if XI[hI[1]] == hI[4] then else II =
                                                                                                    hI[6]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if Qr < 39 then
                                                                                        if Qr >= 0X25 then
                                                                                            if Qr == 38 then CI[hI[0X5]] =
                                                                                                XI[hI[6]]; else XI[hI[0X6]] =
                                                                                                XI[hI[0X01]] >= hI[4]; end
                                                                                            ;
                                                                                        else
                                                                                            do
                                                                                                if hI[0X3] == 89 then
                                                                                                    II = II - 1; jI[II] = {
                                                                                                        [0X6] = (hI[0X6] - 0X58),
                                                                                                        [0X1] = (hI[0X1] - 0x58),
                                                                                                        [7] = 0X65 };
                                                                                                elseif hI[0x3] == 0x00E6 then
                                                                                                    II = II - 1; jI[II] = {
                                                                                                        [1] = (hI[0X1] - 10),
                                                                                                        [0X07] = 0X3B,
                                                                                                        [6] = (hI[0X6] - 0X0A) };
                                                                                                else
                                                                                                    repeat
                                                                                                        local Nr, pr = uI,
                                                                                                            XI; local mr = {}; for lr, cr in q, Nr do
                                                                                                            do
                                                                                                                for Yr, Ur in q, cr do
                                                                                                                    if Ur[1] == pr and Ur[0X2] >= 0 then
                                                                                                                        local xr =
                                                                                                                        Ur[2]; if not (not mr[xr]) then else
                                                                                                                            do (mr)[xr] = {
                                                                                                                                    pr[xr] }; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ; (Ur)[1] =
                                                                                                                        mr[xr]; (Ur)[2] = 1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ; return false,
                                                                                                        hI[0X6], eI;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if Qr < 0X000029 then
                                                                                            if Qr == 0X0028 then XI[hI[6]][hI[5]] =
                                                                                                hI[4]; else
                                                                                                do (XI)[hI[6]] = b(
                                                                                                    XI[hI[0x0001]],
                                                                                                        XI[hI[0X3]]); end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if Qr ~= 42 then
                                                                                                local Nr = hI[0X6]; local pr =
                                                                                                hI[1]; if pr ~= 0x0 then eI =
                                                                                                    Nr + pr - 1; end
                                                                                                ; local lr, cr, mr = nil,
                                                                                                    nil, hI[3]; if pr ~= 1 then
                                                                                                    do lr, cr = US(XI
                                                                                                        [Nr](t(XI, Nr + 1,
                                                                                                            eI))); end
                                                                                                    ;
                                                                                                else lr, cr = US(XI[Nr]()); end
                                                                                                ; if mr == 0X001 then eI =
                                                                                                    Nr - 1; else
                                                                                                    if mr == 0x00000 then
                                                                                                        lr = lr + Nr - 1; eI =
                                                                                                        lr;
                                                                                                    else
                                                                                                        lr = Nr + mr - 2; eI =
                                                                                                        lr + 1;
                                                                                                    end
                                                                                                    ; local Yr = (0X000); for Ur = Nr, lr do
                                                                                                        Yr = Yr + 0X1; XI[Ur] =
                                                                                                        cr[Yr];
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else (XI)[hI[0X6]] = hI
                                                                                                [0x00005] ^ XI[hI[3]]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    elseif not (Qr < 87) then
                                                                        do
                                                                            if Qr >= 101 then
                                                                                do
                                                                                    if not (Qr >= 0X6c) then
                                                                                        do
                                                                                            if not (Qr < 0X00068) then
                                                                                                if not (Qr < 106) then
                                                                                                    do
                                                                                                        if Qr == 0X006B then
                                                                                                            local Nr, pr =
                                                                                                            hI[6],
                                                                                                                (XI[hI[0X1]]); XI[Nr + 1] =
                                                                                                            pr; (XI)[Nr] =
                                                                                                            pr[hI[4]];
                                                                                                        else XI[hI[6]] =
                                                                                                            XI[hI[1]] ==
                                                                                                            hI[4]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    if Qr ~= 105 then
                                                                                                        local Nr = (EI[hI[1]]); do (Nr[1])[Nr[0X2]] =
                                                                                                            XI[hI[6]]; end
                                                                                                        ;
                                                                                                    else
                                                                                                        if not (XI[hI[0x1]] < XI[hI[0X03]]) then II =
                                                                                                            hI[0X6]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if not (Qr >= 102) then
                                                                                                    if hI[3] ~= 252 then
                                                                                                        repeat
                                                                                                            local Nr, pr, mr =
                                                                                                            uI, XI,
                                                                                                                (hI[0X06]); local lr = {}; for cr, Yr in q, Nr do
                                                                                                                for Ur, xr in q, Yr do
                                                                                                                    if xr[1] == pr and xr[0X2] >= mr then
                                                                                                                        local fr =
                                                                                                                        xr[2]; if not lr[fr] then (lr)[fr] = {
                                                                                                                                pr[fr] }; end
                                                                                                                        ; do xr[1] =
                                                                                                                            lr[fr]; end
                                                                                                                        ; xr[0x2] = 1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        until true
                                                                                                        ;
                                                                                                    else
                                                                                                        do II = II -
                                                                                                            0X0001; end
                                                                                                        ; do jI[II] = {
                                                                                                                [0x00007] = 109,
                                                                                                                [6] = (hI[6] - 0X000F9),
                                                                                                                [1] = (hI[0X001] - 0X00f9) }; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    if Qr == 103 then
                                                                                                        local Nr = (hI[0X1]); local mr =
                                                                                                        Nr[0X06]; local lr, pr =
                                                                                                        #mr, (nil); if not (lr > 0) then else
                                                                                                            do pr = {}; end
                                                                                                            ; for cr = 1, lr do
                                                                                                                local Yr =
                                                                                                                mr[cr]; do
                                                                                                                    if Yr[0X0001] ~= 0X0000 then (pr)[cr - 0X1] =
                                                                                                                        EI[Yr[0X002]]; else pr[cr - 1] = {
                                                                                                                            XI,
                                                                                                                            Yr[0X2] }; end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ; (L)(uI, pr);
                                                                                                        end
                                                                                                        ; XI[hI[0x6]] =
                                                                                                        dS(CI, Nr, pr);
                                                                                                    else (XI)[hI[6]] = XI
                                                                                                        [hI[1]] < hI[4]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if Qr < 112 then
                                                                                            if Qr >= 0x6e then
                                                                                                if Qr == 0X6F then (XI)[hI[6]] =
                                                                                                    hI[5] == hI[4]; else
                                                                                                    repeat
                                                                                                        local pr, mr = uI,
                                                                                                            XI; local lr = ({}); do
                                                                                                            for cr, Yr in q, pr do
                                                                                                                for Ur, xr in q, Yr do
                                                                                                                    if xr[1] == mr and xr[2] >= 0 then
                                                                                                                        local fr =
                                                                                                                        xr[0x2]; do
                                                                                                                            if not (not lr[fr]) then else (lr)[fr] = {
                                                                                                                                    mr[fr] }; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ; do xr[0X1] =
                                                                                                                            lr[fr]; end
                                                                                                                        ; do xr[0x00002] = 1; end
                                                                                                                        ;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ; local Nr = (hI[0X6]); do eI =
                                                                                                        Nr + 0X1; end
                                                                                                    ; return true, Nr,
                                                                                                        0X00002;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if Qr == 0x6d then
                                                                                                    for Nr = hI[0X6], hI[0x1] do XI[Nr] = nil; end
                                                                                                    ;
                                                                                                else (XI)[hI[0x6]] = XI
                                                                                                    [hI[0x1]][hI[4]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            do
                                                                                                if not (Qr < 0X72) then
                                                                                                    if Qr ~= 0X73 then
                                                                                                        repeat
                                                                                                            local Nr, pr =
                                                                                                            uI, XI; local mr = ({}); for lr, cr in q, Nr do
                                                                                                                for Yr, Ur in q, cr do
                                                                                                                    if Ur[1] == pr and Ur[0X2] >= 0x0 then
                                                                                                                        local xr =
                                                                                                                        Ur[2]; do
                                                                                                                            if not (not mr[xr]) then else mr[xr] = {
                                                                                                                                    pr[xr] }; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ; Ur[1] =
                                                                                                                        mr[xr]; (Ur)[0X2] = 1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        until true
                                                                                                        ; return true,
                                                                                                            hI[0X6],
                                                                                                            0X001;
                                                                                                    else (XI)[hI[0X6]] =
                                                                                                        hI[0x0005] -
                                                                                                        XI[hI[0x00003]]; end
                                                                                                    ;
                                                                                                else
                                                                                                    if Qr ~= 113 then
                                                                                                        if not XI[hI[6]] then
                                                                                                            do II = hI
                                                                                                                [0x1]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else XI[hI[6]] = XI
                                                                                                        [hI[1]] + hI[4]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (Qr < 0X5e) then
                                                                                    do
                                                                                        if not (Qr < 97) then
                                                                                            if not (Qr < 0X63) then
                                                                                                if Qr == 100 then (XI)[hI[6]] =
                                                                                                    XI[hI[1]]
                                                                                                    [XI[hI[0X003]]]; else
                                                                                                    do (XI)[hI[0X6]] = nil; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                do
                                                                                                    if Qr ~= 0X000062 then
                                                                                                        do (XI)[hI[6]] =
                                                                                                            XI[hI[0X1]] %
                                                                                                            hI[0X00004]; end
                                                                                                        ;
                                                                                                    else
                                                                                                        if not (hI[5] < XI[hI[0X00003]]) then II =
                                                                                                            hI[0X00006]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if Qr < 95 then
                                                                                                do XI[hI[6]] = B(
                                                                                                    XI[hI[0x1]],
                                                                                                        XI[hI[0x03]]); end
                                                                                                ;
                                                                                            else
                                                                                                if Qr ~= 0X060 then (XI)[hI[6]] =
                                                                                                    hI[5] ~= hI[4]; else (XI[hI[6]])[XI[hI[1]]] =
                                                                                                    XI[hI[3]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if not (Qr >= 90) then
                                                                                        if Qr >= 0x58 then
                                                                                            if Qr == 0X59 then XI[hI[0X6]] =
                                                                                                XI[hI[1]] ^ hI[4]; else
                                                                                                do
                                                                                                    if hI[3] ~= 0XD then
                                                                                                        do
                                                                                                            repeat
                                                                                                                local Nr, pr, mr =
                                                                                                                uI, XI,
                                                                                                                    {}; do
                                                                                                                    for lr, cr in q, Nr do
                                                                                                                        for Yr, Ur in q, cr do
                                                                                                                            if Ur[1] == pr and Ur[2] >= 0x0 then
                                                                                                                                local xr = (Ur[0x02]); if not (not mr[xr]) then else (mr)[xr] = {
                                                                                                                                        pr[xr] }; end
                                                                                                                                ; Ur[0X01] =
                                                                                                                                mr[xr]; Ur[2] = 0X00001;
                                                                                                                            end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            until true
                                                                                                            ;
                                                                                                        end
                                                                                                        ; return;
                                                                                                    else
                                                                                                        II = II - 1; (jI)[II] = {
                                                                                                            [1] = (hI[0x01] - 115),
                                                                                                            [6] = (hI[0X006] - 0X73),
                                                                                                            [0X07] = 109 };
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else (XI)[hI[6]] = hI[0x5] <
                                                                                            hI[4]; end
                                                                                        ;
                                                                                    else
                                                                                        if not (Qr < 0X5C) then
                                                                                            if Qr == 93 then
                                                                                                local Nr = (hI[6]); local pr = (g(function(...)
                                                                                                    (_)(); for mr, lr in ... do
                                                                                                        _(true, mr, lr); end
                                                                                                    ;
                                                                                                end)); pr(XI[Nr],
                                                                                                    XI[Nr + 1],
                                                                                                    XI[Nr + 0X2]); do eI =
                                                                                                    Nr; end
                                                                                                ; do XI[Nr] = pr; end
                                                                                                ; II = hI[0X00001];
                                                                                            else XI[hI[0X06]] = {}; end
                                                                                            ;
                                                                                        else
                                                                                            if Qr ~= 91 then
                                                                                                local Nr = (hI[6]); (XI[Nr])(
                                                                                                XI[Nr + 1]); do eI = Nr -
                                                                                                    0x1; end
                                                                                                ;
                                                                                            else
                                                                                                local Nr = (hI[6]); XI[Nr] =
                                                                                                XI[Nr](XI[Nr + 0X1]); do eI =
                                                                                                    Nr; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if Qr < 0x0048 then
                                                                            if Qr < 0x41 then
                                                                                do
                                                                                    if Qr >= 0x03d then
                                                                                        if not (Qr >= 0X0003f) then
                                                                                            if Qr == 62 then
                                                                                                local Nr = hI[6]; (XI[Nr])(
                                                                                                XI[Nr + 0x1], XI[Nr + 2]); eI =
                                                                                                Nr - 0X1;
                                                                                            else
                                                                                                do XI[hI[0x6]] = hI[5] ==
                                                                                                    XI[hI[0x3]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if Qr == 64 then
                                                                                                do XI[hI[6]] = CI[hI[5]]; end
                                                                                                ;
                                                                                            else
                                                                                                local Nr = hI[0X6]; for pr = Nr, Nr + (hI[1] - 0X0001) do (XI)[pr] =
                                                                                                    bI[nI + (pr - Nr) + 0X1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if not (Qr >= 0X3B) then
                                                                                            repeat
                                                                                                local mr = {}; local Nr, pr =
                                                                                                uI, XI; do
                                                                                                    for lr, cr in q, Nr do
                                                                                                        for Yr, Ur in q, cr do
                                                                                                            if not (Ur[1] == pr and Ur[0X2] >= 0) then else
                                                                                                                local xr =
                                                                                                                Ur[0X002]; if not mr[xr] then
                                                                                                                    do mr[xr] = {
                                                                                                                            pr[xr] }; end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ; (Ur)[0X01] =
                                                                                                                mr[xr]; Ur[0X002] = 1;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            until true
                                                                                            ; return true, hI[6], 0;
                                                                                        else
                                                                                            if Qr == 0X3C then XI[hI[6]] =
                                                                                                XI[hI[1]] == XI[hI[3]]; else
                                                                                                if hI[3] == 1 then
                                                                                                    II = II - 1; (jI)[II] = {
                                                                                                        [0X7] = 2,
                                                                                                        [0X6] = (hI[0x6] - 0X045),
                                                                                                        [1] = (hI[1] - 69) };
                                                                                                elseif hI[3] == 216 then
                                                                                                    do II = II - 1; end
                                                                                                    ; (jI)[II] = {
                                                                                                        [0X00007] = 0X000065,
                                                                                                        [6] = (hI[6] - 0x00075),
                                                                                                        [0X0001] = (hI[0X001] - 0X75) };
                                                                                                elseif hI[3] == 0X0087 then
                                                                                                    II = II - 1; jI[II] = {
                                                                                                        [6] = (hI[6] - 119),
                                                                                                        [1] = (hI[1] - 0X077),
                                                                                                        [0X07] = 63 };
                                                                                                else (XI)[hI[6]] = not XI
                                                                                                    [hI[1]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (Qr < 0X44) then
                                                                                    do
                                                                                        if not (Qr < 70) then
                                                                                            if Qr ~= 71 then (BI)[hI[0X001]] =
                                                                                                XI[hI[0X06]]; else
                                                                                                do XI[hI[6]] = hI[5] -
                                                                                                    hI[4]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if Qr ~= 0X000045 then
                                                                                                local Nr = hI[0X6]; eI =
                                                                                                Nr + hI[1] - 1; do XI[Nr] =
                                                                                                    XI[Nr](t(XI, Nr + 0X1,
                                                                                                        eI)); end
                                                                                                ; do eI = Nr; end
                                                                                                ;
                                                                                            else
                                                                                                if XI[hI[1]] == XI[hI[3]] then else II =
                                                                                                    hI[0X6]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if not (Qr < 0X42) then
                                                                                        if Qr ~= 0X43 then
                                                                                            do
                                                                                                repeat
                                                                                                    local lr = {}; local pr, mr =
                                                                                                    uI, XI; for cr, Yr in q, pr do
                                                                                                        do
                                                                                                            for Ur, xr in q, Yr do
                                                                                                                if not (xr[0X01] == mr and xr[0X002] >= 0) then else
                                                                                                                    local fr =
                                                                                                                    xr[2]; if not (not lr[fr]) then else (lr)[fr] = {
                                                                                                                            mr[fr] }; end
                                                                                                                    ; (xr)[1] =
                                                                                                                    lr[fr]; (xr)[2] = 0X01;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                until true
                                                                                                ;
                                                                                            end
                                                                                            ; local Nr = hI[6]; return
                                                                                            false, Nr, Nr + hI[1] - 2;
                                                                                        else
                                                                                            do (XI)[hI[0X6]] = XI
                                                                                                [hI[0x1]] - hI[4]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do (XI)[hI[6]] = z(XI[hI[1]]); end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if Qr < 79 then
                                                                                    if not (Qr < 75) then
                                                                                        if Qr >= 77 then
                                                                                            do
                                                                                                if Qr ~= 0X4E then XI[hI[6]] =
                                                                                                    XI[hI[0X01]] <=
                                                                                                    XI[hI[0X3]]; else XI[hI[6]] =
                                                                                                    hI[1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if Qr ~= 76 then
                                                                                                local Nr, pr = hI[6],
                                                                                                    ((hI[0X3] - 1) * 0X32); local mr =
                                                                                                XI[Nr]; for lr = 0X001, hI[0X1] do (mr)[pr + lr] =
                                                                                                    XI[Nr + lr]; end
                                                                                                ;
                                                                                            else (XI)[hI[0X6]] = hI
                                                                                                [0X05] + hI[0x4]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if Qr >= 73 then
                                                                                            if Qr == 74 then
                                                                                                do
                                                                                                    if hI[0x003] ~= 75 then XI[hI[6]] = #
                                                                                                        XI[hI[0X0001]]; else
                                                                                                        do II = II - 0X01; end
                                                                                                        ; (jI)[II] = {
                                                                                                            [1] = (hI[1] - 0X38),
                                                                                                            [0X7] = 0X00063,
                                                                                                            [0X6] = (hI[0X06] - 0X38) };
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                local Nr, pr =
                                                                                                hI[0X00006], hI[0X0001]; eI =
                                                                                                Nr + pr - 1; repeat
                                                                                                    local mr, lr = uI,
                                                                                                        (XI); local cr = ({}); for Yr, Ur in q, mr do
                                                                                                        for xr, fr in q, Ur do
                                                                                                            if fr[0X1] == lr and fr[2] >= 0 then
                                                                                                                local Zr = (fr[2]); do
                                                                                                                    if not cr[Zr] then
                                                                                                                        do cr[Zr] = {
                                                                                                                                lr[Zr] }; end
                                                                                                                        ;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ; fr[1] =
                                                                                                                cr[Zr]; (fr)[2] = 0x1;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                until true
                                                                                                ; return true, Nr, pr;
                                                                                            end
                                                                                            ;
                                                                                        else XI[hI[0X6]] = XI[hI[0X1]] +
                                                                                            XI[hI[3]]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if Qr >= 83 then
                                                                                            if Qr < 85 then
                                                                                                if Qr ~= 84 then
                                                                                                    if hI[0X3] ~= 0X1F then
                                                                                                        if XI[hI[0X06]] then
                                                                                                            do II = hI
                                                                                                                [0X1]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else
                                                                                                        do II = II - 0X1; end
                                                                                                        ; jI[II] = {
                                                                                                            [0X0007] = 0x0,
                                                                                                            [1] = (hI[1] - 0X065),
                                                                                                            [6] = (hI[0X6] - 101) };
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    local Nr = (hI[0X6]); XI
                                                                                                        [Nr](t(XI, Nr + 1,
                                                                                                            eI)); do eI =
                                                                                                        Nr - 0X1; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if Qr ~= 0x56 then (XI)[hI[0X00006]] =
                                                                                                    XI[hI[0X00001]] /
                                                                                                    hI[0x4]; else (XI[hI[6]])[hI[0x5]] =
                                                                                                    XI[hI[0X3]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if Qr < 81 then
                                                                                                if Qr ~= 0X50 then XI[hI[6]] =
                                                                                                    XI[hI[1]] %
                                                                                                    XI[hI[0X003]]; else XI[hI[6]] =
                                                                                                    BI[hI[0x1]]; end
                                                                                                ;
                                                                                            else
                                                                                                if Qr == 0X52 then (XI)[hI[6]] =
                                                                                                    R(XI[hI[0x0001]],
                                                                                                        XI[hI[0X3]]); else XI[hI[6]] = {
                                                                                                        t({}, 0X1,
                                                                                                            hI[0X1]) }; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end); do
                                                            if not (RI) then
                                                                if U(HI) ~= '\115tr\105ng' then f(HI, 0); else
                                                                    if not (d(HI, '\097\116tem\112t to\032\121ield \097cr\111\115\115\032meta\109ethod\047C%-cal\108 \098\111\117\110\100\097ry')) then else
                                                                        do return _(); end
                                                                        ;
                                                                    end
                                                                    ; do
                                                                        if not (d(HI, "\094\046\045\058%d\043\058 ")) then (f)(
                                                                            HI, 0); else (f)(
                                                                            "L\117r\097\112\104\032\083c\114i\112t:" ..
                                                                            (OI[II - 1] or '(\105n\116\101\114\110al)') ..
                                                                            ': ' .. x(HI), 0); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            elseif HI then
                                                                if sI == 0X1 then return XI[TI](); else return XI[TI](t(
                                                                    XI, TI + 1, eI)); end
                                                                ;
                                                            else
                                                                if not (TI) then else return t(XI, TI, sI); end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end; end
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    else
                                        if FI ~= 0X0005 then PI = function(...)
                                                local XI = {}; local II = 1; local SI = ((o and o() or _ENV)); local zI, bI =
                                                US(...); local BI = { [0X00001] = XI, [0X2] = JI }; zI = zI - 1; local CI = (SI == E and oI or SI); local eI = 0; for hI = 0, zI do
                                                    do
                                                        if not (nI > hI) then break; else XI[hI] = bI[hI + 1]; end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ; if not aI then bI = nil; else
                                                    if not (iI) then else XI[nI] = { n = zI >= nI and zI - nI + 1 or 0,
                                                            t(bI, nI + 1, zI + 1) }; end
                                                    ;
                                                end
                                                ; if CI == SI then else
                                                    if not (J) then _ENV = CI; else (J)(PI, CI); end
                                                    ;
                                                end
                                                ; local RI, HI, TI, sI = Y(function()
                                                    while -736467147 do
                                                        local hI = jI[II]; local Qr = hI[7]; II = II + 0X1; if Qr < 6 then
                                                            if Qr >= 0X3 then
                                                                if not (Qr >= 0X004) then
                                                                    local Nr = EI[0X0]; XI[1] = Nr[0X001][Nr[2]]; II = II +
                                                                    1; do XI[0X2] = XI[0]; end
                                                                    ; II = II + 1; local pr = 1; XI[pr](XI[pr + 0x1]); eI =
                                                                    pr - 1; II = II + 1; repeat
                                                                        local mr, lr, cr = uI, XI, {}; for Yr, Ur in q, mr do
                                                                            do
                                                                                for xr, fr in q, Ur do
                                                                                    do
                                                                                        if not (fr[1] == lr and fr[2] >= 0X0) then else
                                                                                            local Zr = fr[2]; if not (not cr[Zr]) then else cr[Zr] = {
                                                                                                    lr[Zr] }; end
                                                                                            ; (fr)[1] = cr[Zr]; (fr)[2] = 0X1;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    until true
                                                                    ; return;
                                                                else
                                                                    do
                                                                        if Qr == 5 then
                                                                            do
                                                                                if XI[hI[0X01]] ~= XI[hI[0x03]] then else II =
                                                                                    hI[0X0006]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else XI[hI[0X6]] = CI[hI[0X5]]; end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                do
                                                                    if not (Qr < 1) then
                                                                        if Qr == 2 then
                                                                            local Nr = (hI[1]); local pr = (nil); local mr = (Nr[6]); local lr = #
                                                                            mr; do
                                                                                if lr > 0X0 then
                                                                                    pr = {}; for cr = 0x01, lr do
                                                                                        local Yr = (mr[cr]); if Yr[1] == 0 then (pr)[cr - 0X1] = {
                                                                                                XI, Yr[2] }; else (pr)[cr - 0X1] =
                                                                                            EI[Yr[2]]; end
                                                                                        ;
                                                                                    end
                                                                                    ; L(uI, pr);
                                                                                end
                                                                                ;
                                                                            end
                                                                            ; do XI[hI[0x00006]] = dS(CI, Nr, pr); end
                                                                            ;
                                                                        else II = hI[0X1]; end
                                                                        ;
                                                                    else (XI)[hI[6]] = hI[5]; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        elseif Qr < 9 then
                                                            do
                                                                if not (Qr < 0X007) then
                                                                    if Qr ~= 0X08 then (XI)[hI[6]] = XI[hI[1]] *
                                                                        XI[hI[3]]; else (XI)[hI[0x6]] = XI[hI[0X00001]] +
                                                                        XI[hI[0X003]]; end
                                                                    ;
                                                                else XI[hI[6]] = C(XI[hI[1]], XI[hI[0x3]]); end
                                                                ;
                                                            end
                                                            ;
                                                        else
                                                            if Qr < 10 then
                                                                local Nr = hI[1]; local pr = (XI[Nr]); for mr = Nr + 0x00001, hI[3] do
                                                                    do pr = pr .. XI[mr]; end
                                                                    ;
                                                                end
                                                                ; (XI)[hI[6]] = pr;
                                                            else
                                                                if Qr ~= 11 then else (XI)[hI[0X6]] = {
                                                                        t({}, 0X001, hI[0X1]) }; end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end); do
                                                    if not (RI) then
                                                        if U(HI) ~= "string" then f(HI, 0); else
                                                            do
                                                                if not (d(HI, 'a\116\116\101m\112t\032to\032\121ie\108d a\099\114o\115\115 \109e\116am\101\116\104o\100\047C%\045c\097ll bou\110\100a\114\121')) then else return
                                                                    _(); end
                                                                ;
                                                            end
                                                            ; do
                                                                if d(HI, '\094.-\058\037\100\043\058 ') then f(
                                                                    '\076\117r\097p\104\032Scr\105pt:' ..
                                                                    (OI[II - 0X01] or "(\105n\116\101rn\097\108\041") ..
                                                                    ": " .. x(HI), 0X0); else f(HI, 0); end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    else
                                                        do
                                                            if HI then
                                                                if sI == 0X0001 then return XI[TI](); else return XI[TI](
                                                                    t(XI, TI + 1, eI)); end
                                                                ;
                                                            else
                                                                if not (TI) then else return t(XI, TI, sI); end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end; else PI = function(...)
                                                local II, XI, eI = 0X001, {}, (0); local BI = ({ [0X2] = JI, [0X00001] = XI }); local SI = ((o and o() or _ENV)); local zI, bI =
                                                US(...); local CI = ((SI == E and oI or SI)); zI = zI - 0X1; for hI = 0X0, zI do
                                                    if nI > hI then
                                                        do (XI)[hI] = bI[hI + 0X1]; end
                                                        ;
                                                    else break; end
                                                    ;
                                                end
                                                ; if not aI then bI = nil; else
                                                    if not (iI) then else XI[nI] = { n = zI >= nI and zI - nI + 1 or 0,
                                                            t(bI, nI + 0X01, zI + 1) }; end
                                                    ;
                                                end
                                                ; if CI == SI then elseif J then J(PI, CI); else
                                                    do _ENV = CI; end
                                                    ;
                                                end
                                                ; local RI, HI, TI, sI = Y(function()
                                                    repeat
                                                        local hI = jI[II]; local Qr = hI[0X007]; do II = II + 1; end
                                                        ; do
                                                            if not (Qr < 10) then
                                                                do
                                                                    if not (Qr < 15) then
                                                                        if not (Qr < 17) then
                                                                            if not (Qr < 18) then
                                                                                if Qr == 19 then
                                                                                    local Nr = (EI[0X01]); (XI)[0x0] = Nr
                                                                                    [1][Nr[0X2]]; do II = II + 0X1; end
                                                                                    ; do eI = 0; end
                                                                                    ; (XI[eI])(); eI = eI - 0X1; II = II +
                                                                                    0X00001; II = II + 1; hI = jI[II]; II =
                                                                                    II + 1; XI[0X000] = CI[hI[0X5]]; hI =
                                                                                    jI[II]; II = II + 1; local pr, mr = 0,
                                                                                        XI[0]; do (XI)[pr + 0X1] = mr; end
                                                                                    ; (XI)[pr] = mr[hI[0X4]]; hI = jI
                                                                                    [II]; II = II + 0X01; XI[2] = hI[5]; II =
                                                                                    II + 0x1; pr = 0X0; XI[pr] = XI[pr](
                                                                                    XI[pr + 1], XI[pr + 2]); eI = pr; hI =
                                                                                    jI[II]; II = II + 1; XI[0X0] = XI[0]
                                                                                    [hI[0x4]]; hI = jI[II]; do II = II +
                                                                                        0X001; end
                                                                                    ; do XI[0] = XI[0][hI[4]]; end
                                                                                    ; do II = II + 1; end
                                                                                    ; II = II + 0x1; do hI = jI[II]; end
                                                                                    ; II = II + 0x1; do (XI)[0X0000] = XI
                                                                                        [0X0][hI[0X4]]; end
                                                                                    ; II = II + 1; II = II + 1; do hI =
                                                                                        jI[II]; end
                                                                                    ; do II = II + 1; end
                                                                                    ; XI[0] = XI[0][hI[4]]; II = II + 1; do II =
                                                                                        II + 1; end
                                                                                    ; hI = jI[II]; do II = II + 1; end
                                                                                    ; (XI)[0X00000] = XI[0][hI[4]]; local cr = (nil); hI =
                                                                                    jI[II]; II = II + 1; (XI)[0] = XI
                                                                                    [0X0][hI[0X4]]; II = II + 1; II = II +
                                                                                    1; do hI = jI[II]; end
                                                                                    ; II = II + 0X1; do (XI)[0X0] = XI
                                                                                        [0X0][hI[0X4]]; end
                                                                                    ; hI = jI[II]; II = II + 1; pr = 0X0; do mr =
                                                                                        XI[0]; end
                                                                                    ; do (XI)[pr + 0X1] = mr; end
                                                                                    ; do (XI)[pr] = mr[hI[0X04]]; end
                                                                                    ; hI = jI[II]; II = II + 1; local lr =
                                                                                    hI[1]; local Yr = (lr[6]); local Ur = #
                                                                                    Yr; if not (Ur > 0) then else
                                                                                        do cr = {}; end
                                                                                        ; for xr = 0X001, Ur do
                                                                                            local fr = Yr[xr]; if fr[1] ~= 0X0 then
                                                                                                do (cr)[xr - 0X1] = EI
                                                                                                    [fr[2]]; end
                                                                                                ;
                                                                                            else (cr)[xr - 1] = { XI,
                                                                                                    fr[0X002] }; end
                                                                                            ;
                                                                                        end
                                                                                        ; (L)(uI, cr);
                                                                                    end
                                                                                    ; (XI)[0x002] = dS(CI, lr, cr); II =
                                                                                    II + 0X1; do pr = 0X0; end
                                                                                    ; XI[pr](XI[pr + 1], XI[pr + 2]); eI =
                                                                                    pr - 1; II = II + 1; II = II + 1; do hI =
                                                                                        jI[II]; end
                                                                                    ; II = II + 0X01; do (XI)[0X00] = CI
                                                                                        [hI[5]]; end
                                                                                    ; II = II + 0X00001; II = II + 1; hI =
                                                                                    jI[II]; II = II + 1; pr = 0X0; do mr =
                                                                                        XI[0]; end
                                                                                    ; XI[pr + 1] = mr; (XI)[pr] = mr
                                                                                    [hI[4]]; do hI = jI[II]; end
                                                                                    ; do II = II + 1; end
                                                                                    ; do XI[0x00002] = hI[5]; end
                                                                                    ; II = II + 1; pr = 0; do (XI)[pr] =
                                                                                        XI[pr](XI[pr + 0X1], XI[pr + 2]); end
                                                                                    ; eI = pr; hI = jI[II]; do II = II +
                                                                                        0X00001; end
                                                                                    ; XI[0] = XI[0X0][hI[4]]; II = II +
                                                                                    0X00001; II = II + 1; hI = jI[II]; II =
                                                                                    II + 1; do XI[0x0] = XI[0][hI[4]]; end
                                                                                    ; hI = jI[II]; II = II + 0X1; XI[0] =
                                                                                    XI[0x000][hI[4]]; do hI = jI[II]; end
                                                                                    ; II = II + 0X001; (XI)[0X000] = XI
                                                                                    [0X0][hI[4]]; do hI = jI[II]; end
                                                                                    ; II = II + 0x01; do (XI)[0] = XI[0]
                                                                                        [hI[4]]; end
                                                                                    ; II = II + 1; II = II + 1; do hI =
                                                                                        jI[II]; end
                                                                                    ; do II = II + 1; end
                                                                                    ; (XI)[0] = XI[0][hI[4]]; hI = jI
                                                                                    [II]; II = II + 0X1; do (XI)[0x0] =
                                                                                        XI[0][hI[0X04]]; end
                                                                                    ; do hI = jI[II]; end
                                                                                    ; II = II + 0X1; pr = 0x000; mr = XI
                                                                                    [0X0]; (XI)[pr + 1] = mr; XI[pr] = mr
                                                                                    [hI[0X4]]; hI = jI[II]; II = II + 0X1; lr =
                                                                                    hI[1]; do cr = nil; end
                                                                                    ; Yr = lr[6]; do Ur = #Yr; end
                                                                                    ; if not (Ur > 0x00000) then else
                                                                                        do cr = {}; end
                                                                                        ; for xr = 1, Ur do
                                                                                            local fr = Yr[xr]; if fr[0X1] == 0x000 then
                                                                                                do (cr)[xr - 0X0001] = {
                                                                                                        XI, fr[0X2] }; end
                                                                                                ;
                                                                                            else cr[xr - 1] = EI
                                                                                                [fr[0x00002]]; end
                                                                                            ;
                                                                                        end
                                                                                        ; L(uI, cr);
                                                                                    end
                                                                                    ; (XI)[0X002] = dS(CI, lr, cr); do II =
                                                                                        II + 0X1; end
                                                                                    ; pr = 0X0; (XI[pr])(XI[pr + 0X1],
                                                                                        XI[pr + 0X00002]); do eI = pr - 1; end
                                                                                    ; hI = jI[II]; do II = II + 1; end
                                                                                    ; II = hI[0x1];
                                                                                else
                                                                                    repeat
                                                                                        local Nr, pr = uI, (XI); local mr = ({}); for lr, cr in q, Nr do
                                                                                            for Yr, Ur in q, cr do
                                                                                                if Ur[1] == pr and Ur[0X2] >= 0x0 then
                                                                                                    local xr = Ur[0x2]; if not (not mr[xr]) then else mr[xr] = {
                                                                                                            pr[xr] }; end
                                                                                                    ; (Ur)[0X1] = mr[xr]; (Ur)[0X00002] = 1;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    until 'gIGbN\078\042\114'
                                                                                    ; return;
                                                                                end
                                                                                ;
                                                                            else XI[hI[6]] = hI[0x5]; end
                                                                            ;
                                                                        else
                                                                            if Qr == 16 then
                                                                                local pr = hI[1]; local mr = hI[3]; local Nr = (hI[6]); do
                                                                                    if pr == 0X0 then else eI = Nr + pr -
                                                                                        1; end
                                                                                    ;
                                                                                end
                                                                                ; local lr, cr = nil, (nil); do
                                                                                    if pr ~= 0X0001 then lr, cr = US(XI
                                                                                        [Nr](t(XI, Nr + 1, eI))); else lr, cr =
                                                                                        US(XI[Nr]()); end
                                                                                    ;
                                                                                end
                                                                                ; do
                                                                                    if mr == 1 then eI = Nr - 0X1; else
                                                                                        if mr ~= 0x0 then
                                                                                            lr = Nr + mr - 0x2; do eI =
                                                                                                lr + 1; end
                                                                                            ;
                                                                                        else
                                                                                            do lr = lr + Nr - 1; end
                                                                                            ; eI = lr;
                                                                                        end
                                                                                        ; local Yr = (0); for Ur = Nr, lr do
                                                                                            Yr = Yr + 0x0001; (XI)[Ur] =
                                                                                            cr[Yr];
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                (XI)[0X0] = CI[hI[5]]; local lr = (3); II =
                                                                                II + 1; II = II + 0X1; hI = jI[II]; II =
                                                                                II + 0X001; (XI)[0] = XI[0][hI[0X04]]; do II =
                                                                                    II + 0X1; end
                                                                                ; II = II + 0X1; local Nr = EI[0X0]; II =
                                                                                II + 0X1; local pr = (1); do (XI)[0X001] =
                                                                                    Nr[1][Nr[2]]; end
                                                                                ; II = II + 0x1; II = II + 0X1; hI = jI
                                                                                [II]; do II = II + 1; end
                                                                                ; local mr = XI[0x01]; do XI[pr + 1] = mr; end
                                                                                ; (XI)[pr] = mr[hI[0X4]]; hI = jI[II]; II =
                                                                                II + 1; (XI)[0X3] = hI[0X5]; II = II +
                                                                                0X001; pr = 1; local cr = 0; do
                                                                                    if lr ~= 0x0 then eI = pr + lr - 1; end
                                                                                    ;
                                                                                end
                                                                                ; local Yr, Ur = nil, (nil); do
                                                                                    if lr == 0x01 then Yr, Ur = US(XI
                                                                                        [pr]()); else Yr, Ur = US(XI[pr](
                                                                                        t(XI, pr + 0X1, eI))); end
                                                                                    ;
                                                                                end
                                                                                ; if cr == 1 then eI = pr - 1; else
                                                                                    if cr ~= 0X000 then
                                                                                        do Yr = pr + cr - 0X02; end
                                                                                        ; eI = Yr + 0X001;
                                                                                    else
                                                                                        do Yr = Yr + pr - 1; end
                                                                                        ; eI = Yr;
                                                                                    end
                                                                                    ; local xr = (0X00); for fr = pr, Yr do
                                                                                        do xr = xr + 0X1; end
                                                                                        ; (XI)[fr] = Ur[xr];
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ; II = II + 1; pr = 0x00; do XI[pr] = XI
                                                                                    [pr](t(XI, pr + 1, eI)); end
                                                                                ; eI = pr; II = II + 1; II = II + 1; do hI =
                                                                                    jI[II]; end
                                                                                ; II = II + 0X1; if not (not XI[0]) then else II =
                                                                                    hI[1]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        do
                                                                            if Qr >= 0Xc then
                                                                                if not (Qr < 0X000d) then
                                                                                    if Qr == 14 then (XI)[hI[0X00006]] =
                                                                                        XI[hI[1]] * XI[hI[3]]; else
                                                                                        local Nr = (EI[0X0]); XI[0] = Nr
                                                                                        [0X1][Nr[2]]; II = II + 0X00001; II =
                                                                                        II + 0X1; local pr = 0X00; hI =
                                                                                        jI[II]; do II = II + 0X0001; end
                                                                                        ; local mr = (XI[0]); do XI[pr + 0X1] =
                                                                                            mr; end
                                                                                        ; (XI)[pr] = mr[hI[4]]; hI = jI
                                                                                        [II]; II = II + 0X1; do XI[0X2] =
                                                                                            hI[0X5]; end
                                                                                        ; II = II + 1; pr = 0; XI[pr] =
                                                                                        XI[pr](XI[pr + 0X1],
                                                                                            XI[pr + 0X0002]); do eI = pr; end
                                                                                        ; II = II + 0X1; do II = II + 1; end
                                                                                        ; hI = jI[II]; II = II + 0X1; if not (not XI[0]) then else
                                                                                            do II = hI[1]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else (XI)[hI[6]] = CI[hI[0x5]]; end
                                                                                ;
                                                                            else
                                                                                if Qr == 11 then II = hI[0X001]; else (XI)[hI[6]] = -
                                                                                    XI[hI[1]]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                do
                                                                    if not (Qr >= 0x5) then
                                                                        do
                                                                            if not (Qr < 2) then
                                                                                if Qr >= 0X3 then
                                                                                    do
                                                                                        if Qr ~= 0X4 then
                                                                                            local Nr = hI[0X1]; local mr = (Nr[0X6]); local lr, pr =
                                                                                            #mr, (nil); if lr > 0 then
                                                                                                pr = {}; do
                                                                                                    for cr = 1, lr do
                                                                                                        local Yr = (mr[cr]); do
                                                                                                            if Yr[1] == 0x0 then pr[cr - 1] = {
                                                                                                                    XI,
                                                                                                                    Yr[2] }; else
                                                                                                                do (pr)[cr - 0x0001] =
                                                                                                                    EI[Yr[2]]; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ; L(uI, pr);
                                                                                            end
                                                                                            ; (XI)[hI[6]] = dS(CI, Nr, pr);
                                                                                        else
                                                                                            local Nr, pr = hI[6],
                                                                                                ((hI[0X3] - 1) * 0X32); local mr = (XI[Nr]); for lr = 0X00001, hI[0X00001] do mr[pr + lr] =
                                                                                                XI[Nr + lr]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if not (XI[hI[0x1]] < XI[hI[0X3]]) then else II =
                                                                                        hI[6]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                do
                                                                                    if Qr ~= 0x0001 then (XI)[hI[0X6]] =
                                                                                        S(XI[hI[1]], XI[hI[3]]); else end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        do
                                                                            if not (Qr < 0X7) then
                                                                                if not (Qr >= 0X0008) then
                                                                                    local Nr = (XI[hI[0X1]] / XI[hI[3]]); do (XI)[hI[6]] =
                                                                                        Nr - Nr % 1; end
                                                                                    ;
                                                                                else
                                                                                    if Qr == 0X0009 then
                                                                                        for Nr = hI[0x6], hI[0X1] do (XI)[Nr] = nil; end
                                                                                        ;
                                                                                    else
                                                                                        do (XI)[hI[0X6]] = {
                                                                                                t({}, 1, hI[0x1]) }; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if Qr == 6 then
                                                                                    local Nr, pr = hI[0X6],
                                                                                        (XI[hI[0X001]]); do (XI)[Nr + 0X1] =
                                                                                        pr; end
                                                                                    ; do (XI)[Nr] = pr[hI[0X04]]; end
                                                                                    ;
                                                                                else
                                                                                    do XI[hI[0X6]] = XI[hI[0X1]] <
                                                                                        XI[hI[0X3]]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    until false
                                                    ;
                                                end); if RI then
                                                    do
                                                        if HI then
                                                            if sI == 1 then return XI[TI](); else return XI[TI](t(XI,
                                                                    TI + 1, eI)); end
                                                            ;
                                                        else
                                                            if not (TI) then else return t(XI, TI, sI); end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                else
                                                    do
                                                        if U(HI) == "s\116\114ing" then
                                                            do
                                                                if d(HI, "\097\116t\101\109pt to\032y\105el\100\032\097\099r\111s\115\032\109e\116amethod/C\037\045\099\097\108\108 \098\111\117\110d\097\114y") then return
                                                                    _(); end
                                                                ;
                                                            end
                                                            ; if d(HI, "\094.\045:\037\100+\058 ") then (f)(
                                                                "\076urap\104\032Sc\114\105\112t:" ..
                                                                (OI[II - 0X1] or "(\105\110\116\101\114n\097\108\041") ..
                                                                ": " .. x(HI), 0X000); else (f)(HI, 0x0000); end
                                                            ;
                                                        else (f)(HI, 0); end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end; end
                                        ;
                                    end
                                    ;
                                end
                                ; if J then (J)(PI, oI); end
                                ; return PI;
                            end; end
                        ; if not WI[9.55738442E8] then
                            tI = 3.61031549E8; WI[9.55738442E8] = tI;
                        else
                            do tI = WI[9.55738442E8]; end
                            ;
                        end
                        ;
                    end
                    ;
                end
                ;
            else
                if tI ~= 4.96363191E8 then
                    LS = false; if not (not WI[2.100086817E9]) then tI = WI[2.100086817E9]; else
                        do tI = 1.671398072E9; end
                        ; do WI[2.100086817E9] = tI; end
                        ;
                    end
                    ;
                else
                    if not WI[1.074012923E9] then
                        tI = 2.128057514E9; WI[1.074012923E9] = tI;
                    else tI = WI[1.074012923E9]; end
                    ; MS = LS();
                end
                ;
            end
            ;
        end
        ;
    end
    ; return dS(E, MS, nil);
end)(0X000d, setmetatable, coroutine.yield, 0X2, '\114\115\104if\116', coroutine, 10, 4, 0Xc, 'bx\111r', string.gsub,
    table.insert, 43, tostring, type, 0X0000b, 14, table, string.sub, 0X009, 0X0003e, 6, 0X400, tonumber, 7997, 31, 84,
    rawget, unpack, 0X0014, bit32, pcall, "\108\115hif\116", 0X0004000000, 1, 0X010, 0X8, 0x07, 5, 16384, 'bnot', _ENV,
    "bo\114", 0X3, 0XF, 0, nil, function(...) ((...))[...] = nil; end, {},
    { 0x0c4B2, 2021280889, 1098117798, 0X52548437, 3413357064, 1171261511, 0X000064bB720A, 1679366559, 0X520c9eD8 })(...);

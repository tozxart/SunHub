-- This file was generated using Luraph Obfuscator v13.6.7

return (function(Nq, Bk, Ck, vq, oq, tq, Mq, Dq, _q, Xq, Hk, Iq, Uq, sq, Jq, jq, uq, xq, kq, ck, Qk, lq, Tq, Sk, bq, Vq,
                 rk, nq, Gq, aq, Yq, qq, gq, mq, Rk, fq, zk, Oq, Wq, dq, Zk, Kq, iq, pq, z, C, R)
    local Q = Xq; local H, F, c, Z, ek = nil, false, nil, nil, (1.653085445E9); local Fk, B = {}, (Vq); repeat
        if not (ek <= 1.187763583E9) then
            do
                if not (ek >= 1.69871893E9) then
                    if not Fk[5.83643353E8] then
                        ek = 5.3805728E7; Fk[5.83643353E8] = ek;
                    else ek = Fk[5.83643353E8]; end
                    ; H = Jq;
                else
                    do Z = error; end
                    ; break;
                end
                ;
            end
            ;
        else
            do
                if ek ~= 5.3805728E7 then
                    if not Fk[1.752949875E9] then
                        ek = 1.69871893E9; (Fk)[1.752949875E9] = ek;
                    else ek = Fk[1.752949875E9]; end
                    ; c = tonumber;
                else
                    if not Fk[5.75956068E8] then
                        ek = 1.187763583E9; do Fk[5.75956068E8] = ek; end
                        ;
                    else
                        do ek = Fk[5.75956068E8]; end
                        ;
                    end
                    ; F = Tq;
                end
                ;
            end
            ;
        end
        ;
    until false
    ; local O = (-266025886); local E = nil; local Ek = (8.76008676E8); local r = (false); repeat
        if not (Ek <= 3.1761334E7) then
            if Ek <= 1.05814771E8 then
                O = 2147483648; if not Fk[3.58305053E8] then
                    Ek = 3.1761334E7; (Fk)[3.58305053E8] = Ek;
                else Ek = Fk[3.58305053E8]; end
                ;
            else
                do
                    if not Fk[9.22378038E8] then
                        Ek = 1.05814771E8; Fk[9.22378038E8] = Ek;
                    else Ek = Fk[9.22378038E8]; end
                    ;
                end
                ; E = sq;
            end
            ;
        else
            r = assert; break;
        end
        ;
    until false
    ; local o, Ak = '\037\078\063$', 1.648145743E9; local L = (false); local K = 4503599627370496; while 0X00130faBA4 do
        if Ak == 1.648145743E9 then
            if not Fk[9.83591896E8] then
                Ak = 5.1122237E8; (Fk)[9.83591896E8] = Ak;
            else Ak = Fk[9.83591896E8]; end
            ; do L = Dq; end
            ;
        else
            if Ak == 5.1122237E8 then
                do o = getfenv; end
                ; break;
            end
            ;
        end
        ;
    end
    ; local Lk = (5.62880143E8); local X, yq, e = 0X0004b46F839, nil, nil; local W = true; local T = (0.2975785650802265); local h, Hq, w =
    lq.insert, nil, nil; local D = 1133001126; repeat
        if Lk == 5.62880143E8 then
            do Hq = {}; end
            ; if not (not Fk[6.98645847E8]) then
                do Lk = Fk[6.98645847E8]; end
                ;
            else
                do Lk = 1.29566173E9; end
                ; Fk[6.98645847E8] = Lk;
            end
            ;
        elseif Lk == 1.29566173E9 then
            do
                if not Fk[5.57382346E8] then
                    do Lk = 3.61920921E8; end
                    ; (Fk)[5.57382346E8] = Lk;
                else Lk = Fk[5.57382346E8]; end
                ;
            end
            ; do w = rawget; end
            ;
        elseif Lk == 3.61920921E8 then
            if not (not Fk[5.02934433E8]) then
                do Lk = Fk[5.02934433E8]; end
                ;
            else
                Lk = 2.89609252E8; do Fk[5.02934433E8] = Lk; end
                ;
            end
            ; do X = iq; end
            ;
        else
            if Lk == 2.89609252E8 then
                yq = function(...) return (...)(); end; e = pq.byte; if not Fk[8.42944652E8] then
                    do Lk = 1.9753779E7; end
                    ; (Fk)[8.42944652E8] = Lk;
                else Lk = Fk[8.42944652E8]; end
                ;
            else
                if Lk == 1.9753779E7 then
                    W = { [0] = { [0X000] = 0X00000, oq, 2, 3, Yq, 5, 0X6, 0x007, 0X8, uq, 0XA, Gq, 12, 0XD, 14, 15 },
                        { [0x0] = 1, 0, 0X3, 0X2, 5, 4, Nq, 0x006, 0X00009, dq, 0Xb, 10, 13, 0XC, Oq, 14 },
                        { [0x000] = 2, 3, 0X00, 1, 0X06, 0x7, 4, jq, 0x0000A, Gq, 0X8, 0X9, 14, 15, 0X0C, 13 },
                        { [Kq] = 0X3, 0X0002, 0X001, 0x0, 0X7, 6, 0X05, 4, 11, 10, 9, 8, 15, 14, 13, 12 },
                        { [0X00000] = 0X4, 0x5, 6, 7, 0, 0X1, 0X2, 0x3, 12, 0XD, 0XE, 0xf, 8, uq, 0X0A, 11 },
                        { [0X0] = 0X5, Yq, 0X7, 0x6, 0X001, 0X0000, 0X03, 2, 13, 12, 0Xf, tq, 0X9, 8, 0Xb, 0Xa },
                        { [Kq] = 6, 0x7, Yq, jq, 2, Uq, 0, 0X0001, 0X0000E, 15, 0x0000c, 13, 10, 0XB, 0X8, 0X9 },
                        { [0X0] = Nq, 6, 5, 4, 3, 2, 0X1, 0, Oq, 14, 13, 12, 0x00B, 10, 9, 0X8 },
                        { [0] = 8, 0X9, 10, 11, 0XC, 0xd, 0XE, 0xF, 0, 0x1, vq, Uq, 4, 5, 6, Nq },
                        { [0] = 9, 0X8, 0x0000B, 0XA, 0X0000d, 0x00C, 0Xf, tq, 1, 0X00, 3, 0X2, 5, 0X004, 0X7, 0X6 },
                        { [0] = 10, 0XB, 0X00008, 0X9, 0X0000E, 15, 0Xc, 0x00D, 2, 0x3, 0, 0X1, 6, 7, 4, 0X005 },
                        { [0x0] = 0x000B, 10, 9, 0X8, 15, 0X000e, 0X0d, 0Xc, 0X0003, 2, 0X001, 0, 7, 6, 0X5, 4 },
                        { [0] = 12, 0XD, 0Xe, Oq, 0X8, uq, 10, 0XB, 0X4, 5, 0X6, 7, 0, 0X1, 0X2, 0X03 },
                        { [0x0] = 0X000D, 0X000c, 15, 14, 9, 8, 11, 0X0a, 0x5, 4, 7, Wq, 1, 0x0, 0X0003, 0X02 },
                        { [0X00000] = 0x0000e, 15, 12, Iq, qq, 11, 8, 0X009, 0X6, 0X7, 0X4, 5, 2, 3, 0X0, 1 },
                        { [0X0000] = 15, 14, 0Xd, 12, 11, 10, 9, dq, 0X07, 0X6, 5, Yq, 3, 2, 0X1, 0 } }; T = gq; do D =
                        fq or table.unpack; end
                    ; do break; end
                    ;
                end
                ;
            end
            ;
        end
        ;
    until false
    ; local l = nil; l = function(pk, ok, Yk)
        if not (ok > Yk) then else return; end
        ; local uk = Yk - ok + 0X0001; if uk >= 8 then return pk[ok], pk[ok + 0X1], pk[ok + vq], pk[ok + 3], pk[ok + 4],
                pk[ok + 0X5], pk[ok + 6], pk[ok + 0X0007], l(pk, ok + 0X8, Yk); elseif uk >= 7 then return pk[ok],
                pk[ok + 1], pk[ok + 2], pk[ok + 0X3], pk[ok + 4], pk[ok + jq], pk[ok + 6], l(pk, ok + 0x007, Yk); elseif uk >= 0X6 then return
            pk[ok], pk[ok + 0X0001], pk[ok + 0X2], pk[ok + 3], pk[ok + 0X4], pk[ok + 5], l(pk, ok + 0X00006, Yk); elseif uk >= 0X5 then return
            pk[ok], pk[ok + 1], pk[ok + 2], pk[ok + 0x00003], pk[ok + 0X0004], l(pk, ok + 0x5, Yk); else
            if uk >= 0X4 then return pk[ok], pk[ok + 1], pk[ok + 0X02], pk[ok + 0X3], l(pk, ok + 4, Yk); elseif uk >= 3 then return
                pk[ok], pk[ok + 1], pk[ok + 2], l(pk, ok + 0X3, Yk); else
                if not (uk >= vq) then
                    do return pk[ok], l(pk, ok + 0X00001, Yk); end
                    ;
                else
                    do return pk[ok], pk[ok + 1], l(pk, ok + 2, Yk); end
                    ;
                end
                ;
            end
            ;
        end
        ;
    end; local d = nil; local j = nil; local Pk = (1.065942797E9); local p = false; local Y = nil; local G = (nil); local A, N, V =
    nil, nil, (true); while 0.051440394371531695 do
        if not (Pk <= 1.144318842E9) then
            do
                if not (Pk <= 1.267692732E9) then
                    if Pk ~= 1.950881032E9 then
                        N = kq; if not (not Fk[7.23734629E8]) then Pk = Fk[7.23734629E8]; else
                            Pk = 1.144318842E9; do (Fk)[7.23734629E8] = Pk; end
                            ;
                        end
                        ;
                    else
                        A = string.rep; do
                            if not Fk[1.68142238E8] then
                                Pk = 1.782658247E9; (Fk)[1.68142238E8] = Pk;
                            else Pk = Fk[1.68142238E8]; end
                            ;
                        end
                        ;
                    end
                    ;
                else
                    do
                        if not (Pk <= 1.205568657E9) then
                            j = 4294967296; do
                                if not (not Fk[1.179366322E9]) then Pk = Fk[1.179366322E9]; else
                                    do Pk = 5.63529963E8; end
                                    ; Fk[1.179366322E9] = Pk;
                                end
                                ;
                            end
                            ;
                        else
                            Y = (o and o() or _ENV); G = oq; do
                                if not Fk[4.63243231E8] then
                                    Pk = 1.267692732E9; (Fk)[4.63243231E8] = Pk;
                                else Pk = Fk[4.63243231E8]; end
                                ;
                            end
                            ; d = L(
                            F(

                                0x5), "(.\041\040.\041",
                                function(pk, ok)
                                    do
                                        if ok == "\072" then
                                            do N = c(pk); end
                                            ; return '';
                                        else
                                            local Yk = (E(c(pk .. ok, 0X00010))); do
                                                if N then
                                                    local uk = A(Yk, N); N = nil; return uk;
                                                else return Yk; end
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    end
                                    ;
                                end);
                        end
                        ;
                    end
                    ;
                end
                ;
            end
            ;
        else
            if not (Pk <= 5.63529963E8) then
                if not (Pk >= 1.144318842E9) then
                    if not (not Fk[2.069680763E9]) then Pk = Fk[2.069680763E9]; else
                        Pk = 1.950881032E9; do Fk[2.069680763E9] = Pk; end
                        ;
                    end
                    ;
                else
                    V = _q; if not (not Fk[1.495221888E9]) then Pk = Fk[1.495221888E9]; else
                        Pk = 1.205568657E9; Fk[1.495221888E9] = Pk;
                    end
                    ;
                end
                ;
            else
                p = xq; break;
            end
            ;
        end
        ;
    end
    ; local U = (nil); local eq, hk = true, 2.130298767E9; local a = true; repeat
        if hk > 8.32049058E8 then
            if hk >= 2.130298767E9 then
                if not (not Fk[7.1434089E7]) then hk = Fk[7.1434089E7]; else
                    hk = 8.32049058E8; (Fk)[7.1434089E7] = hk;
                end
                ; do a = function()
                        local pk = (e(d, G, G)); G = G + oq; return pk;
                    end; end
                ;
            else
                eq = function() (Z)(
                    "\089our\032\101\110\118ir\111nment\032\100oe\115 n\111\116\032\115\117\112\112ort\032L\117\097\074\073\084's FFI \108ib\114\097\114y,\032t\104e\114\101f\111\114\101\032you \099\097nno\116\032u\115e\032L\076/\085LL\047i\032s\117\102fi\120e\115\046"); end; break;
            end
            ;
        else
            U = j - oq; if not Fk[8.18790836E8] then
                hk = 1.580485273E9; Fk[8.18790836E8] = hk;
            else hk = Fk[8.18790836E8]; end
            ;
        end
        ;
    until false
    ; local yk = (1.142046061E9); local v, I, q =
    { [0x00] = 0X1, 0X02, 4, 0x8, 16, 32, 0X40, 128, 0X000100, mq, 0x400, 0X800, 0X01000, nq, 0x04000, 0X8000, 65536,
        0X20000, 0X40000, 0x80000, 1048576, 2097152, 4194304, 0X0000800000, 16777216, 33554432, 0x0004000000, 134217728,
        268435456, 536870912, bq, O, j, [35] = 34359738368, [42] = 4398046511104, [49] = 562949953421312 },
        0.8354890529575095, false; while 0X4e166B89 do
        if yk > 1.142046061E9 then
            q = I and I[aq] or
            function(pk, ok)
                do pk = pk % j; end
                ; local uk, Yk = 0, (nil); do
                    for Gk = 7650.0, 18686.0, 5537.0 do
                        do
                            if Gk == 7650.0 then ok = ok % j; else
                                if Gk ~= 13187.0 then else
                                    Yk = 0X1; do break; end
                                    ;
                                end
                                ;
                            end
                            ;
                        end
                        ;
                    end
                    ;
                end
                ; while pk > 0X0 and ok > 0X00 do
                    local Nk = ('\084'); local Gk = 1326440252; for dk = 4882.0, 6407.0, 1525.0 do
                        if dk == 6407.0 then
                            do Nk = ok % 0X10; end
                            ;
                        else
                            if dk ~= 4882.0 then else Gk = pk % 0x10; end
                            ;
                        end
                        ;
                    end
                    ; do uk = uk + W[Gk][Nk] * Yk; end
                    ; do pk = (pk - Gk) / 0x10; end
                    ; for dk = 4561.0, 9583.0, 3653.0 do
                        if dk >= 8214.0 then
                            do Yk = Yk * 16; end
                            ; do break; end
                            ;
                        else
                            do ok = (ok - Nk) / 16; end
                            ;
                        end
                        ;
                    end
                    ;
                end
                ; return uk + pk * Yk + ok * Yk;
            end; break;
        else
            if yk < 1.970962408E9 then
                do
                    if not (not Fk[4.80477571E8]) then yk = Fk[4.80477571E8]; else
                        yk = 1.970962408E9; Fk[4.80477571E8] = yk;
                    end
                    ;
                end
                ; I = (Mq or bit32);
            end
            ;
        end
        ;
    end
    ; local g = I and I.band or
    function(pk, ok)
        local Yk = (1.820672931E9); while 0.9401399484656855 do
            do
                if not (Yk < 1.930515622E9) then return ((pk + ok) - q(pk, ok)) / 2; else
                    do Yk = 1.930515622E9; end
                    ; pk = pk % j; ok = ok % j;
                end
                ;
            end
            ;
        end
        ;
    end; local f = (I and I.bor or function(pk, ok)
        for Yk = 8052.0, 26632.0, 5235.0 do
            if Yk > 8052.0 then return U - g(U - pk, U - ok); else
                if Yk < 13287.0 then
                    pk = pk % j; ok = ok % j;
                end
                ;
            end
            ;
        end
        ;
    end); local y = (0.8377663807252265); local x = nil; local wk = (1.189996351E9); local k, _ =
    I and I[zk] or function(pk)
        do return U - (pk % j); end
        ;
    end, I and I.lshift; local Fq = -1931174012; repeat
        if wk ~= 1.189996351E9 then
            if wk == 9.02679442E8 then
                if not Fk[1.92134317E8] then
                    do wk = 1.480619465E9; end
                    ; Fk[1.92134317E8] = wk;
                else wk = Fk[1.92134317E8]; end
                ; y = setmetatable;
            elseif wk == 1.480619465E9 then
                if not (not Fk[1.533113896E9]) then wk = Fk[1.533113896E9]; else
                    wk = 1.732510868E9; (Fk)[1.533113896E9] = wk;
                end
                ; x = I and I[Ck];
            else
                if wk == 1.732510868E9 then
                    if not Fk[1.063117671E9] then
                        do wk = 1.20202979E8; end
                        ; Fk[1.063117671E9] = wk;
                    else wk = Fk[1.063117671E9]; end
                    ; _ = _ or
                    function(pk, ok)
                        local Yk = (8.08872616E8); while 0.6267336318517057 do
                            if Yk == 8.08872616E8 then
                                if not (ok >= Rk) then else return 0; end
                                ; do Yk = 1.209617895E9; end
                                ; do
                                    if not (ok < 0x0) then else
                                        do return x(pk, -ok); end
                                        ;
                                    end
                                    ;
                                end
                                ;
                            else
                                if Yk == 1.209617895E9 then return (pk * v[ok]) % j; end
                                ;
                            end
                            ;
                        end
                        ;
                    end;
                else
                    if wk == 1.20202979E8 then
                        x = x or
                        function(pk, ok)
                            if not (ok >= 32) then else
                                do return Kq; end
                                ;
                            end
                            ; local Yk, uk = 0.3503996361549693, 2.03496856E8; repeat
                                if not (uk < 1.874854935E9) then return Yk - Yk % oq; else
                                    if ok < 0X0 then
                                        do return _(pk, -ok); end
                                        ;
                                    end
                                    ; Yk = (pk % j / v[ok]); uk = 1.874854935E9;
                                end
                                ;
                            until false
                            ;
                        end; break;
                    end
                    ;
                end
                ;
            end
            ;
        else
            if not (not Fk[2.082584838E9]) then
                do wk = Fk[2.082584838E9]; end
                ;
            else
                wk = 9.02679442E8; (Fk)[2.082584838E9] = wk;
            end
            ; do Fq = { [0X00001] = Hq }; end
            ;
        end
        ;
    until false
    ; local Vk = 1.499110586E9; local M = (nil); local b = (0X00005beC4546); local zq = "R\112\090G\090"; while 0.48910041944105453 do
        do
            if Vk > 1.39489894E9 then
                do b = { [oq] = 0x005, [3] = Yq, [0X09] = 0X5, [0] = vq, [0x4] = 1, [8] = 0X09, [0X2] = 0X7, [6] = 0X2,
                        [7] = 9 }; end
                ; if not (not Fk[2.99731354E8]) then Vk = Fk[2.99731354E8]; else
                    Vk = 7.82566609E8; do Fk[2.99731354E8] = Vk; end
                    ;
                end
                ;
            else
                if not (Vk < 1.499110586E9 and Vk > 7.82566609E8) then
                    if not (Vk < 1.39489894E9) then else
                        if not (not Fk[1.502366769E9]) then Vk = Fk[1.502366769E9]; else
                            Vk = 1.39489894E9; Fk[1.502366769E9] = Vk;
                        end
                        ; M = function(pk, ok, Yk)
                            local uk = nil; for Gk = 6759.0, 74675.0, 2907.0 do
                                if Gk == 12573.0 then return uk; elseif Gk == 6759.0 then uk = (pk / v[ok]) % v[Yk]; else
                                    if Gk == 9666.0 then uk = uk - uk % 0X1; end
                                    ;
                                end
                                ;
                            end
                            ;
                        end;
                    end
                    ;
                else
                    do zq = function()
                            local pk, ok, Yk, uk = e(d, G, G + 3); local Gk = 1.553388483E9; while 0X0274a9366 do
                                do
                                    if not (Gk >= 1.553388483E9) then
                                        do return uk * rk + Yk * 65536 + ok * 0X100 + pk; end
                                        ;
                                    else
                                        do Gk = 9.14515526E8; end
                                        ; G = G + 0X4;
                                    end
                                    ;
                                end
                                ;
                            end
                            ;
                        end; end
                    ; break;
                end
                ;
            end
            ;
        end
        ;
    end
    ; local Cq = (function()
        local pk, ok = zq(), (zq()); local Yk = (1.987978799E9); repeat
            do
                if Yk < 1.987978799E9 then return ok * j + pk; else
                    if not (Yk > 1.050975682E9) then else
                        Yk = 1.050975682E9; if ok == 0x00 then return pk; else
                            if ok >= O then
                                do ok = ok - j; end
                                ;
                            end
                            ;
                        end
                        ;
                    end
                    ;
                end
                ;
            end
            ;
        until false
        ;
    end); local S = nil; local Rq, Xk = 0X42B20d7a, 2.007087664E9; do
        repeat
            if Xk == 2.007087664E9 then
                if not (not Fk[5.31847132E8]) then Xk = Fk[5.31847132E8]; else
                    Xk = 1.854179279E9; Fk[5.31847132E8] = Xk;
                end
                ; S = Bk;
            else
                if Xk ~= 1.854179279E9 then else
                    Rq = function()
                        local dk = (9.8004693E7); local Nk = nil; local pk = nil; local ok = 0X00067E1876; do
                            repeat
                                if dk ~= 9.8004693E7 then
                                    do
                                        if dk ~= 8.27683376E8 then else
                                            Nk = oq; break;
                                        end
                                        ;
                                    end
                                    ;
                                else
                                    dk = 8.27683376E8; pk = zq(); ok = zq();
                                end
                                ;
                            until false
                            ;
                        end
                        ; local Yk = ("yC\071z"); local Ok = 1.613403828E9; local uk = true; local Gk = nil; do
                            repeat
                                if not (Ok < 8.8855911E8) then
                                    if Ok < 1.613403828E9 and Ok > 8.8855911E8 then
                                        do Yk = (-1) ^ M(ok, 0X1F, 1); end
                                        ; do Ok = 8.8855911E8; end
                                        ;
                                    elseif Ok < 2.043524525E9 and Ok > 1.312313987E9 then
                                        if pk == 0X00000 and ok == 0 then
                                            do return 0.0; end
                                            ;
                                        end
                                        ; Ok = 1.312313987E9;
                                    elseif Ok > 1.613403828E9 then
                                        Ok = 5.3956484E8; if uk == 0X0 then
                                            do
                                                if Gk == 0 then
                                                    do return Yk * 0X00; end
                                                    ;
                                                else
                                                    local jk = (3.6508046E7); do
                                                        while true do
                                                            if jk < 7.6901269E7 then
                                                                jk = 7.6901269E7; uk = 0x1;
                                                            else
                                                                if jk > 3.6508046E7 then
                                                                    Nk = 0; break;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        elseif uk ~= 0X00007fF then elseif Gk == 0 then return Yk * (0X000 / 0x000); else
                                            do return Yk * (oq / 0); end
                                            ;
                                        end
                                        ;
                                    else
                                        if Ok < 1.312313987E9 and Ok > 5.3956484E8 then
                                            Ok = 2.043524525E9; uk = M(ok, 20, 0xb); do Gk = M(ok, Kq, 0x0014) * j + pk; end
                                            ;
                                        end
                                        ;
                                    end
                                    ;
                                else return Yk * (2 ^ (uk - 0X3Ff)) * (Gk / K + Nk); end
                                ;
                            until false
                            ;
                        end
                        ;
                    end; break;
                end
                ;
            end
            ;
        until false
        ;
    end
    ; local t = 9007199254740992; local Jk = (2.016928293E9); local u, i = nil, -0x1D3DAAAA; do
        while '\126' do
            if Jk < 2.016928293E9 then
                i = function(pk, ok, Yk)
                    local uk = ("(_Q$%S"); local Gk = (1.738978222E9); do
                        repeat
                            do
                                if Gk == 1.738978222E9 then
                                    Gk = 2.004576053E9; if not ok then ok = 1; end
                                    ; if not (not Yk) then else Yk = #pk; end
                                    ;
                                else
                                    if Gk ~= 2.004576053E9 then else
                                        do uk = Yk - ok + 1; end
                                        ; break;
                                    end
                                    ;
                                end
                                ;
                            end
                            ;
                        until false
                        ;
                    end
                    ; if not (uk > 0x0001F3d) then
                        do return D(pk, ok, Yk); end
                        ;
                    else return l(pk, ok, Yk); end
                    ;
                end; break;
            else
                if Jk > 8.2189856E8 then
                    u = function(...) return (...)[...]; end; if not Fk[1.644695947E9] then
                        Jk = 8.2189856E8; Fk[1.644695947E9] = Jk;
                    else Jk = Fk[1.644695947E9]; end
                    ;
                end
                ;
            end
            ;
        end
        ;
    end
    ; local rq = (function()
        local ok, pk = 0, (0); repeat
            local Yk = e(d, G, G); G = G + 0X001; pk = pk + ((Yk > 127 and Yk - 0x80 or Yk) * v[ok]); do
                if not (Yk < 128) then else return pk; end
                ;
            end
            ; ok = ok + 7;
        until false
        ;
    end); local s, Bq, Tk = nil, nil, (2.84180705E8); while 0.2583008706250344 do
        if Tk < 6.78749388E8 then
            do s = ck; end
            ; do
                if not (not Fk[6.10810222E8]) then
                    do Tk = Fk[6.10810222E8]; end
                    ;
                else
                    Tk = 6.78749388E8; (Fk)[6.10810222E8] = Tk;
                end
                ;
            end
            ;
        else
            if not (Tk > 2.84180705E8) then else
                Bq = function()
                    local pk = (rq()); if pk >= K then return pk - t; end
                    ; return pk;
                end; break;
            end
            ;
        end
        ;
    end
    ; local P = pq.match; local Qq = -1415827106; local sk = 4.77203209E8; local Sq, Zq = 1550925815, (false); local cq = ('\084<\084\086\084'); while -10595714 do
        do
            if sk > 4.77203209E8 then
                if not (not Fk[9.1970632E8]) then sk = Fk[9.1970632E8]; else
                    sk = 3.55741219E8; Fk[9.1970632E8] = sk;
                end
                ; Sq = function(...) return B("#", ...), { ... }; end; Zq = 0X001;
            elseif sk < 4.77203209E8 then
                do Qq = function(pk)
                        local ok = zq(); local Yk = Qk; for uk = 1, ok, 0X1f3d do
                            local dk = 4.55758005E8; local Gk = ("Y"); while ',' do
                                if dk == 4.55758005E8 then
                                    Gk = uk + Sk - 0X00001; dk = 1.533684368E9;
                                else
                                    if dk ~= 1.533684368E9 then else
                                        do
                                            if not (Gk > ok) then else
                                                do Gk = ok; end
                                                ;
                                            end
                                            ;
                                        end
                                        ; break;
                                    end
                                    ;
                                end
                                ;
                            end
                            ; local Nk = { e(d, G + uk - 1, G + Gk - 0X01) }; local Ok = (2.44396575E8); while 2127562028 do
                                if Ok > 2.44396575E8 then
                                    Yk = Yk .. E(i(Nk)); break;
                                else
                                    if Ok < 9.53014514E8 then
                                        Ok = 9.53014514E8; do
                                            for jk = 1, #Nk do
                                                local Kk = 5.6195459E7; repeat
                                                    do
                                                        if Kk > 5.6195459E7 then
                                                            do cq = (pk * cq + 117) % 256; end
                                                            ; break;
                                                        else
                                                            if Kk < 1.815040262E9 then
                                                                Kk = 1.815040262E9; Nk[jk] = q(Nk[jk], cq);
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                until false
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    end
                                    ;
                                end
                                ;
                            end
                            ;
                        end
                        ; do G = G + ok; end
                        ; return Yk;
                    end; end
                ; break;
            else
                if not (sk > 3.55741219E8 and sk < 2.138675412E9) then else
                    cq = a(); if not (not Fk[9.45402357E8]) then
                        do sk = Fk[9.45402357E8]; end
                        ;
                    else
                        sk = 2.138675412E9; do (Fk)[9.45402357E8] = sk; end
                        ;
                    end
                    ;
                end
                ;
            end
            ;
        end
        ;
    end
    ; local Eq, Aq = 0.915101151100453, (nil); local Dk = (2.144600001E9); local Lq = nil; repeat
        do
            if Dk == 2.144600001E9 then
                Eq = eq; if not (not Fk[6.55536111E8]) then Dk = Fk[6.55536111E8]; else
                    Dk = 7.37334828E8; do Fk[6.55536111E8] = Dk; end
                    ;
                end
                ;
            else
                if Dk ~= 7.37334828E8 then else
                    do Aq = eq; end
                    ; do Lq = eq; end
                    ; break;
                end
                ;
            end
            ;
        end
        ;
    until false
    ; local lk = 9.0159153E8; local Pq, hq = nil, ',L>S\120'; local J = '\097\090}\117\085t\118$'; local m = { 1, 0x03,
        0X6 }; do
        repeat
            do
                if lk == 9.0159153E8 then
                    if not (not Fk[1.490164866E9]) then lk = Fk[1.490164866E9]; else
                        lk = 9.52612929E8; do (Fk)[1.490164866E9] = lk; end
                        ;
                    end
                    ;
                else
                    if lk == 9.52612929E8 then
                        if not (not Fk[1.059598841E9]) then lk = Fk[1.059598841E9]; else
                            do lk = 8.10955948E8; end
                            ; Fk[1.059598841E9] = lk;
                        end
                        ; J = Hk;
                    else
                        if lk == 8.10955948E8 then
                            if not (not Fk[1.454617348E9]) then
                                do lk = Fk[1.454617348E9]; end
                                ;
                            else
                                lk = 7.81723675E8; (Fk)[1.454617348E9] = lk;
                            end
                            ; Pq = function(pk, Yk, ok)
                                local dk, Ok, jk = pk[0x07], pk[6], pk[5]; local uk = pk[8]; local Kk, tk = pk[0X4],
                                    (pk[9]); local Gk, Nk = pk[0X2], (pk[0X3]); local Uk = y({}, { __mode = '\118' }); local vk = nil; do
                                    if not (tk >= 8) then
                                        if not (tk < 4) then
                                            do
                                                if tk >= 6 then
                                                    if tk == 0X7 then vk = function(...)
                                                            local Wk = 0; local Ik, qk = 0x1, ({}); local fk = ((o and o() or _ENV)); local gk = ({
                                                                [1] = qk, [0X2] = pk }); local _k, xk = Sq(...); _k = _k -
                                                            0x1; for ak = 0, _k do
                                                                if not (Nk > ak) then break; else
                                                                    do (qk)[ak] = xk[ak + 1]; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; local kk = ((fk == Y and ok or fk)); if not jk then xk = nil; elseif Kk then
                                                                do qk[Nk] = { n = _k >= Nk and _k - Nk + 0X1 or 0,
                                                                        i(xk, Nk + 0x1, _k + 0X1) }; end
                                                                ;
                                                            end
                                                            ; if kk ~= fk then
                                                                if not (p) then _ENV = kk; else p(vk, kk); end
                                                                ;
                                                            end
                                                            ; local mk, nk, bk, Mk = Q(function()
                                                                while true do
                                                                    local ak = (uk[Ik]); local z0 = (ak[0X7]); Ik = Ik +
                                                                    1; if not (z0 < 7) then
                                                                        if z0 < 11 then
                                                                            do
                                                                                if not (z0 >= 0X9) then
                                                                                    if z0 ~= 8 then qk[ak[0X06]] = x(
                                                                                        qk[ak[0X001]], qk[ak[3]]); else Ik =
                                                                                        ak[1]; end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if z0 == 10 then
                                                                                            local R0 = (ak[0x1]); local C0 = (ak[0X0006]); if R0 == 0x0 then else Wk =
                                                                                                C0 + R0 - 0x00001; end
                                                                                            ; local r0, B0, c0 = ak[3],
                                                                                                nil, (nil); do
                                                                                                if R0 == 0X1 then B0, c0 =
                                                                                                    Sq(qk[C0]()); else B0, c0 =
                                                                                                    Sq(qk[C0](i(qk, C0 +
                                                                                                    1, Wk))); end
                                                                                                ;
                                                                                            end
                                                                                            ; if r0 ~= 1 then
                                                                                                if r0 ~= 0x0000 then
                                                                                                    B0 = C0 + r0 - 2; Wk =
                                                                                                    B0 + 1;
                                                                                                else
                                                                                                    B0 = B0 + C0 - 0x1; Wk =
                                                                                                    B0;
                                                                                                end
                                                                                                ; local Q0 = (0); for S0 = C0, B0 do
                                                                                                    Q0 = Q0 + 0X1; qk[S0] =
                                                                                                    c0[Q0];
                                                                                                end
                                                                                                ;
                                                                                            else Wk = C0 - 0X1; end
                                                                                            ;
                                                                                        else
                                                                                            do qk[ak[0X006]] = kk[ak[5]]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (z0 >= 0XD) then
                                                                                do
                                                                                    if z0 ~= 12 then
                                                                                        local C0 = (ak[1]); local R0 = (nil); local r0 =
                                                                                        C0[1]; local B0 = #r0; if not (B0 > 0X0) then else
                                                                                            R0 = {}; do
                                                                                                for c0 = 0X00001, B0 do
                                                                                                    local Q0 = r0[c0]; if Q0[0X1] == 0 then
                                                                                                        do (R0)[c0 - 1] = {
                                                                                                                qk,
                                                                                                                Q0[0X2] }; end
                                                                                                        ;
                                                                                                    else R0[c0 - 1] = Yk
                                                                                                        [Q0[2]]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ; h(Uk, R0);
                                                                                        end
                                                                                        ; qk[ak[0X6]] = Pq(C0, R0, kk);
                                                                                    else
                                                                                        qk[0x0] = kk[ak[0X0005]]; Ik = Ik +
                                                                                        0X1; Ik = Ik + 1; ak = uk[Ik]; do Ik =
                                                                                            Ik + 1; end
                                                                                        ; do (qk)[0] = qk[0x0][ak[4]]; end
                                                                                        ; do Ik = Ik + 0X1; end
                                                                                        ; do Wk = 0; end
                                                                                        ; qk[Wk] = qk[Wk](); do Ik = Ik +
                                                                                            1; end
                                                                                        ; Ik = Ik + 1; ak = uk[Ik]; do Ik =
                                                                                            Ik + 0X1; end
                                                                                        ; if not (not qk[0]) then else Ik =
                                                                                            ak[0X1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                do
                                                                                    if z0 == 0X0E then
                                                                                        local C0 = Yk[0]; qk[0X00000] =
                                                                                        C0[1][C0[2]]; Ik = Ik + 0X1; Wk = 0X0; do (qk)[Wk] =
                                                                                            qk[Wk](); end
                                                                                        ; local R0 = 1; do Ik = Ik + 1; end
                                                                                        ; Ik = Ik + 1; Ik = Ik + 1; do C0 =
                                                                                            Yk[1]; end
                                                                                        ; qk[1] = C0[0x1][C0[0X2]]; Ik =
                                                                                        Ik + 0x1; do Ik = Ik + 1; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 1; local r0 = (qk[1]); qk[R0 + 0X1] =
                                                                                        r0; (qk)[R0] = r0[ak[0x04]]; Ik =
                                                                                        Ik + 1; do (qk)[3] = qk[0X0]; end
                                                                                        ; Ik = Ik + 0X00001; R0 = 1; (qk[R0])(
                                                                                        qk[R0 + 0x1], qk[R0 + 2]); Wk =
                                                                                        R0 - 0X0001; Ik = Ik + 0X1; Ik =
                                                                                        Ik + 0X1; ak = uk[Ik]; Ik = Ik +
                                                                                        1; do Ik = ak[1]; end
                                                                                        ;
                                                                                    else qk[ak[6]] = ak[0x05]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if not (z0 < 0X3) then
                                                                            do
                                                                                if z0 < 5 then
                                                                                    if z0 == 4 then qk[ak[6]] = qk
                                                                                        [ak[1]] * qk[ak[0X0003]]; else qk[ak[0X006]][qk[ak[1]]] =
                                                                                        qk[ak[0X00003]]; end
                                                                                    ;
                                                                                else
                                                                                    if z0 ~= 0X6 then
                                                                                        repeat
                                                                                            local r0 = {}; local C0, R0 =
                                                                                            Uk, (qk); do
                                                                                                for B0, c0 in X, C0 do
                                                                                                    do
                                                                                                        for Q0, S0 in X, c0 do
                                                                                                            if S0[1] == R0 and S0[2] >= 0 then
                                                                                                                local H0 = (S0[0X2]); if not (not r0[H0]) then else (r0)[H0] = {
                                                                                                                        R0[H0] }; end
                                                                                                                ; do S0[0X00001] =
                                                                                                                    r0[H0]; end
                                                                                                                ; do (S0)[0x00002] = 1; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        until true
                                                                                        ; return;
                                                                                    else
                                                                                        for C0 = ak[6], ak[0X1] do qk[C0] = nil; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (z0 >= 1) then else
                                                                                do
                                                                                    if z0 == 2 then
                                                                                        local C0 = ak[0X1]; local R0 = (qk[C0]); do
                                                                                            for r0 = C0 + 0X001, ak[0X3] do R0 =
                                                                                                R0 .. qk[r0]; end
                                                                                            ;
                                                                                        end
                                                                                        ; do qk[ak[6]] = R0; end
                                                                                        ;
                                                                                    else qk[ak[6]] = { i({}, 1, ak[0X1]) }; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end); do
                                                                if not (mk) then
                                                                    if S(nk) ~= "\115\116\114i\110g" then (Z)(nk, 0X0); else
                                                                        if not (P(nk, 'a\116\116e\109p\116\032t\111\032\121\105e\108\100 a\099ros\115\032met\097m\101\116\104od\047\067%\045\099\097\108\108\032boundar\121')) then else return
                                                                            s(); end
                                                                        ; if P(nk, '\094\046\045\058\037d\043: ') then Z(
                                                                            '\076u\114\097ph\032\083\099r\105p\116\058' ..
                                                                            (Ok[Ik - 0x1] or "\040\105nter\110\097\108\041") ..
                                                                            '\058 ' .. H(nk), 0X00); else Z(nk, 0); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    if nk then
                                                                        if Mk == 0X0001 then return qk[bk](); else return
                                                                            qk[bk](i(qk, bk + 0X1, Wk)); end
                                                                        ;
                                                                    elseif not (bk) then else
                                                                        do return i(qk, bk, Mk); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end; else vk = function(...)
                                                            local Ik, qk = 0X1, ({}); local fk = (o and o() or _ENV); local _k, xk =
                                                            Sq(...); local gk, Wk = { [0X2] = pk, [1] = qk }, (0); _k =
                                                            _k - 0X001; for ak = 0x000, _k do
                                                                if not (Nk > ak) then break; else qk[ak] = xk[ak + 1]; end
                                                                ;
                                                            end
                                                            ; local kk = ((fk == Y and ok or fk)); if not jk then
                                                                do xk = nil; end
                                                                ;
                                                            elseif Kk then
                                                                do (qk)[Nk] = { n = _k >= Nk and _k - Nk + 0X01 or 0X0,
                                                                        i(xk, Nk + 0X01, _k + 1) }; end
                                                                ;
                                                            end
                                                            ; if kk == fk then else
                                                                if not (p) then
                                                                    do _ENV = kk; end
                                                                    ;
                                                                else p(vk, kk); end
                                                                ;
                                                            end
                                                            ; local mk, nk, bk, Mk = Q(function()
                                                                do
                                                                    while true do
                                                                        local ak = (uk[Ik]); local z0 = (ak[7]); do Ik =
                                                                            Ik + 0X1; end
                                                                        ; if not (z0 < 0x18) then
                                                                            if not (z0 >= 0x24) then
                                                                                if z0 >= 30 then
                                                                                    if not (z0 < 33) then
                                                                                        if not (z0 < 0X000022) then
                                                                                            if z0 == 0x023 then
                                                                                                do
                                                                                                    repeat
                                                                                                        local C0, R0, r0 =
                                                                                                        Uk, qk, {}; for B0, c0 in X, C0 do
                                                                                                            for Q0, S0 in X, c0 do
                                                                                                                if not (S0[1] == R0 and S0[0x2] >= 0) then else
                                                                                                                    local H0 =
                                                                                                                    S0[2]; do
                                                                                                                        if not (not r0[H0]) then else
                                                                                                                            do r0[H0] = {
                                                                                                                                    R0[H0] }; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ;
                                                                                                                    end
                                                                                                                    ; (S0)[0X0001] =
                                                                                                                    r0[H0]; S0[2] = 0X1;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ;
                                                                                                end
                                                                                                ; do return; end
                                                                                                ;
                                                                                            else
                                                                                                qk[0X005] = ak[0X0005]; Ik =
                                                                                                Ik + 0X001; local C0 = (Yk[1]); C0[0X001][C0[2]] =
                                                                                                qk[5]; ak = uk[Ik]; Ik =
                                                                                                Ik + 0X0001; Ik = ak
                                                                                                [0X01];
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            local C0 = (8); local R0 = qk
                                                                                            [0X7]; (qk)[C0 + 0X1] = R0; (qk)[C0] =
                                                                                            R0[ak[4]]; ak = uk[Ik]; Ik =
                                                                                            Ik + 1; qk[10] = ak[5]; Ik =
                                                                                            Ik + 1; C0 = 8; do qk[C0] =
                                                                                                qk[C0](qk[C0 + 0x1],
                                                                                                    qk[C0 + 2]); end
                                                                                            ; Wk = C0; Ik = Ik + 0x1; Ik =
                                                                                            Ik + 0X00001; ak = uk[Ik]; do Ik =
                                                                                                Ik + 1; end
                                                                                            ; if qk[0X08] then
                                                                                                do Ik = ak[0X1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if not (z0 < 0X00001F) then
                                                                                            if z0 == 32 then
                                                                                                local C0, R0 = Yk[0], 0X0; qk[0] =
                                                                                                C0[0x01][C0[2]]; do Ik =
                                                                                                    Ik + 0X00001; end
                                                                                                ; Ik = Ik + 0X1; do ak =
                                                                                                    uk[Ik]; end
                                                                                                ; Ik = Ik + 1; local r0 =
                                                                                                qk[0]; qk[R0 + 1] = r0; qk[R0] =
                                                                                                r0[ak[0X4]]; do ak = uk
                                                                                                    [Ik]; end
                                                                                                ; Ik = Ik + 0x1; (qk)[0x02] =
                                                                                                ak[5]; Ik = Ik + 1; R0 = 0X0; (qk)[R0] =
                                                                                                qk[R0](qk[R0 + 0X01],
                                                                                                    qk[R0 + 0X002]); Wk =
                                                                                                R0; ak = uk[Ik]; Ik = Ik +
                                                                                                1; if not qk[0X0] then Ik =
                                                                                                    ak[0X1]; end
                                                                                                ;
                                                                                            else qk[ak[6]] = qk[ak[0x1]]
                                                                                                [qk[ak[0X3]]]; end
                                                                                            ;
                                                                                        else
                                                                                            local R0 = qk[7]; local C0 = 8; (qk)[C0 + 0x00001] =
                                                                                            R0; do qk[C0] = R0[ak[0X04]]; end
                                                                                            ; ak = uk[Ik]; Ik = Ik + 1; (qk)[10] =
                                                                                            ak[5]; Ik = Ik + 1; C0 = 0X8; (qk)[C0] =
                                                                                            qk[C0](qk[C0 + 1], qk[C0 + 2]); Wk =
                                                                                            C0; ak = uk[Ik]; do Ik = Ik +
                                                                                                1; end
                                                                                            ; do
                                                                                                if not qk[8] then Ik = ak
                                                                                                    [0x1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 < 27 then
                                                                                        if not (z0 < 25) then
                                                                                            do
                                                                                                if z0 ~= 26 then
                                                                                                    local C0, R0 = 8,
                                                                                                        (qk[7]); (qk)[C0 + 1] =
                                                                                                    R0; qk[C0] = R0
                                                                                                    [ak[0X4]]; ak = uk
                                                                                                    [Ik]; Ik = Ik + 1; (qk)[10] =
                                                                                                    ak[0x0005]; Ik = Ik +
                                                                                                    1; C0 = 0X00008; qk[C0] =
                                                                                                    qk[C0](qk[C0 + 0X1],
                                                                                                        qk[C0 + 2]); Wk =
                                                                                                    C0; do Ik = Ik + 0X01; end
                                                                                                    ; Ik = Ik + 0x0001; ak =
                                                                                                    uk[Ik]; do Ik = Ik +
                                                                                                        1; end
                                                                                                    ; if not (qk[8]) then else Ik =
                                                                                                        ak[0x1]; end
                                                                                                    ;
                                                                                                else
                                                                                                    local C0 = (8); local R0 = (qk[7]); (qk)[C0 + 1] =
                                                                                                    R0; qk[C0] = R0
                                                                                                    [ak[0X4]]; ak = uk
                                                                                                    [Ik]; Ik = Ik + 0X001; (qk)[10] =
                                                                                                    ak[5]; do Ik = Ik +
                                                                                                        0X1; end
                                                                                                    ; C0 = 0X8; qk[C0] =
                                                                                                    qk[C0](qk[C0 + 1],
                                                                                                        qk[C0 + 2]); Wk =
                                                                                                    C0; do ak = uk[Ik]; end
                                                                                                    ; do Ik = Ik + 1; end
                                                                                                    ; do
                                                                                                        if not qk[8] then Ik =
                                                                                                            ak[0X1]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else qk[ak[6]] = {
                                                                                                i({}, 0X1, ak[0x1]) }; end
                                                                                        ;
                                                                                    else
                                                                                        if not (z0 < 0X1C) then
                                                                                            if z0 ~= 29 then
                                                                                                if not (not qk[ak[0X6]]) then else Ik =
                                                                                                    ak[1]; end
                                                                                                ;
                                                                                            else
                                                                                                local C0, R0 = 0x8,
                                                                                                    qk[0x007]; qk[C0 + 1] =
                                                                                                R0; (qk)[C0] = R0
                                                                                                [ak[0X4]]; ak = uk[Ik]; Ik =
                                                                                                Ik + 1; (qk)[0Xa] = ak
                                                                                                [0X0005]; do Ik = Ik + 1; end
                                                                                                ; C0 = 8; do qk[C0] = qk
                                                                                                    [C0](qk[C0 + 0X01],
                                                                                                        qk[C0 + 0X2]); end
                                                                                                ; Wk = C0; ak = uk[Ik]; do Ik =
                                                                                                    Ik + 0x1; end
                                                                                                ; do
                                                                                                    if not (qk[8]) then else Ik =
                                                                                                        ak[1]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else (qk[ak[6]])[ak[5]] = ak
                                                                                            [0x4]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (z0 >= 0X2a) then
                                                                                    if z0 < 39 then
                                                                                        if z0 >= 0X25 then
                                                                                            if z0 ~= 0X000026 then
                                                                                                do qk[0] = ak[5]; end
                                                                                                ; do ak = uk[Ik]; end
                                                                                                ; local r0 = 0x02; do Ik =
                                                                                                    Ik + 1; end
                                                                                                ; do qk[0X1] = kk[ak[5]]; end
                                                                                                ; do Ik = Ik + 1; end
                                                                                                ; Ik = Ik + 0X01; ak = uk
                                                                                                [Ik]; do Ik = Ik + 0X1; end
                                                                                                ; (qk)[0X00002] = qk[1]
                                                                                                [ak[4]]; ak = uk[Ik]; do Ik =
                                                                                                    Ik + 1; end
                                                                                                ; qk[0X003] = qk[0X001]
                                                                                                [ak[0X004]]; Ik = Ik +
                                                                                                0X1; Ik = Ik + 1; do ak =
                                                                                                    uk[Ik]; end
                                                                                                ; Ik = Ik + 0X1; (qk)[0x4] =
                                                                                                qk[0x002][ak[4]]; Ik = Ik +
                                                                                                1; Ik = Ik + 0x1; ak = uk
                                                                                                [Ik]; do Ik = Ik + 0x1; end
                                                                                                ; (qk[4])[ak[5]] = ak
                                                                                                [0X4]; ak = uk[Ik]; Ik =
                                                                                                Ik + 1; do (qk[4])[ak[5]] =
                                                                                                    ak[4]; end
                                                                                                ; ak = uk[Ik]; Ik = Ik +
                                                                                                0X0001; (qk[4])[ak[5]] =
                                                                                                ak[0X00004]; do ak = uk
                                                                                                    [Ik]; end
                                                                                                ; Ik = Ik + 1; do qk[4][ak[5]] =
                                                                                                    ak[4]; end
                                                                                                ; ak = uk[Ik]; do Ik = Ik +
                                                                                                    1; end
                                                                                                ; qk[3][ak[0X5]] = ak[4]; do ak =
                                                                                                    uk[Ik]; end
                                                                                                ; Ik = Ik + 1; qk[3][ak[5]] =
                                                                                                ak[4]; ak = uk[Ik]; Ik =
                                                                                                Ik + 1; qk[0X3][ak[5]] =
                                                                                                ak[0x04]; ak = uk[Ik]; Ik =
                                                                                                Ik + 1; do qk[5] = kk
                                                                                                    [ak[0X5]]; end
                                                                                                ; Ik = Ik + 1; Wk = 5; (qk)[Wk] =
                                                                                                qk[Wk](); ak = uk[Ik]; Ik =
                                                                                                Ik + 1; qk[0x5] = qk
                                                                                                [0X05][ak[4]]; Ik = Ik +
                                                                                                1; Ik = Ik + 0X01; ak =
                                                                                                uk[Ik]; local C0 = (6); Ik =
                                                                                                Ik + 0X1; (qk[0X05])[ak[5]] =
                                                                                                ak[0X4]; do ak = uk[Ik]; end
                                                                                                ; Ik = Ik + 1; (qk)[5] =
                                                                                                kk[ak[0x5]]; Ik = Ik +
                                                                                                0X01; Ik = Ik + 0X1; ak =
                                                                                                uk[Ik]; Ik = Ik + 1; local R0 =
                                                                                                qk[1]; qk[C0 + 0X00001] =
                                                                                                R0; do qk[C0] = R0
                                                                                                    [ak[4]]; end
                                                                                                ; do Ik = Ik + 1; end
                                                                                                ; do C0 = 6; end
                                                                                                ; local B0 = (0X0); if r0 ~= 0x000 then Wk =
                                                                                                    C0 + r0 - 1; end
                                                                                                ; local c0, Q0 = nil, nil; do
                                                                                                    if r0 == 1 then
                                                                                                        do c0, Q0 = Sq(
                                                                                                            qk[C0]()); end
                                                                                                        ;
                                                                                                    else c0, Q0 = Sq(qk
                                                                                                        [C0](i(qk, C0 +
                                                                                                        0X1, Wk))); end
                                                                                                    ;
                                                                                                end
                                                                                                ; if B0 ~= 1 then
                                                                                                    if B0 ~= 0X0 then
                                                                                                        c0 = C0 + B0 -
                                                                                                        0X02; do Wk = c0 +
                                                                                                            1; end
                                                                                                        ;
                                                                                                    else
                                                                                                        c0 = c0 + C0 -
                                                                                                        0X1; do Wk = c0; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ; local H0 = 0; for Z0 = C0, c0 do
                                                                                                        H0 = H0 + 1; (qk)[Z0] =
                                                                                                        Q0[H0];
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    do Wk = C0 - 1; end
                                                                                                    ;
                                                                                                end
                                                                                                ; Ik = Ik + 1; Ik = Ik +
                                                                                                1; Ik = Ik + 1; C0 = 0x0005; r0 = 0; B0 = 4; if r0 ~= 0 then
                                                                                                    do Wk = C0 + r0 -
                                                                                                        0x00001; end
                                                                                                    ;
                                                                                                end
                                                                                                ; c0, Q0 = nil; if r0 ~= 1 then
                                                                                                    do c0, Q0 = Sq(qk
                                                                                                        [C0](i(qk, C0 + 1,
                                                                                                            Wk))); end
                                                                                                    ;
                                                                                                else c0, Q0 = Sq(qk[C0]()); end
                                                                                                ; if B0 == 1 then Wk = C0 -
                                                                                                    0X1; else
                                                                                                    if B0 ~= 0x0 then
                                                                                                        c0 = C0 + B0 - 2; Wk =
                                                                                                        c0 + 0X1;
                                                                                                    else
                                                                                                        c0 = c0 + C0 - 1; Wk =
                                                                                                        c0;
                                                                                                    end
                                                                                                    ; local H0 = (0); for Z0 = C0, c0 do
                                                                                                        H0 = H0 + 1; qk[Z0] =
                                                                                                        Q0[H0];
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ; Ik = Ik + 0X01; Ik = Ik +
                                                                                                0X1; ak = uk[Ik]; Ik = Ik +
                                                                                                0x1; C0 = 5; local S0 = T(function(...)
                                                                                                    (s)(); for H0, Z0 in ... do
                                                                                                        s(true, H0, Z0); end
                                                                                                    ;
                                                                                                end); (S0)(qk[C0],
                                                                                                    qk[C0 + 1], qk[C0 + 2]); Wk =
                                                                                                C0; qk[C0] = S0; Ik = ak
                                                                                                [1];
                                                                                            else
                                                                                                local C0, R0 = 8,
                                                                                                    (qk[0x7]); (qk)[C0 + 0X0001] =
                                                                                                R0; qk[C0] = R0[ak[0x4]]; ak =
                                                                                                uk[Ik]; Ik = Ik + 0x1; qk[0X0000a] =
                                                                                                ak[0X5]; Ik = Ik + 1; C0 = 0X8; do (qk)[C0] =
                                                                                                    qk[C0](qk[C0 + 1],
                                                                                                        qk[C0 + 2]); end
                                                                                                ; Wk = C0; Ik = Ik + 1; do Ik =
                                                                                                    Ik + 1; end
                                                                                                ; ak = uk[Ik]; do Ik = Ik +
                                                                                                    1; end
                                                                                                ; do
                                                                                                    if not qk[8] then Ik =
                                                                                                        ak[1]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            local C0 = (ak[0X1]); local R0 = (nil); local r0 =
                                                                                            C0[1]; local B0 = #r0; if B0 > 0 then
                                                                                                R0 = {}; for c0 = 0X1, B0 do
                                                                                                    local Q0 = r0[c0]; do
                                                                                                        if Q0[1] ~= 0 then R0[c0 - 0X1] =
                                                                                                            Yk[Q0[2]]; else R0[c0 - 0X001] = {
                                                                                                                qk,
                                                                                                                Q0[0X0002] }; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ; h(Uk, R0);
                                                                                            end
                                                                                            ; (qk)[ak[6]] = Pq(C0, R0, kk);
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if z0 >= 0X28 then
                                                                                            if z0 ~= 0X0029 then
                                                                                                (qk[0X7])[ak[0X5]] = ak
                                                                                                [4]; do ak = uk[Ik]; end
                                                                                                ; Ik = Ik + 0x1; (qk[0X0007])[ak[0X5]] =
                                                                                                ak[4]; ak = uk[Ik]; Ik =
                                                                                                Ik + 1; do qk[0X7][ak[5]] =
                                                                                                    ak[0x4]; end
                                                                                                ; ak = uk[Ik]; Ik = Ik +
                                                                                                0X00001; do Ik = ak[1]; end
                                                                                                ;
                                                                                            else
                                                                                                (qk[7])[ak[5]] = ak[4]; do ak =
                                                                                                    uk[Ik]; end
                                                                                                ; Ik = Ik + 1; qk[0X7][ak[0X5]] =
                                                                                                ak[4]; ak = uk[Ik]; Ik =
                                                                                                Ik + 1; Ik = ak[1];
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            (qk[7])[ak[0X5]] = ak[4]; ak =
                                                                                            uk[Ik]; Ik = Ik + 1; (qk[7])[ak[5]] =
                                                                                            ak[0X4]; ak = uk[Ik]; Ik = Ik +
                                                                                            0X1; Ik = ak[1];
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 >= 0X2D then
                                                                                        do
                                                                                            if not (z0 < 0x2E) then
                                                                                                if z0 == 47 then
                                                                                                    local C0, R0 = 8,
                                                                                                        (qk[0X00007]); (qk)[C0 + 1] =
                                                                                                    R0; qk[C0] = R0
                                                                                                    [ak[0X4]]; ak = uk
                                                                                                    [Ik]; do Ik = Ik +
                                                                                                        0X1; end
                                                                                                    ; qk[0xa] = ak
                                                                                                    [0X00005]; do Ik = Ik +
                                                                                                        1; end
                                                                                                    ; C0 = 8; (qk)[C0] =
                                                                                                    qk[C0](qk[C0 + 1],
                                                                                                        qk[C0 + 0x0002]); Wk =
                                                                                                    C0; Ik = Ik + 1; Ik =
                                                                                                    Ik + 0X001; ak = uk
                                                                                                    [Ik]; Ik = Ik + 1; do
                                                                                                        if not (not qk[0X00008]) then else Ik =
                                                                                                            ak[1]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    local C0 = ak[6]; local R0, r0 =
                                                                                                    qk[C0](); if R0 then
                                                                                                        for B0 = 0X1, ak[3] do (qk)[C0 + B0] =
                                                                                                            r0[B0]; end
                                                                                                        ; Ik = ak[1];
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                do (qk)[0X5] = kk
                                                                                                    [ak[0X05]]; end
                                                                                                ; local r0 = 2; ak = uk
                                                                                                [Ik]; local C0 = 0X0006; Ik =
                                                                                                Ik + 0x01; local R0 = qk
                                                                                                [3]; (qk)[C0 + 0X1] = R0; (qk)[C0] =
                                                                                                R0[ak[4]]; Ik = Ik +
                                                                                                0X00001; C0 = 6; local B0 = (0); if r0 ~= 0 then Wk =
                                                                                                    C0 + r0 - 1; end
                                                                                                ; local c0, Q0 = nil,
                                                                                                    (nil); do
                                                                                                    if r0 ~= 1 then c0, Q0 =
                                                                                                        Sq(qk[C0](i(qk,
                                                                                                            C0 + 0X00001,
                                                                                                            Wk))); else c0, Q0 =
                                                                                                        Sq(qk[C0]()); end
                                                                                                    ;
                                                                                                end
                                                                                                ; do
                                                                                                    if B0 ~= 0x1 then
                                                                                                        if B0 ~= 0X0 then
                                                                                                            c0 = C0 + B0 -
                                                                                                            0X00002; Wk =
                                                                                                            c0 + 0X1;
                                                                                                        else
                                                                                                            do c0 = c0 +
                                                                                                                C0 - 1; end
                                                                                                            ; Wk = c0;
                                                                                                        end
                                                                                                        ; local H0 = 0; do
                                                                                                            for Z0 = C0, c0 do
                                                                                                                H0 = H0 +
                                                                                                                0X0001; do qk[Z0] =
                                                                                                                    Q0[H0]; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else Wk = C0 - 1; end
                                                                                                    ;
                                                                                                end
                                                                                                ; Ik = Ik + 1; Ik = Ik +
                                                                                                1; Ik = Ik + 0X1; C0 = 0X05; r0 = 0X000; B0 = 4; do
                                                                                                    if r0 == 0X000 then else Wk =
                                                                                                        C0 + r0 - 0X001; end
                                                                                                    ;
                                                                                                end
                                                                                                ; do c0, Q0 = nil; end
                                                                                                ; if r0 ~= 1 then c0, Q0 =
                                                                                                    Sq(qk[C0](i(qk,
                                                                                                        C0 + 0X1, Wk))); else
                                                                                                    do c0, Q0 = Sq(qk
                                                                                                        [C0]()); end
                                                                                                    ;
                                                                                                end
                                                                                                ; if B0 ~= 0X1 then
                                                                                                    if B0 == 0X0 then
                                                                                                        do c0 = c0 + C0 -
                                                                                                            1; end
                                                                                                        ; Wk = c0;
                                                                                                    else
                                                                                                        c0 = C0 + B0 - 2; Wk =
                                                                                                        c0 + 0x1;
                                                                                                    end
                                                                                                    ; local H0 = (0); for Z0 = C0, c0 do
                                                                                                        H0 = H0 + 0x01; (qk)[Z0] =
                                                                                                        Q0[H0];
                                                                                                    end
                                                                                                    ;
                                                                                                else Wk = C0 - 1; end
                                                                                                ; do Ik = Ik + 0X001; end
                                                                                                ; Ik = Ik + 0X0001; ak =
                                                                                                uk[Ik]; do Ik = Ik + 0X01; end
                                                                                                ; C0 = 0X05; local S0 = T(function(...)
                                                                                                    s(); for H0, Z0 in ... do (s)(
                                                                                                        true, H0, Z0); end
                                                                                                    ;
                                                                                                end); (S0)(qk[C0],
                                                                                                    qk[C0 + 0X0001],
                                                                                                    qk[C0 + 2]); Wk = C0; qk[C0] =
                                                                                                S0; Ik = ak[0X01];
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if z0 < 0X2b then
                                                                                            local C0, R0 = 8, (qk[0X7]); qk[C0 + 1] =
                                                                                            R0; qk[C0] = R0[ak[4]]; ak =
                                                                                            uk[Ik]; Ik = Ik + 0X1; qk[0X0a] =
                                                                                            ak[5]; Ik = Ik + 1; C0 = 0x008; qk[C0] =
                                                                                            qk[C0](qk[C0 + 0X1],
                                                                                                qk[C0 + 0X2]); Wk = C0; do ak =
                                                                                                uk[Ik]; end
                                                                                            ; do Ik = Ik + 0X1; end
                                                                                            ; do
                                                                                                if not (qk[8]) then else
                                                                                                    do Ik = ak[1]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if z0 == 0X2C then else
                                                                                                local C0 = 0X8; local R0 =
                                                                                                qk[7]; qk[C0 + 0X1] = R0; qk[C0] =
                                                                                                R0[ak[4]]; do ak = uk
                                                                                                    [Ik]; end
                                                                                                ; Ik = Ik + 0X1; (qk)[10] =
                                                                                                ak[0X00005]; do Ik = Ik +
                                                                                                    1; end
                                                                                                ; do C0 = 0X8; end
                                                                                                ; do (qk)[C0] = qk[C0](
                                                                                                    qk[C0 + 1], qk[C0 + 2]); end
                                                                                                ; Wk = C0; ak = uk[Ik]; do Ik =
                                                                                                    Ik + 1; end
                                                                                                ; do
                                                                                                    if qk[0X8] then Ik =
                                                                                                        ak[0x1]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if not (z0 < 12) then
                                                                                    if not (z0 >= 0X12) then
                                                                                        do
                                                                                            if not (z0 >= 0XF) then
                                                                                                if not (z0 < 0X0d) then
                                                                                                    if z0 ~= 0Xe then
                                                                                                        do (qk)[0] = kk
                                                                                                            [ak[5]]; end
                                                                                                        ; ak = uk[Ik]; Ik =
                                                                                                        Ik + 0x0001; qk[0] =
                                                                                                        qk[0x00]
                                                                                                        [ak[0X0004]]; do Ik =
                                                                                                            Ik + 1; end
                                                                                                        ; do Wk = 0X0; end
                                                                                                        ; (qk)[Wk] = qk
                                                                                                        [Wk](); do Ik =
                                                                                                            Ik + 0X1; end
                                                                                                        ; do Ik = Ik + 1; end
                                                                                                        ; ak = uk[Ik]; do Ik =
                                                                                                            Ik + 1; end
                                                                                                        ; if not (not qk[0]) then else Ik =
                                                                                                            ak[1]; end
                                                                                                        ;
                                                                                                    else (qk)[ak[0x6]] =
                                                                                                        qk[ak[0X1]] +
                                                                                                        qk[ak[3]]; end
                                                                                                    ;
                                                                                                else
                                                                                                    local C0 = Yk[ak[1]]; (qk)[ak[6]] =
                                                                                                    C0[0X001][C0[2]];
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if not (z0 < 0X0010) then
                                                                                                    if z0 == 17 then Ik =
                                                                                                        ak[0X1]; else
                                                                                                        do
                                                                                                            repeat
                                                                                                                local R0, r0, B0 =
                                                                                                                Uk, qk,
                                                                                                                    {}; do
                                                                                                                    for c0, Q0 in X, R0 do
                                                                                                                        for S0, H0 in X, Q0 do
                                                                                                                            if not (H0[0X001] == r0 and H0[2] >= 0) then else
                                                                                                                                local Z0 = (H0[2]); do
                                                                                                                                    if not B0[Z0] then B0[Z0] = {
                                                                                                                                            r0[Z0] }; end
                                                                                                                                    ;
                                                                                                                                end
                                                                                                                                ; H0[1] =
                                                                                                                                B0[Z0]; H0[2] = 1;
                                                                                                                            end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            until true
                                                                                                            ;
                                                                                                        end
                                                                                                        ; local C0 = ak
                                                                                                        [0X6]; return
                                                                                                        false, C0,
                                                                                                            C0 + ak[1] -
                                                                                                            0X00002;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    local R0 = (qk[7]); local C0 = 0X0008; do (qk)[C0 + 1] =
                                                                                                        R0; end
                                                                                                    ; qk[C0] = R0[ak[4]]; ak =
                                                                                                    uk[Ik]; Ik = Ik + 1; qk[10] =
                                                                                                    ak[0X5]; Ik = Ik +
                                                                                                    0X00001; C0 = 0X8; qk[C0] =
                                                                                                    qk[C0](qk[C0 + 0X1],
                                                                                                        qk[C0 + 2]); Wk =
                                                                                                    C0; do Ik = Ik +
                                                                                                        0X001; end
                                                                                                    ; do Ik = Ik + 1; end
                                                                                                    ; ak = uk[Ik]; do Ik =
                                                                                                        Ik + 1; end
                                                                                                    ; if not (qk[0X8]) then else
                                                                                                        do Ik = ak[1]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if z0 >= 0X15 then
                                                                                            if not (z0 >= 22) then (qk)[ak[6]] =
                                                                                                ak[0X00005]; else
                                                                                                if z0 == 23 then
                                                                                                    local C0, R0 =
                                                                                                    0x00008, (qk[7]); qk[C0 + 1] =
                                                                                                    R0; (qk)[C0] = R0
                                                                                                    [ak[0X4]]; ak = uk
                                                                                                    [Ik]; Ik = Ik + 0X1; qk[0X0000A] =
                                                                                                    ak[0X05]; do Ik = Ik +
                                                                                                        1; end
                                                                                                    ; C0 = 0X0008; qk[C0] =
                                                                                                    qk[C0](qk[C0 + 0x01],
                                                                                                        qk[C0 + 0X2]); Wk =
                                                                                                    C0; ak = uk[Ik]; Ik =
                                                                                                    Ik + 1; if not (qk[0X0008]) then else Ik =
                                                                                                        ak[1]; end
                                                                                                    ;
                                                                                                else
                                                                                                    qk[8] = kk[ak[0X5]]; Ik =
                                                                                                    Ik + 0x001; local C0 = 0X8; Ik =
                                                                                                    Ik + 0X1; ak = uk
                                                                                                    [Ik]; Ik = Ik + 1; qk[8] =
                                                                                                    qk[8][ak[4]]; ak = uk
                                                                                                    [Ik]; Ik = Ik + 1; do qk[0X09] =
                                                                                                        ak[0x00001]; end
                                                                                                    ; Ik = Ik + 1; qk[C0] =
                                                                                                    qk[C0](qk[C0 + 1]); do Wk =
                                                                                                        C0; end
                                                                                                    ; ak = uk[Ik]; Ik =
                                                                                                    Ik + 1; qk[7][ak[5]] =
                                                                                                    qk[0X00008]; do ak =
                                                                                                        uk[Ik]; end
                                                                                                    ; Ik = Ik + 1; Ik =
                                                                                                    ak[1];
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            do
                                                                                                if z0 < 0X0013 then
                                                                                                    local C0, R0 = 8,
                                                                                                        (qk[7]); (qk)[C0 + 1] =
                                                                                                    R0; (qk)[C0] = R0
                                                                                                    [ak[4]]; ak = uk[Ik]; do Ik =
                                                                                                        Ik + 0X0001; end
                                                                                                    ; qk[10] = ak
                                                                                                    [0X00005]; Ik = Ik +
                                                                                                    1; C0 = 0X00008; qk[C0] =
                                                                                                    qk[C0](
                                                                                                    qk[C0 + 0X00001],
                                                                                                        qk[C0 + 2]); Wk =
                                                                                                    C0; Ik = Ik + 1; Ik =
                                                                                                    Ik + 1; ak = uk[Ik]; do Ik =
                                                                                                        Ik + 1; end
                                                                                                    ; if not (qk[0X8]) then else Ik =
                                                                                                        ak[1]; end
                                                                                                    ;
                                                                                                else
                                                                                                    if z0 ~= 0X000014 then
                                                                                                        local C0 = (ak[6]); local R0, r0, B0 =
                                                                                                        qk[C0](); do
                                                                                                            if R0 then
                                                                                                                (qk)[C0 + 0X1] =
                                                                                                                r0; (qk)[C0 + 2] =
                                                                                                                B0; Ik =
                                                                                                                ak[0X001];
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else
                                                                                                        do
                                                                                                            for C0 = ak[0X00006], ak[1] do (qk)[C0] = nil; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if not (z0 >= 6) then
                                                                                            if not (z0 < 3) then
                                                                                                do
                                                                                                    if not (z0 < 0x4) then
                                                                                                        do
                                                                                                            if z0 ~= 5 then
                                                                                                                if qk[ak[0X00001]] ~= qk[ak[0X00003]] then else Ik =
                                                                                                                    ak[6]; end
                                                                                                                ;
                                                                                                            else
                                                                                                                do (qk)[ak[0X6]] =
                                                                                                                    kk[ak[0X5]]; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else (qk)[ak[0X06]] =
                                                                                                        k(qk[ak[1]]); end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if not (z0 >= 1) then
                                                                                                    local R0 = qk[0x7]; local C0 = (0X8); qk[C0 + 0X001] =
                                                                                                    R0; do (qk)[C0] = R0
                                                                                                        [ak[0X4]]; end
                                                                                                    ; ak = uk[Ik]; Ik =
                                                                                                    Ik + 1; qk[10] = ak
                                                                                                    [5]; Ik = Ik + 0x1; do C0 = 8; end
                                                                                                    ; qk[C0] = qk[C0](
                                                                                                    qk[C0 + 1],
                                                                                                        qk[C0 + 0X2]); Wk =
                                                                                                    C0; do ak = uk[Ik]; end
                                                                                                    ; Ik = Ik + 1; do
                                                                                                        if not qk[0X8] then Ik =
                                                                                                            ak[0X1]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    if z0 == 0x2 then
                                                                                                        if qk[ak[6]] then
                                                                                                            do Ik = ak
                                                                                                                [1]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else
                                                                                                        local C0 = 0x008; local R0 = (qk[0x7]); qk[C0 + 1] =
                                                                                                        R0; (qk)[C0] = R0
                                                                                                        [ak[0X4]]; ak =
                                                                                                        uk[Ik]; do Ik =
                                                                                                            Ik + 0X1; end
                                                                                                        ; do (qk)[0XA] =
                                                                                                            ak[0X05]; end
                                                                                                        ; Ik = Ik + 1; C0 = 8; (qk)[C0] =
                                                                                                        qk[C0](qk[C0 + 1],
                                                                                                            qk[C0 + 2]); Wk =
                                                                                                        C0; Ik = Ik + 0X1; Ik =
                                                                                                        Ik + 1; ak = uk
                                                                                                        [Ik]; Ik = Ik + 1; if qk[0X8] then Ik =
                                                                                                            ak[1]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            do
                                                                                                if z0 < 0X009 then
                                                                                                    if not (z0 >= 0X00007) then
                                                                                                        local R0 = qk[7]; local C0 = (8); (qk)[C0 + 1] =
                                                                                                        R0; qk[C0] = R0
                                                                                                        [ak[4]]; ak = uk
                                                                                                        [Ik]; Ik = Ik + 1; do qk[10] =
                                                                                                            ak[0X5]; end
                                                                                                        ; Ik = Ik +
                                                                                                        0x0001; do C0 = 0X8; end
                                                                                                        ; (qk)[C0] = qk
                                                                                                        [C0](qk[C0 + 1],
                                                                                                            qk[C0 + 2]); Wk =
                                                                                                        C0; do Ik = Ik +
                                                                                                            0X00001; end
                                                                                                        ; Ik = Ik + 0X1; ak =
                                                                                                        uk[Ik]; Ik = Ik +
                                                                                                        1; do
                                                                                                            if not (not qk[8]) then else Ik =
                                                                                                                ak[0x01]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else
                                                                                                        if z0 ~= 8 then
                                                                                                            do qk[ak[6]] =
                                                                                                                qk[ak[0x1]] *
                                                                                                                qk[ak[0X3]]; end
                                                                                                            ;
                                                                                                        else
                                                                                                            do (gk)[ak[1]] =
                                                                                                                qk[ak[0X0006]]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    if z0 < 0Xa then
                                                                                                        local R0 = (qk[7]); local C0 = 8; qk[C0 + 0X1] =
                                                                                                        R0; qk[C0] = R0
                                                                                                        [ak[0X00004]]; do ak =
                                                                                                            uk[Ik]; end
                                                                                                        ; Ik = Ik + 0X01; qk[0xA] =
                                                                                                        ak[0X00005]; Ik =
                                                                                                        Ik + 1; C0 = 0x8; (qk)[C0] =
                                                                                                        qk[C0](
                                                                                                        qk[C0 + 0X1],
                                                                                                            qk[C0 + 0X2]); do Wk =
                                                                                                            C0; end
                                                                                                        ; do ak = uk[Ik]; end
                                                                                                        ; Ik = Ik + 1; if not (qk[8]) then else
                                                                                                            do Ik = ak
                                                                                                                [1]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else
                                                                                                        if z0 ~= 11 then
                                                                                                            local C0, R0 =
                                                                                                            8, qk[0x007]; do qk[C0 + 0X1] =
                                                                                                                R0; end
                                                                                                            ; (qk)[C0] =
                                                                                                            R0[ak[4]]; ak =
                                                                                                            uk[Ik]; Ik =
                                                                                                            Ik + 0X1; (qk)[0Xa] =
                                                                                                            ak[5]; do Ik =
                                                                                                                Ik + 0x1; end
                                                                                                            ; C0 = 0X08; (qk)[C0] =
                                                                                                            qk[C0](
                                                                                                            qk[C0 + 1],
                                                                                                                qk[C0 + 0X2]); do Wk =
                                                                                                                C0; end
                                                                                                            ; ak = uk
                                                                                                            [Ik]; do Ik =
                                                                                                                Ik + 0x1; end
                                                                                                            ; if qk[0x8] then Ik =
                                                                                                                ak[1]; end
                                                                                                            ;
                                                                                                        else
                                                                                                            local C0, R0 =
                                                                                                            8, qk[0X7]; qk[C0 + 0X1] =
                                                                                                            R0; do qk[C0] =
                                                                                                                R0[ak[4]]; end
                                                                                                            ; do ak = uk
                                                                                                                [Ik]; end
                                                                                                            ; Ik = Ik + 1; do qk[0XA] =
                                                                                                                ak[5]; end
                                                                                                            ; Ik = Ik + 1; C0 = 8; (qk)[C0] =
                                                                                                            qk[C0](
                                                                                                            qk[C0 + 0X00001],
                                                                                                                qk[C0 + 2]); do Wk =
                                                                                                                C0; end
                                                                                                            ; do Ik = Ik +
                                                                                                                0X1; end
                                                                                                            ; Ik = Ik + 1; ak =
                                                                                                            uk[Ik]; Ik =
                                                                                                            Ik + 0X1; if not (not qk[8]) then else Ik =
                                                                                                                ak[0X001]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end); if not (mk) then
                                                                if S(nk) ~= "s\116\114i\110\103" then Z(nk, 0); else
                                                                    do
                                                                        if P(nk, "at\116\101m\112\116\032\116o \121iel\100 ac\114oss me\116a\109\101thod/C%-cal\108\032\098o\117n\100\097ry") then
                                                                            do return s(); end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ; if P(nk, '^.-\058%d\043:\032') then Z(
                                                                        'L\117r\097p\104 Scr\105\112t\058' ..
                                                                        (Ok[Ik - 0X00001] or '\040\105\110t\101\114n\097\108\041') ..
                                                                        ": " .. H(nk), 0); else Z(nk, 0X0); end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                if nk then
                                                                    do
                                                                        if Mk ~= 1 then return qk[bk](i(qk, bk + 1, Wk)); else return
                                                                            qk[bk](); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                elseif bk then return i(qk, bk, Mk); end
                                                                ;
                                                            end
                                                            ;
                                                        end; end
                                                    ;
                                                else
                                                    if tk ~= 0X5 then vk = function(...)
                                                            local Ik, qk = 0X1, {}; local fk = (o and o() or _ENV); local gk, Wk =
                                                            { [0X2] = pk, [1] = qk }, (0X0); local _k, xk = Sq(...); _k =
                                                            _k - 0X00001; local kk = (fk == Y and ok or fk); for ak = 0, _k do
                                                                do
                                                                    if not (Nk > ak) then
                                                                        do break; end
                                                                        ;
                                                                    else (qk)[ak] = xk[ak + 1]; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; if not jk then
                                                                do xk = nil; end
                                                                ;
                                                            elseif Kk then (qk)[Nk] = {
                                                                    n = _k >= Nk and _k - Nk + 0x0001 or 0x000,
                                                                    i(xk, Nk + 0X1, _k + 0X1) }; end
                                                            ; if kk == fk then else
                                                                if p then (p)(vk, kk); else _ENV = kk; end
                                                                ;
                                                            end
                                                            ; local mk, nk, bk, Mk = Q(function()
                                                                do
                                                                    while true do
                                                                        local ak = (uk[Ik]); local z0 = (ak[7]); Ik = Ik +
                                                                        0X0001; if z0 < 9 then
                                                                            if z0 < 0x4 then
                                                                                if z0 >= 0X2 then
                                                                                    if z0 == 0X3 then
                                                                                        for C0 = ak[0X0006], ak[1] do qk[C0] = nil; end
                                                                                        ;
                                                                                    else (qk)[ak[6]] = f(qk[ak[1]],
                                                                                            qk[ak[0x3]]); end
                                                                                    ;
                                                                                else
                                                                                    if z0 == 1 then (qk)[ak[0X6]] = {
                                                                                            i({}, 1, ak[1]) }; else
                                                                                        local C0 = (Yk[0X0000]); qk[0] =
                                                                                        C0[1][C0[0X2]]; Ik = Ik + 0X1; Ik =
                                                                                        Ik + 0X00001; local R0 = (0); ak =
                                                                                        uk[Ik]; Ik = Ik + 0X00001; local r0 = (qk[0X00]); do (qk)[R0 + 0X1] =
                                                                                            r0; end
                                                                                        ; (qk)[R0] = r0[ak[4]]; do ak =
                                                                                            uk[Ik]; end
                                                                                        ; Ik = Ik + 1; do (qk)[2] = ak
                                                                                            [0X5]; end
                                                                                        ; Ik = Ik + 0X0001; R0 = 0X0; qk[R0] =
                                                                                        qk[R0](qk[R0 + 1], qk[R0 + 2]); Wk =
                                                                                        R0; ak = uk[Ik]; Ik = Ik +
                                                                                        0x00001; if not (not qk[0]) then else Ik =
                                                                                            ak[1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (z0 >= 6) then
                                                                                    if z0 == 0x5 then
                                                                                        (qk)[0X0] = kk[ak[5]]; Ik = Ik +
                                                                                        1; Ik = Ik + 1; do ak = uk[Ik]; end
                                                                                        ; Ik = Ik + 0X0001; qk[0] = qk
                                                                                        [0x0][ak[4]]; Ik = Ik + 0x0001; Wk = 0X00000; (qk)[Wk] =
                                                                                        qk[Wk](); Ik = Ik + 0X1; do Ik =
                                                                                            Ik + 0X00001; end
                                                                                        ; do ak = uk[Ik]; end
                                                                                        ; Ik = Ik + 0X001; if not (not qk[0]) then else Ik =
                                                                                            ak[0X001]; end
                                                                                        ;
                                                                                    else
                                                                                        local C0 = (ak[1]); local r0 = (C0[0X1]); local R0 = nil; local B0 = #
                                                                                        r0; if B0 > 0 then
                                                                                            do R0 = {}; end
                                                                                            ; for c0 = 0X1, B0 do
                                                                                                local Q0 = r0[c0]; if Q0[0X01] ~= 0 then R0[c0 - 1] =
                                                                                                    Yk[Q0[0X0002]]; else
                                                                                                    do R0[c0 - 1] = { qk,
                                                                                                            Q0[0X0002] }; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ; (h)(Uk, R0);
                                                                                        end
                                                                                        ; qk[ak[6]] = Pq(C0, R0, kk);
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 >= 0X7 then
                                                                                        if z0 ~= 0X8 then (qk)[ak[0X6]] =
                                                                                            ak[0X5]; else qk[ak[0x06]] = -
                                                                                            qk[ak[1]]; end
                                                                                        ;
                                                                                    else qk[ak[0X6]] = kk[ak[5]]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if not (z0 < 0X000D) then
                                                                                    if z0 >= 0xF then
                                                                                        do
                                                                                            if z0 >= 16 then
                                                                                                if z0 ~= 0X000011 then qk[ak[0X00006]] =
                                                                                                    g(qk[ak[1]],
                                                                                                        qk[ak[3]]); else
                                                                                                    repeat
                                                                                                        local r0 = ({}); local C0, R0 =
                                                                                                        Uk, qk; do
                                                                                                            for B0, c0 in X, C0 do
                                                                                                                for Q0, S0 in X, c0 do
                                                                                                                    if S0[1] == R0 and S0[0X002] >= 0X0 then
                                                                                                                        local H0 = (S0[2]); if not (not r0[H0]) then else
                                                                                                                            do (r0)[H0] = {
                                                                                                                                    R0[H0] }; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ; (S0)[1] =
                                                                                                                        r0[H0]; S0[0X002] = 1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ; return;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                local C0 = qk[ak[1]] /
                                                                                                qk[ak[0x3]]; do qk[ak[0X6]] =
                                                                                                    C0 - C0 % 0X0001; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if z0 ~= 0Xe then
                                                                                            local C0 = (ak[6]); local R0, r0 =
                                                                                            qk[C0](); if not (R0) then else
                                                                                                do
                                                                                                    for B0 = 1, ak[0X3] do
                                                                                                        do qk[C0 + B0] =
                                                                                                            r0[B0]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ; Ik = ak[1];
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            qk[0] = kk[ak[5]]; do Ik = Ik +
                                                                                                0X1; end
                                                                                            ; local r0 = (3); do Ik = Ik +
                                                                                                0x1; end
                                                                                            ; do ak = uk[Ik]; end
                                                                                            ; Ik = Ik + 0x1; (qk)[1] = kk
                                                                                            [ak[5]]; local C0 = (0x1); ak =
                                                                                            uk[Ik]; Ik = Ik + 0X1; local R0 = (qk[1]); (qk)[C0 + 0X1] =
                                                                                            R0; do (qk)[C0] = R0[ak[4]]; end
                                                                                            ; do ak = uk[Ik]; end
                                                                                            ; Ik = Ik + 1; qk[3] = ak
                                                                                            [0X5]; Ik = Ik + 1; do C0 = 0X1; end
                                                                                            ; local S0, B0 = Yk[0X1], 0X0; if r0 ~= 0X0 then Wk =
                                                                                                C0 + r0 - 1; end
                                                                                            ; local c0, Q0 = nil, nil; if r0 ~= 0X01 then
                                                                                                do c0, Q0 = Sq(qk[C0](i(
                                                                                                    qk, C0 + 0x01, Wk))); end
                                                                                                ;
                                                                                            else c0, Q0 = Sq(qk[C0]()); end
                                                                                            ; do
                                                                                                if B0 ~= 0X1 then
                                                                                                    do
                                                                                                        if B0 == 0X0 then
                                                                                                            c0 = c0 + C0 -
                                                                                                            0X1; Wk = c0;
                                                                                                        else
                                                                                                            do c0 = C0 +
                                                                                                                B0 -
                                                                                                                0X002; end
                                                                                                            ; do Wk = c0 +
                                                                                                                0X1; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ; local H0 = 0X0; for Z0 = C0, c0 do
                                                                                                        H0 = H0 + 0X1; (qk)[Z0] =
                                                                                                        Q0[H0];
                                                                                                    end
                                                                                                    ;
                                                                                                else Wk = C0 - 1; end
                                                                                                ;
                                                                                            end
                                                                                            ; Ik = Ik + 1; Ik = Ik +
                                                                                            0X0001; Ik = Ik + 1; C0 = 0; (qk)[C0] =
                                                                                            qk[C0](i(qk, C0 + 1, Wk)); Wk =
                                                                                            C0; do Ik = Ik + 1; end
                                                                                            ; do Ik = Ik + 0X001; end
                                                                                            ; do Ik = Ik + 1; end
                                                                                            ; Wk = 0X0; qk[Wk](); Wk = Wk -
                                                                                            1; Ik = Ik + 1; Ik = Ik + 1; ak =
                                                                                            uk[Ik]; Ik = Ik + 1; qk[0] =
                                                                                            ak[5]; Ik = Ik + 1; (S0[1])[S0[0X0002]] =
                                                                                            qk[0X0]; ak = uk[Ik]; Ik = Ik +
                                                                                            1; Ik = ak[0X001];
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 >= 0Xb then
                                                                                        if z0 ~= 12 then
                                                                                            if not (qk[ak[0X6]]) then else Ik =
                                                                                                ak[0X1]; end
                                                                                            ;
                                                                                        else Ik = ak[0X001]; end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if z0 ~= 0xA then else
                                                                                                local C0 = (Yk[ak[0X00001]]); (qk)[ak[0x6]] =
                                                                                                C0[1][C0[2]];
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end); if mk then
                                                                if nk then
                                                                    if Mk ~= 0x1 then
                                                                        do return qk[bk](i(qk, bk + 0X1, Wk)); end
                                                                        ;
                                                                    else
                                                                        do return qk[bk](); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                elseif not (bk) then else return i(qk, bk, Mk); end
                                                                ;
                                                            else
                                                                if S(nk) == "st\114in\103" then
                                                                    if not (P(nk, 'at\116\101mp\116\032to\032y\105\101\108d\032a\099\114oss\032\109e\116\097metho\100/C%\045c\097\108l\032bo\117\110d\097\114\121')) then else
                                                                        do return s(); end
                                                                        ;
                                                                    end
                                                                    ; do
                                                                        if P(nk, "^.\045:\037d+\058 ") then (Z)(
                                                                            "\076\117\114a\112\104\032\083\099rip\116\058" ..
                                                                            (Ok[Ik - 0X1] or "\040\105\110te\114\110\097\108\041") ..
                                                                            ':\032' .. H(nk), 0X0); else Z(nk, 0); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else (Z)(nk, 0X0); end
                                                                ;
                                                            end
                                                            ;
                                                        end; else vk = function(...)
                                                            local Ik, qk, Wk = 0X1, {}, 0X0; local fk = ((o and o() or _ENV)); local gk = {
                                                                [1] = qk, [0X2] = pk }; local _k, xk = Sq(...); _k = _k -
                                                            0X0001; for ak = 0, _k do
                                                                if Nk > ak then (qk)[ak] = xk[ak + 0X1]; else
                                                                    do break; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; local kk = (fk == Y and ok or fk); do
                                                                if not jk then
                                                                    do xk = nil; end
                                                                    ;
                                                                elseif Kk then qk[Nk] = { n = _k >= Nk and _k - Nk + 1 or
                                                                    0, i(xk, Nk + 0x00001, _k + 0X0001) }; end
                                                                ;
                                                            end
                                                            ; if kk ~= fk then
                                                                if p then (p)(vk, kk); else _ENV = kk; end
                                                                ;
                                                            end
                                                            ; local mk, nk, bk, Mk = Q(function()
                                                                while true do
                                                                    local ak = uk[Ik]; local z0 = (ak[0X7]); Ik = Ik +
                                                                    0X001; if not (z0 < 10) then
                                                                        if not (z0 >= 15) then
                                                                            if z0 >= 0X0000C then
                                                                                if not (z0 < 13) then
                                                                                    if z0 ~= 0XE then (qk)[ak[0X6]] = f(
                                                                                        qk[ak[1]], qk[ak[3]]); else (qk)[ak[0X6]] =
                                                                                        kk[ak[5]]; end
                                                                                    ;
                                                                                else qk[ak[6]] = qk[ak[1]] ~=
                                                                                    qk[ak[0X03]]; end
                                                                                ;
                                                                            else
                                                                                if z0 == 0Xb then qk[ak[6]] = q(
                                                                                    qk[ak[0X1]], qk[ak[3]]); else
                                                                                    do Ik = ak[1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if z0 >= 0X000011 then
                                                                                if z0 < 0X12 then (qk)[ak[0x0006]] = {
                                                                                        i({}, 1, ak[1]) }; else
                                                                                    if z0 ~= 0X000013 then
                                                                                        do
                                                                                            for C0 = ak[0X6], ak[0X01] do (qk)[C0] = nil; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        local C0 = (ak[6]); local R0 = (ak[1]); Wk =
                                                                                        C0 + R0 - 0X1; do
                                                                                            repeat
                                                                                                local c0 = {}; local r0, B0 =
                                                                                                Uk, qk; do
                                                                                                    for Q0, S0 in X, r0 do
                                                                                                        for H0, Z0 in X, S0 do
                                                                                                            if not (Z0[1] == B0 and Z0[2] >= 0) then else
                                                                                                                local F0 =
                                                                                                                Z0[2]; if not c0[F0] then
                                                                                                                    do (c0)[F0] = {
                                                                                                                            B0[F0] }; end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ; (Z0)[1] =
                                                                                                                c0[F0]; Z0[0X0002] = 1;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            until true
                                                                                            ;
                                                                                        end
                                                                                        ; return true, C0, R0;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if z0 ~= 0X0010 then
                                                                                    do qk[ak[6]] = qk[ak[0X1]]
                                                                                        [qk[ak[0X00003]]]; end
                                                                                    ;
                                                                                else
                                                                                    qk[0x0] = kk[ak[5]]; do Ik = Ik + 1; end
                                                                                    ; Ik = Ik + 1; do ak = uk[Ik]; end
                                                                                    ; Ik = Ik + 0x1; (qk)[0] = qk[0]
                                                                                    [ak[0X00004]]; ak = uk[Ik]; do Ik =
                                                                                        Ik + 1; end
                                                                                    ; (qk)[0] = qk[0X0][ak[0X4]]; do Ik =
                                                                                        Ik + 0X1; end
                                                                                    ; Ik = Ik + 0X1; ak = uk[Ik]; local C0 = (0X000); Ik =
                                                                                    Ik + 1; qk[0] = qk[0][ak[0x04]]; ak =
                                                                                    uk[Ik]; Ik = Ik + 0x00001; local R0 =
                                                                                    qk[0]; do (qk)[C0 + 0x1] = R0; end
                                                                                    ; do (qk)[C0] = R0[ak[0X04]]; end
                                                                                    ; ak = uk[Ik]; do Ik = Ik + 0X01; end
                                                                                    ; qk[0x2] = ak[5]; local r0 = Yk
                                                                                    [0X0]; do Ik = Ik + 1; end
                                                                                    ; C0 = 0X0; do (qk)[C0] = qk[C0](
                                                                                        qk[C0 + 1], qk[C0 + 0X2]); end
                                                                                    ; Wk = C0; Ik = Ik + 1; do qk[1] = r0
                                                                                        [0x1][r0[0x00002]]; end
                                                                                    ; Ik = Ik + 0X00001; Ik = Ik + 0X1; ak =
                                                                                    uk[Ik]; Ik = Ik + 1; do C0 = 0X001; end
                                                                                    ; R0 = qk[0X00001]; qk[C0 + 0x00001] =
                                                                                    R0; qk[C0] = R0[ak[0X4]]; ak = uk
                                                                                    [Ik]; do Ik = Ik + 0x1; end
                                                                                    ; do (qk)[0X3] = ak[5]; end
                                                                                    ; Ik = Ik + 1; do C0 = 0X001; end
                                                                                    ; (qk)[C0] = qk[C0](qk[C0 + 1],
                                                                                        qk[C0 + 2]); Wk = C0; Ik = Ik + 1; Ik =
                                                                                    Ik + 0X1; ak = uk[Ik]; Ik = Ik + 1; if not (not qk[0X00001]) then else Ik =
                                                                                        ak[1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if z0 < 5 then
                                                                            do
                                                                                if not (z0 < 2) then
                                                                                    if not (z0 < 0X3) then
                                                                                        do
                                                                                            if z0 == 0X04 then
                                                                                                local C0 = Yk[1]; qk[0X0001] =
                                                                                                C0[1][C0[0X2]]; Ik = Ik +
                                                                                                1; Ik = Ik + 0X1; ak = uk
                                                                                                [Ik]; Ik = Ik + 1; do qk[0x0][ak[5]] =
                                                                                                    qk[1]; end
                                                                                                ; ak = uk[Ik]; Ik = Ik +
                                                                                                0X1; do Ik = ak[1]; end
                                                                                                ;
                                                                                            else
                                                                                                repeat
                                                                                                    local C0, R0 = Uk,
                                                                                                        (qk); local r0 = ({}); for B0, c0 in X, C0 do
                                                                                                        for Q0, S0 in X, c0 do
                                                                                                            if S0[0X1] == R0 and S0[2] >= 0X0000 then
                                                                                                                local H0 =
                                                                                                                S0[0x00002]; if not (not r0[H0]) then else (r0)[H0] = {
                                                                                                                        R0[H0] }; end
                                                                                                                ; (S0)[1] =
                                                                                                                r0[H0]; (S0)[2] = 1;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                until true
                                                                                                ; return;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        local C0 = (Yk[0X00]); do (qk)[0x01] =
                                                                                            C0[1][C0[0X02]]; end
                                                                                        ; local R0 = 0X1; ak = uk[Ik]; Ik =
                                                                                        Ik + 1; local r0 = (qk[0X001]); do (qk)[R0 + 0X1] =
                                                                                            r0; end
                                                                                        ; (qk)[R0] = r0[ak[4]]; ak = uk
                                                                                        [Ik]; Ik = Ik + 1; qk[0x03] = ak
                                                                                        [5]; Ik = Ik + 0X0001; R0 = 0X00001; do qk[R0] =
                                                                                            qk[R0](qk[R0 + 1], qk
                                                                                            [R0 + 0x2]); end
                                                                                        ; Wk = R0; do Ik = Ik + 0x1; end
                                                                                        ; Ik = Ik + 0X01; ak = uk[Ik]; Ik =
                                                                                        Ik + 1; do (qk[0])[ak[5]] = qk
                                                                                            [0X01]; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 1; do Ik =
                                                                                            ak[0x1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 ~= 0X1 then
                                                                                        do (qk)[0X0] = kk[ak[5]]; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 1; qk[0] =
                                                                                        qk[0][ak[0X4]]; Ik = Ik + 0x1; Wk = 0X0; qk[Wk] =
                                                                                        qk[Wk](); ak = uk[Ik]; Ik = Ik +
                                                                                        0X1; if not (not qk[0x0]) then else Ik =
                                                                                            ak[1]; end
                                                                                        ;
                                                                                    else
                                                                                        if qk[ak[1]] <= qk[ak[0X0003]] then Ik =
                                                                                            ak[0X6]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if z0 < 0X7 then
                                                                                if z0 ~= 6 then
                                                                                    local C0, R0 = ak[6], ak[0x0001]; if R0 == 0X0 then else Wk =
                                                                                        C0 + R0 - 1; end
                                                                                    ; local B0, c0, r0 = nil, nil,
                                                                                        (ak[0X0003]); if R0 == 0X1 then B0, c0 =
                                                                                        Sq(qk[C0]()); else B0, c0 = Sq(
                                                                                        qk[C0](i(qk, C0 + 0X1, Wk))); end
                                                                                    ; if r0 ~= 0x1 then
                                                                                        if r0 ~= 0X0 then
                                                                                            B0 = C0 + r0 - 0X002; Wk = B0 +
                                                                                            0X1;
                                                                                        else
                                                                                            do B0 = B0 + C0 - 0X1; end
                                                                                            ; Wk = B0;
                                                                                        end
                                                                                        ; local Q0 = (0X000); for S0 = C0, B0 do
                                                                                            Q0 = Q0 + 0x1; qk[S0] = c0
                                                                                            [Q0];
                                                                                        end
                                                                                        ;
                                                                                    else Wk = C0 - 0X1; end
                                                                                    ;
                                                                                else end
                                                                                ;
                                                                            else
                                                                                do
                                                                                    if z0 < 0X00008 then (qk)[ak[0x6]] = true; else
                                                                                        do
                                                                                            if z0 == 0x9 then qk[ak[0x6]] =
                                                                                                ak[5]; else
                                                                                                local C0 = ak[1]; local r0, R0 =
                                                                                                C0[0X001], (nil); local B0 = (#r0); if not (B0 > 0) then else
                                                                                                    R0 = {}; for c0 = 1, B0 do
                                                                                                        local Q0 = r0
                                                                                                        [c0]; if Q0[0X0001] ~= 0X0 then R0[c0 - 0X1] =
                                                                                                            Yk[Q0[0X02]]; else R0[c0 - 1] = {
                                                                                                                qk,
                                                                                                                Q0[0X2] }; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ; h(Uk, R0);
                                                                                                end
                                                                                                ; qk[ak[6]] = Pq(C0, R0,
                                                                                                    kk);
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end); if mk then
                                                                if nk then
                                                                    if Mk ~= 1 then return qk[bk](i(qk, bk + 1, Wk)); else return
                                                                        qk[bk](); end
                                                                    ;
                                                                elseif bk then return i(qk, bk, Mk); end
                                                                ;
                                                            else
                                                                if S(nk) ~= "\115tri\110\103" then (Z)(nk, 0X0000); else
                                                                    if P(nk, "\097ttemp\116 t\111\032y\105\101\108d\032ac\114\111\115\115 me\116\097\109e\116h\111\100\047C\037\045\099all \098\111u\110\100ar\121") then return
                                                                        s(); end
                                                                    ; if not (P(nk, '^\046-\058%d\043\058 ')) then (Z)(
                                                                        nk, 0); else (Z)(
                                                                        "\076u\114a\112\104\032\083\099rip\116\058" ..
                                                                        (Ok[Ik - 1] or '(\105n\116ernal\041') ..
                                                                        ": " .. H(nk), 0); end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end; end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        else
                                            if tk >= 2 then
                                                do
                                                    if tk == 0X3 then vk = function(...)
                                                            local qk = ({}); local Ik = 1; local fk = ((o and o() or _ENV)); local gk = {
                                                                [1] = qk, [0X2] = pk }; local _k, xk = Sq(...); _k = _k -
                                                            0X01; local kk = (fk == Y and ok or fk); for ak = 0, _k do
                                                                do
                                                                    if Nk > ak then (qk)[ak] = xk[ak + 0X1]; else break; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; local Wk = 0; if not jk then xk = nil; elseif Kk then
                                                                do qk[Nk] = { n = _k >= Nk and _k - Nk + 0x01 or 0,
                                                                        i(xk, Nk + 0X1, _k + 1) }; end
                                                                ;
                                                            end
                                                            ; if kk == fk then else
                                                                if p then p(vk, kk); else _ENV = kk; end
                                                                ;
                                                            end
                                                            ; local mk, nk, bk, Mk = Q(function()
                                                                while true do
                                                                    local ak = (uk[Ik]); local z0 = (ak[7]); Ik = Ik + 1; if z0 < 0X0a then
                                                                        if z0 < 5 then
                                                                            if z0 < 2 then
                                                                                do
                                                                                    if z0 ~= 1 then
                                                                                        local C0 = Yk[0X0]; qk[0X000] =
                                                                                        C0[1][C0[0X2]]; do Ik = Ik +
                                                                                            0X001; end
                                                                                        ; Ik = Ik + 1; do ak = uk[Ik]; end
                                                                                        ; local r0 = qk[0X00]; Ik = Ik +
                                                                                        1; local R0 = (0); (qk)[R0 + 1] =
                                                                                        r0; do qk[R0] = r0[ak[4]]; end
                                                                                        ; ak = uk[Ik]; do Ik = Ik + 0x1; end
                                                                                        ; (qk)[0x02] = ak[5]; Ik = Ik + 1; R0 = 0X0000; qk[R0] =
                                                                                        qk[R0](qk[R0 + 0X1], qk[R0 + 2]); Wk =
                                                                                        R0; Ik = Ik + 1; do Ik = Ik + 1; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 0X00001; Ik =
                                                                                        ak[1];
                                                                                    else
                                                                                        local C0 = (ak[0X1]); local R0 = nil; local r0 = (C0[1]); local B0 = (#r0); do
                                                                                            if B0 > 0 then
                                                                                                R0 = {}; for c0 = 1, B0 do
                                                                                                    local Q0 = r0[c0]; if Q0[1] ~= 0 then
                                                                                                        do (R0)[c0 - 1] =
                                                                                                            Yk[Q0[0X2]]; end
                                                                                                        ;
                                                                                                    else R0[c0 - 0X1] = {
                                                                                                            qk, Q0[2] }; end
                                                                                                    ;
                                                                                                end
                                                                                                ; h(Uk, R0);
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ; qk[ak[0X6]] = Pq(C0, R0, kk);
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if z0 >= 3 then
                                                                                    if z0 == 0x4 then
                                                                                        do
                                                                                            repeat
                                                                                                local R0, r0, B0 = Uk, qk,
                                                                                                    ({}); for c0, Q0 in X, R0 do
                                                                                                    for S0, H0 in X, Q0 do
                                                                                                        if not (H0[1] == r0 and H0[2] >= 0) then else
                                                                                                            local Z0 = (H0[0x2]); do
                                                                                                                if not (not B0[Z0]) then else (B0)[Z0] = {
                                                                                                                        r0[Z0] }; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ; (H0)[0X1] =
                                                                                                            B0[Z0]; H0[2] = 1;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            until true
                                                                                            ;
                                                                                        end
                                                                                        ; local C0 = (ak[0X6]); do return
                                                                                            false, C0, C0; end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if qk[ak[0X0001]] ~= qk[ak[0X3]] then else Ik =
                                                                                                ak[0x6]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if qk[ak[0X1]] == qk[ak[0x3]] then else Ik =
                                                                                        ak[6]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (z0 >= 0x07) then
                                                                                if z0 == 6 then
                                                                                    for C0 = ak[0X6], ak[1] do qk[C0] = nil; end
                                                                                    ;
                                                                                else Ik = ak[0X1]; end
                                                                                ;
                                                                            else
                                                                                if z0 >= 8 then
                                                                                    if z0 ~= 0X0009 then
                                                                                        do (qk[ak[0x6]])[qk[ak[0X1]]] =
                                                                                            qk[ak[3]]; end
                                                                                        ;
                                                                                    else qk[ak[0x00006]] = kk
                                                                                        [ak[0x0005]]; end
                                                                                    ;
                                                                                else
                                                                                    local C0 = (Yk[0]); qk[0] = C0[0X1]
                                                                                    [C0[2]]; ak = uk[Ik]; local R0 = 0X0; do Ik =
                                                                                        Ik + 1; end
                                                                                    ; local r0 = qk[0X00]; (qk)[R0 + 1] =
                                                                                    r0; (qk)[R0] = r0[ak[0X4]]; do ak =
                                                                                        uk[Ik]; end
                                                                                    ; Ik = Ik + 0x0001; (qk)[2] = ak[5]; do Ik =
                                                                                        Ik + 0x1; end
                                                                                    ; do R0 = 0X0000; end
                                                                                    ; do (qk)[R0] = qk[R0](qk[R0 + 1],
                                                                                            qk[R0 + 0X2]); end
                                                                                    ; do Wk = R0; end
                                                                                    ; ak = uk[Ik]; do Ik = Ik + 1; end
                                                                                    ; if not (qk[0X0]) then else Ik = ak
                                                                                        [0X0001]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if not (z0 < 0Xf) then
                                                                            if not (z0 >= 0X11) then
                                                                                do
                                                                                    if z0 == 0x0010 then qk[ak[0X6]] = qk
                                                                                        [ak[0X1]] / qk[ak[0X3]]; else qk[ak[6]] = {
                                                                                            i({}, 1, ak[0x01]) }; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                do
                                                                                    if z0 < 0x12 then
                                                                                        qk[0X1] = kk[ak[0X0005]]; Ik = Ik +
                                                                                        1; do Ik = Ik + 1; end
                                                                                        ; local C0 = (1); ak = uk[Ik]; do Ik =
                                                                                            Ik + 0X1; end
                                                                                        ; (qk)[0X2] = ak[1]; Ik = Ik + 1; (qk[C0])(
                                                                                        qk[C0 + 1]); Wk = C0 - 0X0001; ak =
                                                                                        uk[Ik]; Ik = Ik + 0x0001; do Ik =
                                                                                            ak[1]; end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if z0 == 19 then else
                                                                                                do qk[ak[6]] = qk
                                                                                                    [ak[0X1]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if not (z0 >= 12) then
                                                                                    if z0 == 0Xb then
                                                                                        do
                                                                                            repeat
                                                                                                local C0, R0 = Uk, qk; local r0 = {}; for B0, c0 in X, C0 do
                                                                                                    for Q0, S0 in X, c0 do
                                                                                                        if S0[1] == R0 and S0[0X2] >= 0 then
                                                                                                            local H0 = (S0[2]); if not (not r0[H0]) then else (r0)[H0] = {
                                                                                                                    R0[H0] }; end
                                                                                                            ; (S0)[1] =
                                                                                                            r0[H0]; S0[0X2] = 0X0001;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            until true
                                                                                            ;
                                                                                        end
                                                                                        ; return;
                                                                                    else
                                                                                        local C0 = ak[0X1]; local R0 = (qk[C0]); for r0 = C0 + 0X1, ak[3] do
                                                                                            do R0 = R0 .. qk[r0]; end
                                                                                            ;
                                                                                        end
                                                                                        ; do (qk)[ak[6]] = R0; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if not (z0 < 0Xd) then
                                                                                            if z0 ~= 14 then qk[ak[0x6]] =
                                                                                                qk[ak[1]] == qk[ak[3]]; else
                                                                                                if not qk[ak[6]] then Ik =
                                                                                                    ak[1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else (qk)[ak[0X6]] = ak[5]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end); if mk then
                                                                if nk then
                                                                    if Mk == 0X1 then return qk[bk](); else return qk
                                                                        [bk](i(qk, bk + 0X001, Wk)); end
                                                                    ;
                                                                elseif not (bk) then else
                                                                    do return i(qk, bk, Mk); end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                if S(nk) ~= 'stri\110\103' then (Z)(nk, 0x0); else
                                                                    if not (P(nk, 'attem\112t \116\111 \121i\101\108\100 \097cross m\101ta\109e\116\104od\047C\037\045call \098o\117\110dar\121')) then else return
                                                                        s(); end
                                                                    ; if not (P(nk, "^\046\045\058\037d+\058 ")) then Z(
                                                                        nk, 0); else (Z)(
                                                                        'Lu\114\097\112h\032\083\099\114ip\116\058' ..
                                                                        (Ok[Ik - 1] or "(\105\110tern\097l\041") ..
                                                                        "\058 " .. H(nk), 0X0); end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end; else vk = function(...)
                                                            local Ik, qk = 1, {}; local fk = ((o and o() or _ENV)); local gk = ({
                                                                [1] = qk, [0X2] = pk }); local _k, xk = Sq(...); local Wk = 0; do _k =
                                                                _k - 0X1; end
                                                            ; local kk = ((fk == Y and ok or fk)); do
                                                                for ak = 0X0, _k do
                                                                    if not (Nk > ak) then
                                                                        do break; end
                                                                        ;
                                                                    else qk[ak] = xk[ak + 1]; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; do
                                                                if not jk then xk = nil; elseif not (Kk) then else (qk)[Nk] = {
                                                                        n = _k >= Nk and _k - Nk + 0X001 or 0X0,
                                                                        i(xk, Nk + 0X01, _k + 1) }; end
                                                                ;
                                                            end
                                                            ; if kk == fk then else
                                                                if p then (p)(vk, kk); else
                                                                    do _ENV = kk; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; local mk, nk, bk, Mk = Q(function()
                                                                while true do
                                                                    local ak = uk[Ik]; local z0 = ak[0X00007]; Ik = Ik +
                                                                    1; if not (z0 < 0X09) then
                                                                        if not (z0 >= 14) then
                                                                            do
                                                                                if z0 >= 0x0000B then
                                                                                    do
                                                                                        if not (z0 < 0Xc) then
                                                                                            if z0 ~= 13 then (qk)[ak[6]] = #
                                                                                                qk[ak[0x001]]; else
                                                                                                local C0 = ak[0x00001]; local r0 = (C0[1]); local B0 = (#r0); local R0 = (nil); do
                                                                                                    if B0 > 0 then
                                                                                                        R0 = {}; for c0 = 0X0001, B0 do
                                                                                                            local Q0 = (r0[c0]); if Q0[1] == 0X0 then R0[c0 - 0X0001] = {
                                                                                                                    qk,
                                                                                                                    Q0[0X2] }; else R0[c0 - 0X00001] =
                                                                                                                Yk[Q0[2]]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ; h(Uk, R0);
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ; qk[ak[6]] = Pq(C0, R0,
                                                                                                    kk);
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            local C0 = (Yk[0x0]); (qk)[0X0] =
                                                                                            C0[1][C0[2]]; ak = uk[Ik]; local R0 = 0x0; do Ik =
                                                                                                Ik + 1; end
                                                                                            ; local r0 = (qk[0]); (qk)[R0 + 0X1] =
                                                                                            r0; qk[R0] = r0[ak[4]]; ak =
                                                                                            uk[Ik]; Ik = Ik + 0X1; qk[0X00002] =
                                                                                            ak[0x5]; Ik = Ik + 0X1; R0 = 0; qk[R0] =
                                                                                            qk[R0](qk[R0 + 1], qk
                                                                                            [R0 + 0x2]); Wk = R0; ak = uk
                                                                                            [Ik]; do Ik = Ik + 0X1; end
                                                                                            ; do
                                                                                                if not (not qk[0]) then else Ik =
                                                                                                    ak[0X1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 == 10 then
                                                                                        local C0 = Yk[ak[0x1]]; do qk[ak[6]] =
                                                                                            C0[0X1][C0[2]]; end
                                                                                        ;
                                                                                    else (qk)[ak[6]] = gk[ak[1]]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (z0 >= 0X10) then
                                                                                if z0 ~= 0XF then else
                                                                                    do (qk)[ak[6]] = kk[ak[0X5]]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                do
                                                                                    if z0 < 0X11 then qk[ak[6]] = k(qk
                                                                                        [ak[0X1]]); else
                                                                                        do
                                                                                            if z0 ~= 0X012 then
                                                                                                for C0 = ak[6], ak[0X1] do
                                                                                                    do (qk)[C0] = nil; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else Ik = ak[0X0001]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if not (z0 < 4) then
                                                                            if z0 >= 6 then
                                                                                if not (z0 < 7) then
                                                                                    do
                                                                                        if z0 ~= 0X8 then
                                                                                            if not (qk[ak[0X6]]) then else Ik =
                                                                                                ak[1]; end
                                                                                            ;
                                                                                        else
                                                                                            if not (qk[ak[0X01]] <= qk[ak[0x3]]) then Ik =
                                                                                                ak[6]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else qk[ak[0X6]] = qk[ak[0x1]] +
                                                                                    qk[ak[3]]; end
                                                                                ;
                                                                            else
                                                                                if z0 ~= 5 then
                                                                                    repeat
                                                                                        local C0, R0 = Uk, (qk); local r0 = ({}); for B0, c0 in X, C0 do
                                                                                            for Q0, S0 in X, c0 do
                                                                                                if not (S0[1] == R0 and S0[2] >= 0X00000) then else
                                                                                                    local H0 = (S0[2]); if not (not r0[H0]) then else (r0)[H0] = {
                                                                                                            R0[H0] }; end
                                                                                                    ; do S0[1] = r0[H0]; end
                                                                                                    ; (S0)[0X02] = 0X00001;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    until true
                                                                                    ; do return; end
                                                                                    ;
                                                                                else qk[ak[6]] = { i({}, 0X00001,
                                                                                        ak[0X01]) }; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if not (z0 < 0X0002) then
                                                                                    do
                                                                                        if z0 ~= 0X0003 then
                                                                                            repeat
                                                                                                local C0, R0, r0 = Uk, qk,
                                                                                                    (ak[0X6]); local B0 = ({}); for c0, Q0 in X, C0 do
                                                                                                    for S0, H0 in X, Q0 do
                                                                                                        if not (H0[0X0001] == R0 and H0[0X2] >= r0) then else
                                                                                                            local Z0 = (H0[2]); if not B0[Z0] then (B0)[Z0] = {
                                                                                                                    R0[Z0] }; end
                                                                                                            ; H0[1] = B0
                                                                                                            [Z0]; (H0)[2] = 1;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            until true
                                                                                            ;
                                                                                        else
                                                                                            if qk[ak[0X1]] < qk[ak[0X00003]] then Ik =
                                                                                                ak[0X06]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 == 1 then
                                                                                        do (qk)[0X000] = kk[ak[5]]; end
                                                                                        ; local C0 = (0); ak = uk[Ik]; Ik =
                                                                                        Ik + 1; local R0 = qk[0X00000]; (qk)[C0 + 1] =
                                                                                        R0; (qk)[C0] = R0[ak[4]]; ak = uk
                                                                                        [Ik]; Ik = Ik + 1; qk[2] = ak
                                                                                        [0X0005]; Ik = Ik + 0X1; do C0 = 0; end
                                                                                        ; (qk)[C0] = qk[C0](qk[C0 + 1],
                                                                                            qk[C0 + 2]); Wk = C0; do ak =
                                                                                            uk[Ik]; end
                                                                                        ; local r0 = ak[0x0001]; local c0 = (r0[1]); do Ik =
                                                                                            Ik + 0x1; end
                                                                                        ; local B0 = (nil); local Q0 = (#c0); if Q0 > 0X0 then
                                                                                            do B0 = {}; end
                                                                                            ; for H0 = 0X1, Q0 do
                                                                                                local Z0 = (c0[H0]); if Z0[0x1] == 0x0 then B0[H0 - 0X001] = {
                                                                                                        qk, Z0[2] }; else B0[H0 - 1] =
                                                                                                    Yk[Z0[2]]; end
                                                                                                ;
                                                                                            end
                                                                                            ; h(Uk, B0);
                                                                                        end
                                                                                        ; qk[1] = Pq(r0, B0, kk); ak = uk
                                                                                        [Ik]; Ik = Ik + 1; r0 = ak[1]; B0 = nil; c0 =
                                                                                        r0[1]; Q0 = #c0; do
                                                                                            if Q0 > 0x00000 then
                                                                                                B0 = {}; for H0 = 1, Q0 do
                                                                                                    local Z0 = c0[H0]; if Z0[1] == 0 then
                                                                                                        do B0[H0 - 1] = {
                                                                                                                qk, Z0
                                                                                                                [2] }; end
                                                                                                        ;
                                                                                                    else
                                                                                                        do (B0)[H0 - 1] =
                                                                                                            Yk[Z0[2]]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ; (h)(Uk, B0);
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ; (qk)[2] = Pq(r0, B0, kk); do ak =
                                                                                            uk[Ik]; end
                                                                                        ; do Ik = Ik + 0X01; end
                                                                                        ; r0 = ak[1]; B0 = nil; c0 = r0
                                                                                        [1]; do Q0 = #c0; end
                                                                                        ; if not (Q0 > 0) then else
                                                                                            B0 = {}; for H0 = 1, Q0 do
                                                                                                local Z0 = c0[H0]; if Z0[0x1] ~= 0X00 then
                                                                                                    do B0[H0 - 0X1] = Yk
                                                                                                        [Z0[0X0002]]; end
                                                                                                    ;
                                                                                                else (B0)[H0 - 1] = { qk,
                                                                                                        Z0[2] }; end
                                                                                                ;
                                                                                            end
                                                                                            ; (h)(Uk, B0);
                                                                                        end
                                                                                        ; (qk)[0X003] = Pq(r0, B0, kk); Ik =
                                                                                        Ik + 1; local S0 = Yk[1]; do qk[4] =
                                                                                            qk[1]; end
                                                                                        ; Ik = Ik + 0X1; Wk = 4; do qk[Wk] =
                                                                                            qk[Wk](); end
                                                                                        ; Ik = Ik + 0X1; Ik = Ik + 1; do ak =
                                                                                            uk[Ik]; end
                                                                                        ; Ik = Ik + 0X001; qk[0X4][ak[0x005]] =
                                                                                        ak[4]; Ik = Ik + 0X1; (qk)[5] =
                                                                                        qk[3]; ak = uk[Ik]; Ik = Ik + 1; qk[6] =
                                                                                        qk[0X000][ak[0X04]]; Ik = Ik + 1; C0 = 0x5; qk
                                                                                            [C0](qk[C0 + 1]); Wk = C0 - 1; Ik =
                                                                                        Ik + 0X1; Ik = Ik + 0X00001; ak =
                                                                                        uk[Ik]; Ik = Ik + 0X1; do qk[0x5] =
                                                                                            ak[5]; end
                                                                                        ; Ik = Ik + 1; S0[0X1][S0[0X2]] =
                                                                                        qk[0X5]; Ik = Ik + 0X1; repeat
                                                                                            local H0, Z0 = Uk, qk; local F0 = {}; do
                                                                                                for e0, E0 in X, H0 do
                                                                                                    for A0, L0 in X, E0 do
                                                                                                        do
                                                                                                            if L0[0X1] == Z0 and L0[2] >= 0 then
                                                                                                                local P0 = (L0[2]); do
                                                                                                                    if not (not F0[P0]) then else (F0)[P0] = {
                                                                                                                            Z0[P0] }; end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ; L0[1] =
                                                                                                                F0[P0]; (L0)[0x002] = 0X00001;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        until true
                                                                                        ;
                                                                                    else (qk)[ak[6]] = ak[5]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end); do
                                                                if not (mk) then
                                                                    if S(nk) == "s\116r\105ng" then
                                                                        do
                                                                            if not (P(nk, '\097\116\116\101m\112t t\111\032y\105e\108d\032\097c\114o\115s \109et\097\109\101t\104o\100/\067%\045\099\097l\108\032b\111u\110d\097ry')) then else return
                                                                                s(); end
                                                                            ;
                                                                        end
                                                                        ; if not (P(nk, "^\046-\058\037\100+\058 ")) then
                                                                            Z(nk, 0X00000); else (Z)(
                                                                            '\076\117r\097ph\032\083cri\112t:' ..
                                                                            (Ok[Ik - 1] or '(\105\110\116er\110al\041') ..
                                                                            "\058\032" .. H(nk), 0X0); end
                                                                        ;
                                                                    else Z(nk, 0X0); end
                                                                    ;
                                                                else
                                                                    do
                                                                        if nk then
                                                                            do
                                                                                if Mk ~= 1 then return qk[bk](i(qk, bk +
                                                                                    1, Wk)); else return qk[bk](); end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        elseif bk then return i(qk, bk, Mk); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end; end
                                                    ;
                                                end
                                                ;
                                            else
                                                do
                                                    if tk ~= 0X0001 then
                                                        do vk = function(...)
                                                                local Ik, qk = 1, ({}); local Wk = 0X000; local gk = ({
                                                                    [0X2] = pk, [1] = qk }); local fk = (o and o() or _ENV); local _k, xk =
                                                                Sq(...); local kk = ((fk == Y and ok or fk)); _k = _k -
                                                                0X1; do
                                                                    for ak = 0, _k do
                                                                        if not (Nk > ak) then break; else qk[ak] = xk
                                                                            [ak + 1]; end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ; do
                                                                    if not jk then xk = nil; elseif not (Kk) then else qk[Nk] = {
                                                                            n = _k >= Nk and _k - Nk + 0X0001 or 0,
                                                                            i(xk, Nk + 0X1, _k + 1) }; end
                                                                    ;
                                                                end
                                                                ; if kk ~= fk then
                                                                    if not (p) then
                                                                        do _ENV = kk; end
                                                                        ;
                                                                    else p(vk, kk); end
                                                                    ;
                                                                end
                                                                ; local mk, nk, bk, Mk = Q(function()
                                                                    while true do
                                                                        local ak = (uk[Ik]); local z0 = (ak[0X00007]); Ik =
                                                                        Ik + 0X1; if z0 >= 8 then
                                                                            if not (z0 < 0xc) then
                                                                                do
                                                                                    if z0 >= 14 then
                                                                                        do
                                                                                            if z0 ~= 0x0000f then
                                                                                                local C0 = ak[1]; local r0, R0 =
                                                                                                C0[1], (nil); local B0 = (#r0); do
                                                                                                    if not (B0 > 0) then else
                                                                                                        R0 = {}; for c0 = 1, B0 do
                                                                                                            local Q0 = r0
                                                                                                            [c0]; if Q0[1] ~= 0x0 then
                                                                                                                do R0[c0 - 0X1] =
                                                                                                                    Yk[Q0[2]]; end
                                                                                                                ;
                                                                                                            else R0[c0 - 0x1] = {
                                                                                                                    qk,
                                                                                                                    Q0[2] }; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ; (h)(Uk, R0);
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ; qk[ak[6]] = Pq(C0, R0,
                                                                                                    kk);
                                                                                            else
                                                                                                repeat
                                                                                                    local C0, R0, r0 = Uk,
                                                                                                        qk, (ak[6]); local B0 = ({}); for c0, Q0 in X, C0 do
                                                                                                        for S0, H0 in X, Q0 do
                                                                                                            if not (H0[0X0001] == R0 and H0[2] >= r0) then else
                                                                                                                local Z0 =
                                                                                                                H0[2]; if not B0[Z0] then B0[Z0] = {
                                                                                                                        R0[Z0] }; end
                                                                                                                ; do (H0)[1] =
                                                                                                                    B0[Z0]; end
                                                                                                                ; do H0[0X2] = 0X001; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                until true
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if z0 == 0X0D then (qk)[ak[0X00006]] =
                                                                                            f(qk[ak[0X1]], qk[ak[3]]); else
                                                                                            local C0 = (Yk[0x000]); qk[0] =
                                                                                            C0[0X1][C0[0x2]]; local R0 = 0X0000; do Ik =
                                                                                                Ik + 0x1; end
                                                                                            ; do Ik = Ik + 1; end
                                                                                            ; ak = uk[Ik]; Ik = Ik + 0X1; local r0 =
                                                                                            qk[0x0]; (qk)[R0 + 1] = r0; qk[R0] =
                                                                                            r0[ak[4]]; ak = uk[Ik]; Ik =
                                                                                            Ik + 1; qk[0X2] = ak[5]; Ik =
                                                                                            Ik + 1; R0 = 0X000; (qk)[R0] =
                                                                                            qk[R0](qk[R0 + 1], qk[R0 + 2]); do Wk =
                                                                                                R0; end
                                                                                            ; Ik = Ik + 0x1; Ik = Ik + 1; ak =
                                                                                            uk[Ik]; Ik = Ik + 0X1; do
                                                                                                if not (not qk[0]) then else Ik =
                                                                                                    ak[1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if z0 >= 0X000a then
                                                                                    do
                                                                                        if z0 == 11 then
                                                                                            if not (qk[ak[6]]) then else
                                                                                                do Ik = ak[0X1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 ~= 9 then qk[ak[0x6]] = kk
                                                                                        [ak[0X5]]; else Ik = ak[1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if not (z0 < 4) then
                                                                                    if z0 < 0x06 then
                                                                                        do
                                                                                            if z0 == 0X5 then
                                                                                                do qk[ak[6]] = ak[0X5]; end
                                                                                                ;
                                                                                            else (qk)[ak[6]] = qk
                                                                                                [ak[0X0001]] ==
                                                                                                qk[ak[0x3]]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if z0 == 0X00007 then (qk)[ak[6]] = {
                                                                                                    i({}, 1, ak[1]) }; else
                                                                                                do
                                                                                                    repeat
                                                                                                        local C0, R0 = Uk,
                                                                                                            (qk); local r0 = ({}); for B0, c0 in X, C0 do
                                                                                                            for Q0, S0 in X, c0 do
                                                                                                                if S0[0X1] == R0 and S0[0x2] >= 0x0 then
                                                                                                                    local H0 =
                                                                                                                    S0[0X2]; if not r0[H0] then (r0)[H0] = {
                                                                                                                            R0[H0] }; end
                                                                                                                    ; S0[1] =
                                                                                                                    r0[H0]; do (S0)[0x2] = 1; end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ;
                                                                                                end
                                                                                                ; return;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if not (z0 >= 0x02) then
                                                                                        if z0 ~= 1 then
                                                                                            do (qk)[0x00000] = kk
                                                                                                [ak[0X5]]; end
                                                                                            ; Ik = Ik + 0X1; Ik = Ik +
                                                                                            0x01; do ak = uk[Ik]; end
                                                                                            ; do Ik = Ik + 0x001; end
                                                                                            ; (qk)[0X0] = qk[0][ak[0X4]]; Ik =
                                                                                            Ik + 0X1; do Ik = Ik + 0X0001; end
                                                                                            ; do Ik = Ik + 0X001; end
                                                                                            ; Wk = 0; do (qk)[Wk] = qk
                                                                                                [Wk](); end
                                                                                            ; do ak = uk[Ik]; end
                                                                                            ; Ik = Ik + 1; if not qk[0] then
                                                                                                do Ik = ak[0X01]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            local C0 = (Yk[1]); do qk[0X00000] =
                                                                                                C0[0x1][C0[2]]; end
                                                                                            ; Ik = Ik + 1; Ik = Ik + 1; Ik =
                                                                                            Ik + 0x1; do Wk = 0X0; end
                                                                                            ; qk[Wk](); Wk = Wk - 1; Ik =
                                                                                            Ik + 1; Ik = Ik + 0X01; ak =
                                                                                            uk[Ik]; do Ik = Ik + 1; end
                                                                                            ; do (qk)[0x000] = kk[ak[5]]; end
                                                                                            ; ak = uk[Ik]; do Ik = Ik +
                                                                                                0X1; end
                                                                                            ; local R0 = (0); qk[0X1] =
                                                                                            ak[1]; do Ik = Ik + 0X00001; end
                                                                                            ; qk[R0](qk[R0 + 0X1]); Wk =
                                                                                            R0 - 0X1; do ak = uk[Ik]; end
                                                                                            ; Ik = Ik + 1; do Ik = ak
                                                                                                [0X0001]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if z0 == 3 then
                                                                                                do (qk)[ak[6]] = not qk
                                                                                                    [ak[1]]; end
                                                                                                ;
                                                                                            else
                                                                                                do
                                                                                                    for C0 = ak[6], ak[1] do qk[C0] = nil; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end); if not (mk) then
                                                                    do
                                                                        if S(nk) == "st\114\105n\103" then
                                                                            if P(nk, "a\116\116emp\116\032\116o\032\121ie\108d\032\097\099\114o\115s\032\109\101\116\097\109\101th\111d/\067\037-\099\097l\108\032\098oun\100\097\114y") then return
                                                                                s(); end
                                                                            ; if not (P(nk, '\094.-:%\100+: ')) then (Z)(
                                                                                nk, 0X0); else (Z)(
                                                                                '\076urap\104 \083\099\114ipt\058' ..
                                                                                (Ok[Ik - 0X0001] or "\040\105n\116\101\114n\097\108)") ..
                                                                                '\058 ' .. H(nk), 0); end
                                                                            ;
                                                                        else (Z)(nk, 0X0); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    do
                                                                        if nk then
                                                                            do
                                                                                if Mk ~= 1 then return qk[bk](i(qk, bk +
                                                                                    1, Wk)); else return qk[bk](); end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        elseif bk then return i(qk, bk, Mk); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end; end
                                                        ;
                                                    else vk = function(...)
                                                            local Ik = 1; local qk = {}; local fk = (o and o() or _ENV); local gk, Wk =
                                                            { [0X2] = pk, [1] = qk }, 0X0; local _k, xk = Sq(...); _k =
                                                            _k - 0X1; for ak = 0X000, _k do
                                                                do
                                                                    if not (Nk > ak) then break; else (qk)[ak] = xk
                                                                        [ak + 0X001]; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; local kk = (fk == Y and ok or fk); if not jk then xk = nil; elseif Kk then (qk)[Nk] = {
                                                                    n = _k >= Nk and _k - Nk + 1 or 0, i(xk, Nk + 1, _k +
                                                                1) }; end
                                                            ; do
                                                                if kk ~= fk then
                                                                    do
                                                                        if not (p) then
                                                                            do _ENV = kk; end
                                                                            ;
                                                                        else (p)(vk, kk); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; local mk, nk, bk, Mk = Q(function()
                                                                while true do
                                                                    local ak = uk[Ik]; local z0 = (ak[7]); Ik = Ik + 1; if not (z0 >= 0X8) then
                                                                        if not (z0 >= 4) then
                                                                            if z0 < 2 then
                                                                                do
                                                                                    if z0 == 0X00001 then
                                                                                        do
                                                                                            if qk[ak[1]] ~= qk[ak[3]] then else Ik =
                                                                                                ak[0X06]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        local C0 = (ak[1]); local r0 = (C0[1]); local R0 = nil; local B0 = (#r0); if not (B0 > 0) then else
                                                                                            R0 = {}; for c0 = 1, B0 do
                                                                                                local Q0 = r0[c0]; if Q0[1] ~= 0 then R0[c0 - 1] =
                                                                                                    Yk[Q0[0x02]]; else (R0)[c0 - 0X1] = {
                                                                                                        qk, Q0[0X2] }; end
                                                                                                ;
                                                                                            end
                                                                                            ; (h)(Uk, R0);
                                                                                        end
                                                                                        ; do (qk)[ak[6]] = Pq(C0, R0, kk); end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if z0 ~= 3 then
                                                                                    do
                                                                                        repeat
                                                                                            local r0 = ({}); local C0, R0 =
                                                                                            Uk, qk; for B0, c0 in X, C0 do
                                                                                                for Q0, S0 in X, c0 do
                                                                                                    if not (S0[0X0001] == R0 and S0[2] >= 0) then else
                                                                                                        local H0 = (S0[0x02]); if not (not r0[H0]) then else r0[H0] = {
                                                                                                                R0[H0] }; end
                                                                                                        ; (S0)[1] = r0
                                                                                                        [H0]; S0[0x00002] = 1;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        until true
                                                                                        ;
                                                                                    end
                                                                                    ; return;
                                                                                else end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if z0 >= 6 then
                                                                                    if z0 ~= 0X7 then
                                                                                        for C0 = ak[6], ak[1] do qk[C0] = nil; end
                                                                                        ;
                                                                                    else (qk)[ak[6]] = kk[ak[5]]; end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if z0 == 5 then
                                                                                            do (qk)[ak[0x006]] = {
                                                                                                    i({}, 0X1, ak[0x1]) }; end
                                                                                            ;
                                                                                        else Ik = ak[0X0001]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if not (z0 >= 0x0C) then
                                                                            do
                                                                                if z0 < 0X00A then
                                                                                    if z0 ~= 0x9 then
                                                                                        local C0 = (Yk[0]); do (qk)[0] =
                                                                                            C0[0X1][C0[0x002]]; end
                                                                                        ; ak = uk[Ik]; local R0 = 0; Ik =
                                                                                        Ik + 0X1; local r0 = (qk[0x0]); do (qk)[R0 + 1] =
                                                                                            r0; end
                                                                                        ; (qk)[R0] = r0[ak[0x4]]; ak = uk
                                                                                        [Ik]; do Ik = Ik + 0x1; end
                                                                                        ; qk[2] = ak[0X5]; do Ik = Ik +
                                                                                            0x00001; end
                                                                                        ; do R0 = 0X00000; end
                                                                                        ; (qk)[R0] = qk[R0](qk[R0 + 1],
                                                                                            qk[R0 + 2]); do Wk = R0; end
                                                                                        ; Ik = Ik + 0x1; do Ik = Ik + 1; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 0x1; do
                                                                                            if not (not qk[0X0]) then else
                                                                                                do Ik = ak[1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        local C0, R0 = ak[0X6], ak[1]; Wk =
                                                                                        C0 + R0 - 1; do
                                                                                            repeat
                                                                                                local r0, B0 = Uk, qk; local c0 = ({}); for Q0, S0 in X, r0 do
                                                                                                    for H0, Z0 in X, S0 do
                                                                                                        if not (Z0[1] == B0 and Z0[0X002] >= 0x0000) then else
                                                                                                            local F0 = (Z0[2]); do
                                                                                                                if not c0[F0] then (c0)[F0] = {
                                                                                                                        B0[F0] }; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ; Z0[0x00001] =
                                                                                                            c0[F0]; (Z0)[0X002] = 1;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            until true
                                                                                            ;
                                                                                        end
                                                                                        ; do return true, C0, R0; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 == 0Xb then (qk)[ak[0X6]] = qk
                                                                                        [ak[0x00001]]; else
                                                                                        do (qk)[0] = kk[ak[5]]; end
                                                                                        ; do Ik = Ik + 1; end
                                                                                        ; Ik = Ik + 1; do ak = uk[Ik]; end
                                                                                        ; Ik = Ik + 1; (qk)[0X0] = qk[0]
                                                                                        [ak[0X4]]; Ik = Ik + 1; Ik = Ik +
                                                                                        1; Ik = Ik + 1; Wk = 0; (qk)[Wk] =
                                                                                        qk[Wk](); ak = uk[Ik]; Ik = Ik +
                                                                                        1; do
                                                                                            if not (not qk[0]) then else Ik =
                                                                                                ak[1]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if z0 >= 14 then
                                                                                if z0 == 0X0000F then
                                                                                    do
                                                                                        if not (qk[ak[0X0001]] < qk[ak[0X0003]]) then else Ik =
                                                                                            ak[6]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    local C0 = (Yk[0X000]); (qk)[0x0] =
                                                                                    C0[0x1][C0[2]]; local R0 = 0; Ik = Ik +
                                                                                    1; Ik = Ik + 1; ak = uk[Ik]; Ik = Ik +
                                                                                    1; local r0 = (qk[0]); qk[R0 + 0X1] =
                                                                                    r0; do qk[R0] = r0[ak[4]]; end
                                                                                    ; ak = uk[Ik]; Ik = Ik + 1; do qk[2] =
                                                                                        ak[5]; end
                                                                                    ; Ik = Ik + 0X001; do R0 = 0; end
                                                                                    ; (qk)[R0] = qk[R0](qk[R0 + 0x1],
                                                                                        qk[R0 + 0X002]); Wk = R0; do ak =
                                                                                        uk[Ik]; end
                                                                                    ; Ik = Ik + 1; (qk)[0X00000] = qk
                                                                                    [0X0] * ak[4]; ak = uk[Ik]; do Ik =
                                                                                        Ik + 0x1; end
                                                                                    ; (qk)[0X01] = kk[ak[5]]; Ik = Ik +
                                                                                    0X1; (qk)[2] = qk[0]; do Ik = Ik + 1; end
                                                                                    ; R0 = 0X01; (qk[R0])(qk[R0 + 0x1]); Wk =
                                                                                    R0 - 1; Ik = Ik + 1; do Ik = Ik + 1; end
                                                                                    ; ak = uk[Ik]; Ik = Ik + 0X00001; (qk)[1] =
                                                                                    kk[ak[0X05]]; Ik = Ik + 0X00001; Ik =
                                                                                    Ik + 0x1; ak = uk[Ik]; do Ik = Ik +
                                                                                        0X0001; end
                                                                                    ; R0 = 1; r0 = qk[1]; qk[R0 + 1] = r0; do (qk)[R0] =
                                                                                        r0[ak[0X00004]]; end
                                                                                    ; ak = uk[Ik]; do Ik = Ik + 1; end
                                                                                    ; qk[0X00003] = ak[5]; Ik = Ik + 1; R0 = 1; qk[R0] =
                                                                                    qk[R0](qk[R0 + 1], qk[R0 + 0X2]); do Wk =
                                                                                        R0; end
                                                                                    ; Ik = Ik + 1; Ik = Ik + 0X00001; do ak =
                                                                                        uk[Ik]; end
                                                                                    ; Ik = Ik + 0X1; qk[2] = kk[ak[5]]; Ik =
                                                                                    Ik + 1; Ik = Ik + 1; do ak = uk[Ik]; end
                                                                                    ; Ik = Ik + 0x1; R0 = 0x00002; r0 =
                                                                                    qk[0X2]; (qk)[R0 + 1] = r0; qk[R0] =
                                                                                    r0[ak[0X004]]; ak = uk[Ik]; Ik = Ik +
                                                                                    0X1; qk[0x4] = ak[5]; Ik = Ik + 1; do R0 = 0X2; end
                                                                                    ; (qk)[R0] = qk[R0](qk[R0 + 0X1],
                                                                                        qk[R0 + 0X2]); Wk = R0; ak = uk
                                                                                    [Ik]; Ik = Ik + 1; qk[0X2] = qk[2]
                                                                                    [ak[0X0004]]; do ak = uk[Ik]; end
                                                                                    ; Ik = Ik + 1; R0 = 3; r0 = qk[0X1]; (qk)[R0 + 0X00001] =
                                                                                    r0; do (qk)[R0] = r0[ak[0x00004]]; end
                                                                                    ; ak = uk[Ik]; Ik = Ik + 0X1; (qk)[5] =
                                                                                    kk[ak[0X05]]; Ik = Ik + 1; Ik = Ik +
                                                                                    1; do ak = uk[Ik]; end
                                                                                    ; Ik = Ik + 0X1; do qk[5] = qk[5]
                                                                                        [ak[4]]; end
                                                                                    ; Ik = Ik + 0X1; do Ik = Ik + 0X1; end
                                                                                    ; Ik = Ik + 0X01; (qk)[6] = qk[2]; Ik =
                                                                                    Ik + 1; R0 = 0X3; Wk = R0 + 0X0004 -
                                                                                    1; qk[R0](i(qk, R0 + 0X1, Wk)); Wk =
                                                                                    R0 - 1; ak = uk[Ik]; Ik = Ik + 1; do Ik =
                                                                                        ak[1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if z0 ~= 13 then qk[ak[6]] = ak[0x05]; else
                                                                                    if not (qk[ak[6]]) then else
                                                                                        do Ik = ak[0X001]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end); if mk then
                                                                if nk then
                                                                    if Mk ~= 1 then
                                                                        do return qk[bk](i(qk, bk + 1, Wk)); end
                                                                        ;
                                                                    else
                                                                        do return qk[bk](); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                elseif not (bk) then else return i(qk, bk, Mk); end
                                                                ;
                                                            else
                                                                if S(nk) ~= '\115\116\114i\110g' then Z(nk, 0X0); else
                                                                    if P(nk, '\097\116tempt\032\116o \121ie\108\100\032\097c\114o\115s\032\109\101t\097\109eth\111d\047\067%\045cal\108 \098o\117ndar\121') then return
                                                                        s(); end
                                                                    ; if P(nk, '^\046\045:%d\043:\032') then (Z)(
                                                                        "\076\117raph\032S\099ri\112t:" ..
                                                                        (Ok[Ik - 0X0001] or '\040in\116\101rn\097\108\041') ..
                                                                        ': ' .. H(nk), 0); else Z(nk, 0X0); end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end; end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    elseif tk < 0X0000c then
                                        if tk >= 10 then
                                            if tk == 11 then
                                                do vk = function(...)
                                                        local Wk = (0x00000); local qk = ({}); local Ik = (1); local fk = (o and o() or _ENV); local _k, xk =
                                                        Sq(...); local gk = ({ [1] = qk, [0X2] = pk }); do _k = _k - 1; end
                                                        ; local kk = ((fk == Y and ok or fk)); do
                                                            for ak = 0, _k do
                                                                if Nk > ak then qk[ak] = xk[ak + 0X01]; else
                                                                    do break; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ; if not jk then xk = nil; elseif not (Kk) then else qk[Nk] = {
                                                                n = _k >= Nk and _k - Nk + 0X1 or 0, i(xk, Nk + 1, _k +
                                                            0X1) }; end
                                                        ; do
                                                            if kk == fk then else
                                                                if not (p) then _ENV = kk; else (p)(vk, kk); end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ; local mk, nk, bk, Mk = Q(function()
                                                            do
                                                                while true do
                                                                    local ak = (uk[Ik]); local z0 = (ak[7]); do Ik = Ik +
                                                                        1; end
                                                                    ; if z0 >= 0X00008 then
                                                                        if not (z0 < 0Xc) then
                                                                            if z0 >= 14 then
                                                                                do
                                                                                    if z0 ~= 0X0f then
                                                                                        local C0 = Yk[0X0]; qk[0] = C0
                                                                                        [1][C0[0X002]]; Ik = Ik + 0X0001; Ik =
                                                                                        Ik + 0x01; do ak = uk[Ik]; end
                                                                                        ; Ik = Ik + 1; qk[0X00] = qk
                                                                                        [0X000][ak[0X00004]]; ak = uk
                                                                                        [Ik]; Ik = Ik + 1; (qk)[0x0] = qk
                                                                                        [0][ak[0X04]]; ak = uk[Ik]; Ik =
                                                                                        Ik + 1; (qk)[0X0000] = qk[0X00]
                                                                                        [ak[4]]; do ak = uk[Ik]; end
                                                                                        ; Ik = Ik + 0x1; if not qk[0x0] then Ik =
                                                                                            ak[1]; end
                                                                                        ;
                                                                                    else
                                                                                        do qk[ak[6]] = qk[ak[1]] ==
                                                                                            qk[ak[3]]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if z0 ~= 0XD then qk[ak[6]] = ak[1]; else
                                                                                    repeat
                                                                                        local B0 = ({}); local R0, r0 =
                                                                                        Uk, (qk); for c0, Q0 in X, R0 do
                                                                                            for S0, H0 in X, Q0 do
                                                                                                if not (H0[1] == r0 and H0[0X2] >= 0) then else
                                                                                                    local Z0 = H0[2]; do
                                                                                                        if not B0[Z0] then
                                                                                                            do (B0)[Z0] = {
                                                                                                                    r0[Z0] }; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ; H0[0x0001] = B0
                                                                                                    [Z0]; H0[2] = 0X1;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    until true
                                                                                    ; local C0 = (ak[0X6]); return false,
                                                                                        C0, C0 + ak[0X1] - 2;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (z0 >= 0Xa) then
                                                                                do
                                                                                    if z0 == 9 then
                                                                                        local C0 = (ak[1]); local r0, R0 =
                                                                                        C0[0X00001], nil; local B0 = (#r0); if not (B0 > 0) then else
                                                                                            R0 = {}; for c0 = 0X1, B0 do
                                                                                                local Q0 = (r0[c0]); if Q0[1] ~= 0 then R0[c0 - 0X1] =
                                                                                                    Yk[Q0[2]]; else (R0)[c0 - 0X01] = {
                                                                                                        qk, Q0[2] }; end
                                                                                                ;
                                                                                            end
                                                                                            ; h(Uk, R0);
                                                                                        end
                                                                                        ; qk[ak[6]] = C[ak[3]](R0);
                                                                                    else
                                                                                        local C0 = ak[0X1]; local R0 = nil; local r0 = (C0[1]); local B0 = #
                                                                                        r0; if B0 > 0 then
                                                                                            R0 = {}; for c0 = 0X00001, B0 do
                                                                                                local Q0 = r0[c0]; if Q0[0x01] == 0X0 then
                                                                                                    do R0[c0 - 1] = { qk,
                                                                                                            Q0[0x00002] }; end
                                                                                                    ;
                                                                                                else (R0)[c0 - 0X1] = Yk
                                                                                                    [Q0[2]]; end
                                                                                                ;
                                                                                            end
                                                                                            ; h(Uk, R0);
                                                                                        end
                                                                                        ; qk[ak[0x00006]] = Pq(C0, R0, kk);
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if z0 == 11 then qk[ak[6]] = {
                                                                                        i({}, 0X01, ak[0X001]) }; else Ik =
                                                                                    ak[0x001]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if not (z0 >= 0X0004) then
                                                                            do
                                                                                if z0 < 0X2 then
                                                                                    if z0 ~= 0X00001 then qk[ak[6]] = not
                                                                                        qk[ak[0X1]]; else
                                                                                        qk[0X0] = kk[ak[5]]; ak = uk[Ik]; do Ik =
                                                                                            Ik + 1; end
                                                                                        ; (qk)[0] = qk[0X0][ak[4]]; do Ik =
                                                                                            Ik + 1; end
                                                                                        ; Wk = 0x000; qk[Wk] = qk[Wk](); ak =
                                                                                        uk[Ik]; Ik = Ik + 0X1; if not qk[0] then Ik =
                                                                                            ak[0X001]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 ~= 0X3 then
                                                                                        repeat
                                                                                            local r0 = {}; local C0, R0 =
                                                                                            Uk, qk; do
                                                                                                for B0, c0 in X, C0 do
                                                                                                    for Q0, S0 in X, c0 do
                                                                                                        if S0[0X1] == R0 and S0[2] >= 0X0 then
                                                                                                            local H0 = S0
                                                                                                            [0X2]; if not (not r0[H0]) then else r0[H0] = {
                                                                                                                    R0[H0] }; end
                                                                                                            ; do (S0)[1] =
                                                                                                                r0[H0]; end
                                                                                                            ; S0[2] = 0X1;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        until true
                                                                                        ; do return; end
                                                                                        ;
                                                                                    else
                                                                                        do qk[0] = kk[ak[5]]; end
                                                                                        ; ak = uk[Ik]; do Ik = Ik + 1; end
                                                                                        ; do qk[0] = qk[0][ak[0X4]]; end
                                                                                        ; Ik = Ik + 1; Ik = Ik + 1; ak =
                                                                                        uk[Ik]; Ik = Ik + 1; (qk)[0] = qk
                                                                                        [0][ak[4]]; do Ik = Ik + 0x001; end
                                                                                        ; Ik = Ik + 1; ak = uk[Ik]; do Ik =
                                                                                            Ik + 0x0001; end
                                                                                        ; qk[0X0][ak[5]] = ak[0X4]; do ak =
                                                                                            uk[Ik]; end
                                                                                        ; Ik = Ik + 0X0001; do Ik = ak
                                                                                            [0X1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if z0 < 0X6 then
                                                                                do
                                                                                    if z0 == 5 then
                                                                                        (qk)[0] = kk[ak[0X005]]; ak = uk
                                                                                        [Ik]; Ik = Ik + 0X1; do qk[0X0] =
                                                                                            qk[0][ak[4]]; end
                                                                                        ; Ik = Ik + 1; do Ik = Ik + 0x1; end
                                                                                        ; local C0 = (Yk[0]); ak = uk
                                                                                        [Ik]; Ik = Ik + 1; qk[0x0] = qk
                                                                                        [0][ak[0X4]]; do Ik = Ik + 0x1; end
                                                                                        ; do Ik = Ik + 1; end
                                                                                        ; Ik = Ik + 0X00001; (qk)[1] = C0
                                                                                        [0x01][C0[0x2]]; Ik = Ik + 0X1; Ik =
                                                                                        Ik + 1; do ak = uk[Ik]; end
                                                                                        ; Ik = Ik + 1; qk[1] = qk[1]
                                                                                        [ak[4]]; Ik = Ik + 1; Ik = Ik + 1; ak =
                                                                                        uk[Ik]; Ik = Ik + 0x1; do (qk)[0X1] =
                                                                                            qk[1][ak[4]]; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 0X1; do (qk)[1] =
                                                                                            qk[1][ak[4]]; end
                                                                                        ; Ik = Ik + 0X00001; Ik = Ik + 1; do ak =
                                                                                            uk[Ik]; end
                                                                                        ; do Ik = Ik + 1; end
                                                                                        ; do qk[0][ak[5]] = qk[0x1]; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 1; Ik =
                                                                                        ak[1];
                                                                                    else end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if z0 == 0X7 then
                                                                                    do qk[ak[6]] = ak[0X00005]; end
                                                                                    ;
                                                                                else qk[ak[0X6]] = kk[ak[5]]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end); do
                                                            if not (mk) then
                                                                if S(nk) == "stri\110g" then
                                                                    if not (P(nk, 'a\116te\109\112t\032to\032yi\101ld a\099ros\115 \109\101\116a\109e\116\104o\100\047\067\037\045c\097ll\032b\111unda\114y')) then else
                                                                        do return s(); end
                                                                        ;
                                                                    end
                                                                    ; do
                                                                        if not (P(nk, '^.-:\037d\043\058 ')) then Z(nk, 0); else (Z)(
                                                                            '\076\117ra\112\104\032\083cr\105pt:' ..
                                                                            (Ok[Ik - 0X0001] or '(\105n\116er\110al\041') ..
                                                                            '\058\032' .. H(nk), 0X0); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else Z(nk, 0X0); end
                                                                ;
                                                            else
                                                                if nk then
                                                                    do
                                                                        if Mk == 0X0001 then return qk[bk](); else return
                                                                            qk[bk](i(qk, bk + 0X00001, Wk)); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                elseif not (bk) then else return i(qk, bk, Mk); end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end; end
                                                ;
                                            else vk = function(...)
                                                    local Ik = (0X00001); local qk = {}; local fk = (o and o() or _ENV); local Wk = (0X0); local kk, gk =
                                                    (fk == Y and ok or fk), { [1] = qk, [0X2] = pk }; local _k, xk = Sq(...); do _k =
                                                        _k - 0X1; end
                                                    ; for ak = 0X0, _k do
                                                        if not (Nk > ak) then break; else
                                                            do (qk)[ak] = xk[ak + 0X1]; end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ; do
                                                        if not jk then xk = nil; elseif Kk then qk[Nk] = {
                                                                n = _k >= Nk and _k - Nk + 0X1 or 0, i(xk, Nk + 1, _k + 1) }; end
                                                        ;
                                                    end
                                                    ; if kk ~= fk then
                                                        if p then p(vk, kk); else _ENV = kk; end
                                                        ;
                                                    end
                                                    ; local mk, nk, bk, Mk = Q(function()
                                                        while true do
                                                            local ak = uk[Ik]; local z0 = ak[7]; Ik = Ik + 1; if not (z0 >= 0X00008) then
                                                                if not (z0 >= 0x4) then
                                                                    if z0 < 2 then
                                                                        if z0 ~= 0X00001 then
                                                                            do qk[0] = kk[ak[0X00005]]; end
                                                                            ; do Ik = Ik + 0x001; end
                                                                            ; Ik = Ik + 0X1; ak = uk[Ik]; Ik = Ik + 0x1; (qk)[0X0] =
                                                                            qk[0X0][ak[0X0004]]; ak = uk[Ik]; Ik = Ik +
                                                                            0X001; local C0 = 0; qk[0x1] = ak[0X0005]; Ik =
                                                                            Ik + 1; do qk[C0] = qk[C0](qk[C0 + 0x1]); end
                                                                            ; do Wk = C0; end
                                                                            ; ak = uk[Ik]; Ik = Ik + 1; if not (not qk[0]) then else Ik =
                                                                                ak[0x01]; end
                                                                            ;
                                                                        else qk[ak[6]] = x(qk[ak[1]], qk[ak[0X00003]]); end
                                                                        ;
                                                                    else
                                                                        if z0 == 0X00003 then
                                                                            local C0 = (ak[0x0001]); local r0 = (C0[0x1]); local R0 = (nil); local B0 = (#r0); if not (B0 > 0X00) then else
                                                                                R0 = {}; for c0 = 0x01, B0 do
                                                                                    local Q0 = (r0[c0]); if Q0[0X01] ~= 0 then R0[c0 - 0X0001] =
                                                                                        Yk[Q0[2]]; else (R0)[c0 - 0X1] = {
                                                                                            qk, Q0[0X2] }; end
                                                                                    ;
                                                                                end
                                                                                ; h(Uk, R0);
                                                                            end
                                                                            ; qk[ak[6]] = Pq(C0, R0, kk);
                                                                        else (qk)[ak[0X6]] = ak[5]; end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    if not (z0 < 0X006) then
                                                                        if z0 == 0X7 then
                                                                            do
                                                                                if qk[ak[1]] == qk[ak[0X3]] then else Ik =
                                                                                    ak[6]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (qk[ak[1]] < qk[ak[0X3]]) then else Ik =
                                                                                ak[6]; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if z0 ~= 0x5 then
                                                                            for C0 = ak[0X6], ak[1] do qk[C0] = nil; end
                                                                            ;
                                                                        else Ik = ak[1]; end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                if not (z0 >= 0x000C) then
                                                                    if not (z0 < 10) then
                                                                        if z0 == 11 then qk[ak[0X6]] = { i({}, 0X1, ak
                                                                            [1]) }; else end
                                                                        ;
                                                                    else
                                                                        do
                                                                            if z0 ~= 0x9 then
                                                                                (qk)[0x000] = kk[ak[5]]; ak = uk[Ik]; local C0 = 0; Ik =
                                                                                Ik + 1; local R0 = (qk[0]); do qk[C0 + 0X0001] =
                                                                                    R0; end
                                                                                ; do (qk)[C0] = R0[ak[4]]; end
                                                                                ; do ak = uk[Ik]; end
                                                                                ; Ik = Ik + 1; do qk[2] = ak[5]; end
                                                                                ; Ik = Ik + 1; do C0 = 0X0; end
                                                                                ; local B0 = (0X00003); (qk)[C0] = qk
                                                                                [C0](qk[C0 + 0X1], qk[C0 + 2]); do Wk =
                                                                                    C0; end
                                                                                ; ak = uk[Ik]; Ik = Ik + 1; do (qk)[0X000] =
                                                                                    qk[0X000][ak[4]]; end
                                                                                ; do Ik = Ik + 1; end
                                                                                ; Ik = Ik + 0X0001; ak = uk[Ik]; Ik = Ik +
                                                                                1; (qk)[0x0] = qk[0X0][ak[0X4]]; do ak =
                                                                                    uk[Ik]; end
                                                                                ; Ik = Ik + 1; (qk)[0] = qk[0]
                                                                                [ak[0X0004]]; do Ik = Ik + 1; end
                                                                                ; Ik = Ik + 1; do ak = uk[Ik]; end
                                                                                ; do Ik = Ik + 0x1; end
                                                                                ; (qk)[0X000] = qk[0X000][ak[4]]; do Ik =
                                                                                    Ik + 1; end
                                                                                ; Ik = Ik + 1; ak = uk[Ik]; do Ik = Ik +
                                                                                    0X0001; end
                                                                                ; do (qk)[0X0000] = qk[0][ak[0X04]]; end
                                                                                ; ak = uk[Ik]; local r0 = (Yk[0]); do Ik =
                                                                                    Ik + 0X1; end
                                                                                ; (qk)[0] = qk[0X0][ak[0X00004]]; do ak =
                                                                                    uk[Ik]; end
                                                                                ; do Ik = Ik + 1; end
                                                                                ; (qk)[0x0000] = qk[0x0][ak[4]]; do Ik =
                                                                                    Ik + 0x1; end
                                                                                ; qk[1] = r0[1][r0[0x2]]; Ik = Ik + 0X01; Ik =
                                                                                Ik + 0x001; ak = uk[Ik]; do Ik = Ik + 0X1; end
                                                                                ; C0 = 1; R0 = qk[0X1]; (qk)[C0 + 0X1] =
                                                                                R0; qk[C0] = R0[ak[0X0004]]; ak = uk[Ik]; Ik =
                                                                                Ik + 0X01; do qk[0X3] = ak[5]; end
                                                                                ; do Ik = Ik + 0X00001; end
                                                                                ; do qk[0X0004] = qk[0]; end
                                                                                ; Ik = Ik + 0X01; qk[3] = qk[B0] ..
                                                                                qk[B0 + 1]; Ik = Ik + 0X0001; C0 = 0X1; (qk[C0])(
                                                                                qk[C0 + 1], qk[C0 + 0X002]); Wk = C0 -
                                                                                0X1; do Ik = Ik + 0X00001; end
                                                                                ; Ik = Ik + 1; do ak = uk[Ik]; end
                                                                                ; Ik = Ik + 1; Ik = ak[1];
                                                                            else
                                                                                repeat
                                                                                    local R0, r0 = Uk, (qk); local B0 = {}; for c0, Q0 in X, R0 do
                                                                                        for S0, H0 in X, Q0 do
                                                                                            do
                                                                                                if not (H0[0X1] == r0 and H0[2] >= 0) then else
                                                                                                    local Z0 = (H0[0x2]); do
                                                                                                        if not (not B0[Z0]) then else (B0)[Z0] = {
                                                                                                                r0[Z0] }; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ; (H0)[1] = B0[Z0]; H0[2] = 1;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                until true
                                                                                ; local C0 = (ak[0x6]); return false, C0,
                                                                                    C0 + ak[1] - 2;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    do
                                                                        if z0 >= 14 then
                                                                            if z0 ~= 0XF then (qk)[ak[0X0006]] = kk
                                                                                [ak[0X5]]; else
                                                                                local R0 = (ak[0X0001]); local C0 = (ak[6]); Wk =
                                                                                C0 + R0 - 0x1; do
                                                                                    repeat
                                                                                        local r0, B0, c0 = Uk, qk, {}; for Q0, S0 in X, r0 do
                                                                                            for H0, Z0 in X, S0 do
                                                                                                if Z0[0X1] == B0 and Z0[2] >= 0x0 then
                                                                                                    local F0 = Z0[2]; if not c0[F0] then c0[F0] = {
                                                                                                            B0[F0] }; end
                                                                                                    ; do Z0[0x001] = c0
                                                                                                        [F0]; end
                                                                                                    ; Z0[0X2] = 1;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    until true
                                                                                    ;
                                                                                end
                                                                                ; do return true, C0, R0; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if z0 == 13 then
                                                                                repeat
                                                                                    local C0, R0 = Uk, (qk); local r0 = ({}); for B0, c0 in X, C0 do
                                                                                        do
                                                                                            for Q0, S0 in X, c0 do
                                                                                                do
                                                                                                    if not (S0[1] == R0 and S0[0x002] >= 0X0) then else
                                                                                                        local H0 = (S0[2]); if not r0[H0] then
                                                                                                            do r0[H0] = {
                                                                                                                    R0[H0] }; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ; do S0[0X1] = r0
                                                                                                            [H0]; end
                                                                                                        ; do (S0)[0x0002] = 0x1; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                until true
                                                                                ; return;
                                                                            else
                                                                                local C0 = ak[0X06]; local R0, r0, B0 =
                                                                                qk[C0], qk[C0 + 0X1], (qk[C0 + 2]); (qk)[C0] =
                                                                                T(function()
                                                                                    for c0 = R0, r0, B0 do s(true, c0); end
                                                                                    ;
                                                                                end); Ik = ak[0X1];
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end); if not (mk) then
                                                        if S(nk) == "s\116\114ing" then
                                                            if not (P(nk, "\097t\116em\112\116 \116\111\032y\105el\100 \097\099\114\111s\115 \109\101\116a\109et\104\111\100/\067\037-\099\097l\108\032b\111u\110\100ary")) then else return
                                                                s(); end
                                                            ; if P(nk, '^\046-\058\037d+:\032') then (Z)(
                                                                "L\117r\097\112h S\099\114i\112\116\058" ..
                                                                (Ok[Ik - 0x1] or "\040i\110t\101\114\110al\041") ..
                                                                "\058 " .. H(nk), 0X0); else (Z)(nk, 0); end
                                                            ;
                                                        else (Z)(nk, 0X00000); end
                                                        ;
                                                    else
                                                        if nk then
                                                            if Mk == 1 then
                                                                do return qk[bk](); end
                                                                ;
                                                            else return qk[bk](i(qk, bk + 0x1, Wk)); end
                                                            ;
                                                        elseif bk then return i(qk, bk, Mk); end
                                                        ;
                                                    end
                                                    ;
                                                end; end
                                            ;
                                        else
                                            if tk == 0X9 then vk = function(...)
                                                    local Ik, qk = 0X1, ({}); local fk = (o and o() or _ENV); local gk, kk =
                                                    { [1] = qk, [0X2] = pk }, ((fk == Y and ok or fk)); local _k, xk = Sq(...); local Wk = (0X0); _k =
                                                    _k - 0X1; for ak = 0, _k do
                                                        if Nk > ak then (qk)[ak] = xk[ak + 1]; else break; end
                                                        ;
                                                    end
                                                    ; if not jk then xk = nil; elseif not (Kk) then else (qk)[Nk] = {
                                                            n = _k >= Nk and _k - Nk + 1 or 0x0, i(xk, Nk + 1, _k + 0x1) }; end
                                                    ; if kk ~= fk then
                                                        if p then (p)(vk, kk); else _ENV = kk; end
                                                        ;
                                                    end
                                                    ; local mk, nk, bk, Mk = Q(function()
                                                        while true do
                                                            local ak = uk[Ik]; local z0 = (ak[7]); Ik = Ik + 1; if not (z0 >= 10) then
                                                                if not (z0 >= 0x00005) then
                                                                    if z0 < 0x2 then
                                                                        if z0 == 0X1 then
                                                                            local C0 = ak[0X00001]; local r0 = C0[1]; local R0 = nil; local B0 = #
                                                                            r0; do
                                                                                if not (B0 > 0X0) then else
                                                                                    R0 = {}; for c0 = 1, B0 do
                                                                                        local Q0 = (r0[c0]); do
                                                                                            if Q0[1] == 0 then (R0)[c0 - 0X1] = {
                                                                                                    qk, Q0[2] }; else
                                                                                                do (R0)[c0 - 1] = Yk
                                                                                                    [Q0[0X2]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ; (h)(Uk, R0);
                                                                                end
                                                                                ;
                                                                            end
                                                                            ; (qk)[ak[0X6]] = Pq(C0, R0, kk);
                                                                        else
                                                                            for C0 = ak[0X6], ak[1] do qk[C0] = nil; end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        do
                                                                            if not (z0 < 0X003) then
                                                                                if z0 == 0X4 then
                                                                                    do (qk)[ak[6]] = { i({}, 1,
                                                                                            ak[0X0001]) }; end
                                                                                    ;
                                                                                else (qk)[ak[6]] = x(qk[ak[0X1]],
                                                                                        qk[ak[3]]); end
                                                                                ;
                                                                            else
                                                                                if qk[ak[1]] < qk[ak[0X00003]] then
                                                                                    do Ik = ak[0X6]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    do
                                                                        if z0 < 0X7 then
                                                                            do
                                                                                if z0 == 0X6 then
                                                                                    local C0 = (ak[0X6]); local R0 = (ak[3] - 1) *
                                                                                    0X00032; local r0 = qk[C0]; do
                                                                                        for B0 = 1, ak[0X001] do r0[R0 + B0] =
                                                                                            qk[C0 + B0]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else qk[ak[0X00006]] = ak[5]; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (z0 >= 8) then
                                                                                (qk)[0x0] = kk[ak[0X05]]; local C0 = 0X00000; do Ik =
                                                                                    Ik + 1; end
                                                                                ; Ik = Ik + 1; ak = uk[Ik]; Ik = Ik + 0x1; local R0 =
                                                                                qk[0]; qk[C0 + 0X1] = R0; qk[C0] = R0
                                                                                [ak[0X4]]; ak = uk[Ik]; do Ik = Ik + 0X1; end
                                                                                ; (qk)[0x00002] = ak[5]; Ik = Ik + 1; C0 = 0; (qk)[C0] =
                                                                                qk[C0](qk[C0 + 0x1], qk[C0 + 2]); Wk = C0; ak =
                                                                                uk[Ik]; Ik = Ik + 1; do (qk)[0X00000] =
                                                                                    qk[0][ak[0X0004]]; end
                                                                                ; ak = uk[Ik]; do Ik = Ik + 1; end
                                                                                ; qk[0X0] = qk[0][ak[0X4]]; Ik = Ik + 1; do Ik =
                                                                                    Ik + 1; end
                                                                                ; ak = uk[Ik]; do Ik = Ik + 0X0001; end
                                                                                ; qk[0] = qk[0][ak[0X4]]; Ik = Ik + 1; do Ik =
                                                                                    Ik + 1; end
                                                                                ; ak = uk[Ik]; Ik = Ik + 1; qk[0X0][ak[0X5]] =
                                                                                ak[4]; do ak = uk[Ik]; end
                                                                                ; Ik = Ik + 1; Ik = ak[0X01];
                                                                            else
                                                                                do
                                                                                    if z0 == 0X9 then
                                                                                        qk[0] = kk[ak[0X0005]]; do Ik =
                                                                                            Ik + 1; end
                                                                                        ; Ik = Ik + 1; ak = uk[Ik]; Ik =
                                                                                        Ik + 1; (qk)[0X0] = qk[0]
                                                                                        [ak[0X4]]; do Ik = Ik + 1; end
                                                                                        ; Wk = 0X0; (qk)[Wk] = qk[Wk](); Ik =
                                                                                        Ik + 1; Ik = Ik + 1; ak = uk[Ik]; Ik =
                                                                                        Ik + 1; if not (not qk[0]) then else
                                                                                            do Ik = ak[1]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else qk[ak[6]] = gk[ak[1]]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                do
                                                                    if not (z0 < 0X000f) then
                                                                        do
                                                                            if not (z0 < 18) then
                                                                                if not (z0 >= 0X013) then
                                                                                    local C0 = ak[1]; local R0 = (qk[C0]); for r0 = C0 + 0X01, ak[3] do R0 =
                                                                                        R0 .. qk[r0]; end
                                                                                    ; do (qk)[ak[0X0006]] = R0; end
                                                                                    ;
                                                                                else
                                                                                    if z0 == 0X000014 then (gk)[ak[1]] =
                                                                                        qk[ak[6]]; else
                                                                                        repeat
                                                                                            local C0, R0 = Uk, qk; local r0 = {}; do
                                                                                                for B0, c0 in X, C0 do
                                                                                                    for Q0, S0 in X, c0 do
                                                                                                        do
                                                                                                            if not (S0[1] == R0 and S0[2] >= 0) then else
                                                                                                                local H0 =
                                                                                                                S0[0X00002]; if not (not r0[H0]) then else r0[H0] = {
                                                                                                                        R0[H0] }; end
                                                                                                                ; do (S0)[0X00001] =
                                                                                                                    r0[H0]; end
                                                                                                                ; S0[0x2] = 1;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        until true
                                                                                        ; return;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                do
                                                                                    if not (z0 < 0x0010) then
                                                                                        if z0 == 0X0011 then qk[ak[0X6]] = -
                                                                                            qk[ak[0X1]]; else qk[ak[0X006]] =
                                                                                            kk[ak[0X5]]; end
                                                                                        ;
                                                                                    else qk[ak[0X6]] = qk[ak[0X1]] /
                                                                                        qk[ak[3]]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        do
                                                                            if not (z0 >= 0xC) then
                                                                                if z0 ~= 11 then Ik = ak[0X001]; else
                                                                                    do qk[0] = kk[ak[5]]; end
                                                                                    ; Ik = Ik + 1; Ik = Ik + 1; local C0 = (0); do ak =
                                                                                        uk[Ik]; end
                                                                                    ; Ik = Ik + 1; local R0 = qk[0]; do (qk)[C0 + 0X1] =
                                                                                        R0; end
                                                                                    ; do (qk)[C0] = R0[ak[4]]; end
                                                                                    ; ak = uk[Ik]; do Ik = Ik + 0x001; end
                                                                                    ; qk[0X00002] = ak[0X5]; Ik = Ik + 1; C0 = 0X0; (qk)[C0] =
                                                                                    qk[C0](qk[C0 + 0X00001], qk[C0 + 0X2]); do Wk =
                                                                                        C0; end
                                                                                    ; ak = uk[Ik]; Ik = Ik + 0X1; qk[0] =
                                                                                    qk[0][ak[4]]; ak = uk[Ik]; Ik = Ik +
                                                                                    0X1; qk[0X0] = qk[0][ak[0X4]]; ak =
                                                                                    uk[Ik]; Ik = Ik + 1; do qk[0x00000] =
                                                                                        qk[0][ak[0X4]]; end
                                                                                    ; Ik = Ik + 1; Ik = Ik + 0X1; do ak =
                                                                                        uk[Ik]; end
                                                                                    ; do Ik = Ik + 0X00001; end
                                                                                    ; (qk[0])[ak[5]] = ak[0X4]; ak = uk
                                                                                    [Ik]; Ik = Ik + 1; Ik = ak[0X1];
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (z0 >= 13) then
                                                                                    local C0 = Yk[0]; qk[0x0] = C0[1]
                                                                                    [C0[0X02]]; Ik = Ik + 0X1; local R0 = 0X0; do Ik =
                                                                                        Ik + 1; end
                                                                                    ; do ak = uk[Ik]; end
                                                                                    ; Ik = Ik + 0X01; local r0 = (qk[0x0]); qk[R0 + 1] =
                                                                                    r0; qk[R0] = r0[ak[0X4]]; ak = uk
                                                                                    [Ik]; do Ik = Ik + 0X1; end
                                                                                    ; (qk)[2] = ak[5]; Ik = Ik + 1; R0 = 0X0; (qk)[R0] =
                                                                                    qk[R0](qk[R0 + 0x00001], qk[R0 + 0X2]); do Wk =
                                                                                        R0; end
                                                                                    ; do Ik = Ik + 0X1; end
                                                                                    ; Ik = Ik + 1; ak = uk[Ik]; do Ik =
                                                                                        Ik + 1; end
                                                                                    ; if not qk[0] then Ik = ak[1]; end
                                                                                    ;
                                                                                else
                                                                                    if z0 == 0XE then
                                                                                        if qk[ak[1]] <= qk[ak[3]] then Ik =
                                                                                            ak[0X6]; end
                                                                                        ;
                                                                                    else end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end); do
                                                        if not (mk) then
                                                            if S(nk) == 'st\114\105\110\103' then
                                                                do
                                                                    if P(nk, 'at\116e\109p\116 \116\111\032\121ie\108\100 \097cross\032\109et\097\109et\104\111d/C%\045\099all \098o\117n\100\097\114y') then return
                                                                        s(); end
                                                                    ;
                                                                end
                                                                ; do
                                                                    if not (P(nk, '^\046-\058\037\100+\058 ')) then (Z)(
                                                                        nk, 0); else Z(
                                                                        '\076u\114a\112h\032\083\099\114\105\112\116:' ..
                                                                        (Ok[Ik - 1] or '(i\110t\101\114\110al\041') ..
                                                                        ': ' .. H(nk), 0); end
                                                                    ;
                                                                end
                                                                ;
                                                            else Z(nk, 0); end
                                                            ;
                                                        else
                                                            if nk then
                                                                if Mk == 1 then return qk[bk](); else return qk[bk](i(qk,
                                                                        bk + 0x1, Wk)); end
                                                                ;
                                                            elseif not (bk) then else
                                                                do return i(qk, bk, Mk); end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end; else
                                                do vk = function(...)
                                                        local qk = ({}); local Ik = (0X1); local fk = ((o and o() or _ENV)); local gk = {
                                                            [1] = qk, [0X2] = pk }; local _k, xk = Sq(...); local kk = ((fk == Y and ok or fk)); local Wk = (0X0000); _k =
                                                        _k - 1; for ak = 0X00000, _k do
                                                            if Nk > ak then
                                                                do qk[ak] = xk[ak + 1]; end
                                                                ;
                                                            else break; end
                                                            ;
                                                        end
                                                        ; if not jk then
                                                            do xk = nil; end
                                                            ;
                                                        elseif not (Kk) then else
                                                            do qk[Nk] = { n = _k >= Nk and _k - Nk + 0X01 or 0x0,
                                                                    i(xk, Nk + 1, _k + 0x1) }; end
                                                            ;
                                                        end
                                                        ; if kk ~= fk then
                                                            if not (p) then _ENV = kk; else p(vk, kk); end
                                                            ;
                                                        end
                                                        ; local mk, nk, bk, Mk = Q(function()
                                                            do
                                                                while true do
                                                                    local ak = (uk[Ik]); local z0 = (ak[0x7]); Ik = Ik +
                                                                    1; if z0 < 0Xa then
                                                                        do
                                                                            if z0 < 0X005 then
                                                                                if not (z0 < 2) then
                                                                                    if not (z0 < 0X3) then
                                                                                        do
                                                                                            if z0 ~= 0X4 then
                                                                                                (qk)[0x00001] = kk
                                                                                                [ak[0X005]]; local C0 = (1); do Ik =
                                                                                                    Ik + 0X1; end
                                                                                                ; Ik = Ik + 1; ak = uk
                                                                                                [Ik]; Ik = Ik + 0X1; local R0 = (qk[1]); qk[C0 + 0X00001] =
                                                                                                R0; qk[C0] = R0[ak[0X4]]; ak =
                                                                                                uk[Ik]; do Ik = Ik + 1; end
                                                                                                ; do qk[0x00003] = ak
                                                                                                    [0x5]; end
                                                                                                ; Ik = Ik + 1; do C0 = 0X01; end
                                                                                                ; qk[C0] = qk[C0](
                                                                                                qk[C0 + 0x1], qk[C0 + 0X2]); do Wk =
                                                                                                    C0; end
                                                                                                ; ak = uk[Ik]; Ik = Ik +
                                                                                                0X1; C0 = 0X1; R0 = qk
                                                                                                [0X1]; qk[C0 + 1] = R0; do (qk)[C0] =
                                                                                                    R0[ak[4]]; end
                                                                                                ; ak = uk[Ik]; Ik = Ik +
                                                                                                1; qk[3] = ak[5]; Ik = Ik +
                                                                                                0X1; do C0 = 1; end
                                                                                                ; (qk)[C0] = qk[C0](
                                                                                                qk[C0 + 1], qk[C0 + 2]); do Wk =
                                                                                                    C0; end
                                                                                                ; Ik = Ik + 0X00001; Ik =
                                                                                                Ik + 1; ak = uk[Ik]; Ik =
                                                                                                Ik + 0X1; C0 = 0X1; R0 =
                                                                                                qk[1]; (qk)[C0 + 0X1] =
                                                                                                R0; do qk[C0] = R0
                                                                                                    [ak[4]]; end
                                                                                                ; ak = uk[Ik]; Ik = Ik +
                                                                                                1; (qk)[0X3] = ak[5]; Ik =
                                                                                                Ik + 1; C0 = 0X1; qk[C0] =
                                                                                                qk[C0](qk[C0 + 1],
                                                                                                    qk[C0 + 2]); Wk = C0; do Ik =
                                                                                                    Ik + 1; end
                                                                                                ; Ik = Ik + 1; ak = uk
                                                                                                [Ik]; do Ik = Ik +
                                                                                                    0x00001; end
                                                                                                ; C0 = 1; R0 = qk[1]; (qk)[C0 + 1] =
                                                                                                R0; (qk)[C0] = R0[ak[4]]; do ak =
                                                                                                    uk[Ik]; end
                                                                                                ; Ik = Ik + 1; (qk)[3] =
                                                                                                ak[0X1]; Ik = Ik + 1; qk[0x04] =
                                                                                                qk[0X00000]; Ik = Ik + 1; C0 = 1; do Wk =
                                                                                                    C0 + 4 - 1; end
                                                                                                ; (qk[C0])(i(qk, C0 + 1,
                                                                                                    Wk)); Wk = C0 - 1; ak =
                                                                                                uk[Ik]; Ik = Ik + 1; Ik =
                                                                                                ak[1];
                                                                                            else
                                                                                                do
                                                                                                    repeat
                                                                                                        local C0, R0 = Uk,
                                                                                                            (qk); local r0 = ({}); for B0, c0 in X, C0 do
                                                                                                            for Q0, S0 in X, c0 do
                                                                                                                do
                                                                                                                    if S0[0X1] == R0 and S0[2] >= 0 then
                                                                                                                        local H0 =
                                                                                                                        S0[0X2]; do
                                                                                                                            if not (not r0[H0]) then else (r0)[H0] = {
                                                                                                                                    R0[H0] }; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ; S0[0x1] =
                                                                                                                        r0[H0]; S0[0x2] = 0X1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ;
                                                                                                end
                                                                                                ; return;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            repeat
                                                                                                local C0, R0, r0 = Uk, qk,
                                                                                                    (ak[0X6]); local B0 = {}; for c0, Q0 in X, C0 do
                                                                                                    for S0, H0 in X, Q0 do
                                                                                                        if H0[1] == R0 and H0[0X2] >= r0 then
                                                                                                            local Z0 = H0
                                                                                                            [0x02]; if not (not B0[Z0]) then else (B0)[Z0] = {
                                                                                                                    R0[Z0] }; end
                                                                                                            ; do H0[0X0001] =
                                                                                                                B0[Z0]; end
                                                                                                            ; H0[2] = 0x01;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            until true
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 ~= 0X001 then qk[ak[6]] = kk
                                                                                        [ak[5]]; else
                                                                                        local C0, R0 = Yk[0], (0X0); qk[0X00] =
                                                                                        C0[0x1][C0[2]]; Ik = Ik + 0X001; do Ik =
                                                                                            Ik + 0x1; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 0X00001; local r0 =
                                                                                        qk[0X00]; (qk)[R0 + 1] = r0; (qk)[R0] =
                                                                                        r0[ak[4]]; ak = uk[Ik]; do Ik =
                                                                                            Ik + 1; end
                                                                                        ; (qk)[0x2] = ak[5]; do Ik = Ik +
                                                                                            0X001; end
                                                                                        ; R0 = 0X0; (qk)[R0] = qk[R0](
                                                                                        qk[R0 + 1], qk[R0 + 0X2]); Wk =
                                                                                        R0; Ik = Ik + 0X00001; Ik = Ik +
                                                                                        1; ak = uk[Ik]; Ik = Ik + 1; if not qk[0] then Ik =
                                                                                            ak[1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (z0 >= 7) then
                                                                                    do
                                                                                        if z0 == 0X6 then
                                                                                            do qk[ak[0X6]] = qk
                                                                                                [ak[0X01]] +
                                                                                                qk[ak[0X0003]]; end
                                                                                            ;
                                                                                        else (qk)[ak[6]] = ak[0X5]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 >= 0X08 then
                                                                                        if z0 == 0X9 then qk[ak[0X6]] =
                                                                                            qk[ak[0X1]] > qk[ak[3]]; else
                                                                                            do (qk)[1] = kk[ak[0x5]]; end
                                                                                            ; Ik = Ik + 1; Ik = Ik + 1; do Ik =
                                                                                                Ik + 0X1; end
                                                                                            ; local C0 = (Yk[0x0]); (qk)[0x2] =
                                                                                            C0[1][C0[2]]; do ak = uk[Ik]; end
                                                                                            ; local R0 = (0X2); Ik = Ik +
                                                                                            1; local r0 = qk[0X2]; local B0 = 0X3; qk[R0 + 1] =
                                                                                            r0; qk[R0] = r0[ak[4]]; ak =
                                                                                            uk[Ik]; Ik = Ik + 1; (qk)[0X4] =
                                                                                            ak[0X005]; Ik = Ik + 0X0001; R0 = 0X2; local c0 = (0X0); if B0 ~= 0 then Wk =
                                                                                                R0 + B0 - 1; end
                                                                                            ; local Q0, S0 = nil, nil; if B0 ~= 0x1 then
                                                                                                do Q0, S0 = Sq(qk[R0](i(
                                                                                                    qk, R0 + 1, Wk))); end
                                                                                                ;
                                                                                            else Q0, S0 = Sq(qk[R0]()); end
                                                                                            ; if c0 ~= 1 then
                                                                                                if c0 ~= 0 then
                                                                                                    Q0 = R0 + c0 - 0X2; do Wk =
                                                                                                        Q0 + 0X1; end
                                                                                                    ;
                                                                                                else
                                                                                                    Q0 = Q0 + R0 - 1; do Wk =
                                                                                                        Q0; end
                                                                                                    ;
                                                                                                end
                                                                                                ; local H0 = (0X0); for Z0 = R0, Q0 do
                                                                                                    H0 = H0 + 0X1; do qk[Z0] =
                                                                                                        S0[H0]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                do Wk = R0 - 0X1; end
                                                                                                ;
                                                                                            end
                                                                                            ; Ik = Ik + 1; Ik = Ik + 0X01; Ik =
                                                                                            Ik + 0X1; do R0 = 0X1; end
                                                                                            ; qk[R0](i(qk, R0 + 0X1, Wk)); Wk =
                                                                                            R0 - 1; ak = uk[Ik]; Ik = Ik +
                                                                                            0x00001; Ik = ak[1];
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        local C0 = Yk[0X1]; do qk[0X0] =
                                                                                            C0[0x0001][C0[2]]; end
                                                                                        ; Ik = Ik + 1; Ik = Ik + 0X01; Ik =
                                                                                        Ik + 0X01; Wk = 0x00000; qk[Wk] =
                                                                                        qk[Wk](); do Ik = Ik + 0X01; end
                                                                                        ; Ik = Ik + 0X01; do ak = uk[Ik]; end
                                                                                        ; Ik = Ik + 0X1; if not qk[0X0] then Ik =
                                                                                            ak[0X001]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        do
                                                                            if z0 >= 0XF then
                                                                                if not (z0 < 18) then
                                                                                    if not (z0 < 19) then
                                                                                        if z0 ~= 20 then
                                                                                            (qk)[0] = kk[ak[5]]; do Ik =
                                                                                                Ik + 0X001; end
                                                                                            ; Ik = Ik + 0X1; do ak = uk
                                                                                                [Ik]; end
                                                                                            ; Ik = Ik + 0X1; (qk)[0] = qk
                                                                                            [0x0][ak[0X04]]; Ik = Ik +
                                                                                            0X1; Wk = 0x00000; (qk)[Wk] =
                                                                                            qk[Wk](); Ik = Ik + 0X1; Ik =
                                                                                            Ik + 1; ak = uk[Ik]; Ik = Ik +
                                                                                            0X1; if not qk[0] then
                                                                                                do Ik = ak[1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else (qk)[ak[6]] = true; end
                                                                                        ;
                                                                                    else end
                                                                                    ;
                                                                                else
                                                                                    if not (z0 < 16) then
                                                                                        do
                                                                                            if z0 == 17 then
                                                                                                for C0 = ak[6], ak[0x1] do (qk)[C0] = nil; end
                                                                                                ;
                                                                                            else
                                                                                                do (kk)[ak[0X5]] = qk
                                                                                                    [ak[6]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else Ik = ak[1]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (z0 >= 0x0C) then
                                                                                    do
                                                                                        if z0 ~= 0Xb then
                                                                                            local C0 = (ak[0X1]); local r0, R0 =
                                                                                            C0[0X0001], (nil); local B0 = #
                                                                                            r0; if B0 > 0x0 then
                                                                                                R0 = {}; for c0 = 1, B0 do
                                                                                                    local Q0 = r0[c0]; if Q0[0X1] == 0 then R0[c0 - 0x0001] = {
                                                                                                            qk,
                                                                                                            Q0[0x00002] }; else (R0)[c0 - 1] =
                                                                                                        Yk[Q0[2]]; end
                                                                                                    ;
                                                                                                end
                                                                                                ; h(Uk, R0);
                                                                                            end
                                                                                            ; qk[ak[0X6]] = Pq(C0, R0, kk);
                                                                                        else
                                                                                            if not (qk[ak[1]] < qk[ak[3]]) then else
                                                                                                do Ik = ak[0X6]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if not (z0 < 0Xd) then
                                                                                        if z0 == 14 then qk[ak[0X6]] = {
                                                                                                i({}, 0X1, ak[0X00001]) }; else
                                                                                            if not (qk[ak[1]] <= qk[ak[3]]) then else Ik =
                                                                                                ak[6]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        local C0 = (ak[6]); local R0 = T(function(...)
                                                                                            s(); for r0, B0, c0, Q0, S0, H0, Z0, F0, e0, E0 in ... do (s)(
                                                                                                true,
                                                                                                    { r0, B0, c0, Q0, S0,
                                                                                                        H0, Z0, F0, e0,
                                                                                                        E0 }); end
                                                                                            ;
                                                                                        end); (R0)(qk[C0], qk[C0 + 1],
                                                                                            qk[C0 + 2]); do Wk = C0; end
                                                                                        ; qk[C0] = R0; do Ik = ak[1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end); do
                                                            if mk then
                                                                if nk then
                                                                    if Mk == 0X01 then return qk[bk](); else return qk
                                                                        [bk](i(qk, bk + 0x1, Wk)); end
                                                                    ;
                                                                elseif bk then return i(qk, bk, Mk); end
                                                                ;
                                                            else
                                                                if S(nk) ~= "strin\103" then (Z)(nk, 0X0); else
                                                                    if P(nk, 'at\116e\109\112t\032t\111\032yield \097cro\115\115\032met\097\109\101\116h\111d\047\067%-ca\108\108 \098o\117nda\114\121') then return
                                                                        s(); end
                                                                    ; if P(nk, "^\046\045\058%d\043\058 ") then Z(
                                                                        '\076\117r\097p\104 S\099\114\105p\116\058' ..
                                                                        (Ok[Ik - 0x01] or '(\105\110\116\101rnal\041') ..
                                                                        ": " .. H(nk), 0X0); else Z(nk, 0); end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end; end
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    else
                                        if not (tk >= 14) then
                                            do
                                                if tk == 13 then
                                                    do vk = function(...)
                                                            local Ik, qk = 1, {}; local fk = ((o and o() or _ENV)); local kk, gk =
                                                            (fk == Y and ok or fk), { [1] = qk, [0X2] = pk }; local _k, xk =
                                                            Sq(...); _k = _k - 0X001; local Wk = 0X0; do
                                                                for ak = 0X00000, _k do
                                                                    if not (Nk > ak) then break; else qk[ak] = xk
                                                                        [ak + 0X1]; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; if not jk then xk = nil; elseif not (Kk) then else (qk)[Nk] = {
                                                                    n = _k >= Nk and _k - Nk + 1 or 0, i(xk, Nk + 1,
                                                                    _k + 0X1) }; end
                                                            ; do
                                                                if kk == fk then else
                                                                    if p then p(vk, kk); else _ENV = kk; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; local mk, nk, bk, Mk = Q(function()
                                                                while true do
                                                                    local ak = uk[Ik]; local z0 = (ak[0X7]); Ik = Ik +
                                                                    0X001; if z0 >= 59 then
                                                                        if z0 < 88 then
                                                                            if z0 < 73 then
                                                                                if z0 >= 66 then
                                                                                    if z0 >= 0x045 then
                                                                                        if z0 >= 71 then
                                                                                            if z0 ~= 0x48 then (qk)[ak[6]] =
                                                                                                qk[ak[0X01]] ==
                                                                                                qk[ak[0X3]]; else (qk)[ak[0X6]] = {}; end
                                                                                            ;
                                                                                        else
                                                                                            do
                                                                                                if z0 ~= 70 then (qk[ak[0X006]])[ak[0X5]] =
                                                                                                    qk[ak[3]]; else
                                                                                                    if qk[ak[1]] ~= qk[ak[0X3]] then else Ik =
                                                                                                        ak[6]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if z0 >= 0X00043 then
                                                                                            do
                                                                                                if z0 == 0X44 then
                                                                                                    local C0 = (ak[6]); local R0, r0 =
                                                                                                    qk[C0](); if R0 then
                                                                                                        Ik = ak[0x1]; do qk[C0 + 0X3] =
                                                                                                            r0; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else (qk)[ak[6]] = ak
                                                                                                    [0x00005] >=
                                                                                                    qk[ak[0X0003]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else Ik = ak[0X1]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 < 62 then
                                                                                        if not (z0 < 0X3C) then
                                                                                            if z0 ~= 61 then
                                                                                                local C0 = ak[0X6]; local R0, r0, B0 =
                                                                                                qk[C0](); if R0 then
                                                                                                    do qk[C0 + 1] = r0; end
                                                                                                    ; (qk)[C0 + 2] = B0; do Ik =
                                                                                                        ak[1]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else (qk)[ak[0X6]] = kk
                                                                                                [ak[5]]; end
                                                                                            ;
                                                                                        else qk[ak[6]] = q(
                                                                                            qk[ak[0X00001]], qk[ak[3]]); end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if z0 >= 0X000040 then
                                                                                                if z0 == 0X41 then qk[ak[6]] =
                                                                                                    qk[ak[1]] +
                                                                                                    qk[ak[0X00003]]; else qk[ak[6]] =
                                                                                                    qk[ak[1]] < qk
                                                                                                    [ak[3]]; end
                                                                                                ;
                                                                                            else
                                                                                                if z0 == 0x3F then
                                                                                                    do qk[ak[0X06]] = ak
                                                                                                        [5] * qk
                                                                                                        [ak[0X3]]; end
                                                                                                    ;
                                                                                                else qk[ak[0X6]] = qk
                                                                                                    [ak[0X1]] * ak[0X04]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (z0 < 80) then
                                                                                    if not (z0 >= 0X00054) then
                                                                                        do
                                                                                            if z0 < 0X52 then
                                                                                                if z0 ~= 81 then qk[ak[0X06]] =
                                                                                                    qk[ak[0x1]] < ak[4]; else
                                                                                                    repeat
                                                                                                        local R0, r0 = Uk,
                                                                                                            qk; local B0 = ({}); do
                                                                                                            for c0, Q0 in X, R0 do
                                                                                                                for S0, H0 in X, Q0 do
                                                                                                                    if not (H0[1] == r0 and H0[0X002] >= 0X0) then else
                                                                                                                        local Z0 = (H0[0X2]); if not (not B0[Z0]) then else B0[Z0] = {
                                                                                                                                r0[Z0] }; end
                                                                                                                        ; H0[0X0001] =
                                                                                                                        B0[Z0]; H0[2] = 1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ; local C0 = ak[0X6]; do return
                                                                                                        false, C0, C0; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if z0 == 83 then
                                                                                                    do
                                                                                                        repeat
                                                                                                            local R0, r0 =
                                                                                                            Uk, (qk); local B0 = ({}); do
                                                                                                                for c0, Q0 in X, R0 do
                                                                                                                    for S0, H0 in X, Q0 do
                                                                                                                        if H0[0X1] == r0 and H0[0X2] >= 0X00 then
                                                                                                                            local Z0 = (H0[2]); if not B0[Z0] then B0[Z0] = {
                                                                                                                                    r0[Z0] }; end
                                                                                                                            ; do (H0)[0X1] =
                                                                                                                                B0[Z0]; end
                                                                                                                            ; do (H0)[0X2] = 1; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        until true
                                                                                                        ;
                                                                                                    end
                                                                                                    ; local C0 = (ak[0X006]); Wk =
                                                                                                    C0 + 1; do return
                                                                                                        true, C0, 2; end
                                                                                                    ;
                                                                                                else (qk)[ak[6]] = g(
                                                                                                    qk[ak[1]],
                                                                                                        qk[ak[0X3]]); end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if z0 < 86 then
                                                                                                if z0 == 0X000055 then
                                                                                                    local C0 = ak[1]; local R0 = (qk[C0]); for r0 = C0 + 1, ak[3] do
                                                                                                        do R0 = R0 ..
                                                                                                            qk[r0]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ; do qk[ak[0x06]] =
                                                                                                        R0; end
                                                                                                    ;
                                                                                                else
                                                                                                    local C0 = (ak[0x06]); local R0, r0 =
                                                                                                    qk[C0](); do
                                                                                                        if not (R0) then else
                                                                                                            qk[C0 + 0x1] =
                                                                                                            r0; Ik = ak
                                                                                                            [1];
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if z0 == 0X57 then qk[ak[0X06]] =
                                                                                                    qk[ak[0X0001]] >
                                                                                                    qk[ak[3]]; else
                                                                                                    local C0 = ak[6]; local R0 = (T(function(...)
                                                                                                        s(); for r0 in ... do
                                                                                                            s(true, r0); end
                                                                                                        ;
                                                                                                    end)); (R0)(qk[C0],
                                                                                                        qk[C0 + 0X1],
                                                                                                        qk[C0 + 0X2]); Wk =
                                                                                                    C0; do (qk)[C0] = R0; end
                                                                                                    ; Ik = ak[1];
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 < 0X00004c then
                                                                                        do
                                                                                            if z0 < 74 then
                                                                                                if not (not (ak[0x005] < qk[ak[0x3]])) then else Ik =
                                                                                                    ak[6]; end
                                                                                                ;
                                                                                            else
                                                                                                if z0 == 75 then
                                                                                                    local C0 = ak[0X6]; qk
                                                                                                        [C0](qk[C0 + 1],
                                                                                                            qk[C0 + 2]); do Wk =
                                                                                                        C0 - 1; end
                                                                                                    ;
                                                                                                else
                                                                                                    if qk[ak[1]] ~= ak[0X0004] then else Ik =
                                                                                                        ak[6]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if not (z0 >= 78) then
                                                                                            do
                                                                                                if z0 == 0X4D then qk[ak[0X06]] =
                                                                                                    ak[0X5] ~= qk[ak[3]]; else
                                                                                                    do
                                                                                                        if ak[0X03] == 166 then
                                                                                                            Ik = Ik -
                                                                                                            0x001; (uk)[Ik] = {
                                                                                                                [1] = (ak[0x1] - 0XEc),
                                                                                                                [0x7] = 110,
                                                                                                                [6] = (ak[6] - 0X00ec) };
                                                                                                        elseif ak[0x3] == 0xC4 then
                                                                                                            Ik = Ik - 1; do uk[Ik] = {
                                                                                                                    [6] = (ak[6] - 0X009F),
                                                                                                                    [0x7] = 0X6,
                                                                                                                    [0X1] = (ak[1] - 159) }; end
                                                                                                            ;
                                                                                                        elseif ak[0X3] ~= 152 then qk[ak[0X6]] =
                                                                                                            xk[Nk + 0x1]; else
                                                                                                            Ik = Ik - 1; uk[Ik] = {
                                                                                                                [6] = (ak[0x6] - 0Xd0),
                                                                                                                [0X00007] = 0X000072,
                                                                                                                [1] = (ak[1] - 208) };
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if z0 == 79 then
                                                                                                local C0 = ak[0X6]; Wk =
                                                                                                C0 + ak[1] - 1; (qk)[C0] =
                                                                                                qk[C0](i(qk, C0 + 0X0001,
                                                                                                    Wk)); do Wk = C0; end
                                                                                                ;
                                                                                            else
                                                                                                if not (qk[ak[0X00001]] < qk[ak[0x003]]) then else Ik =
                                                                                                    ak[0X06]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (z0 < 0x67) then
                                                                                if z0 < 0X6e then
                                                                                    if z0 < 0x6a then
                                                                                        if z0 < 104 then
                                                                                            local C0 = (ak[6]); local R0 =
                                                                                            T(function(...)
                                                                                                (s)(); do
                                                                                                    for r0, B0, c0, Q0, S0, H0, Z0, F0, e0, E0 in ... do
                                                                                                        s(true,
                                                                                                            { r0, B0, c0,
                                                                                                                Q0, S0,
                                                                                                                H0, Z0,
                                                                                                                F0, e0,
                                                                                                                E0 }); end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end); R0(qk[C0], qk[C0 + 0X01],
                                                                                                qk[C0 + 0X2]); do Wk = C0; end
                                                                                            ; (qk)[C0] = R0; do Ik = ak
                                                                                                [1]; end
                                                                                            ;
                                                                                        else
                                                                                            if z0 == 0x69 then qk[ak[6]] = {
                                                                                                    i({}, 1, ak[1]) }; else
                                                                                                local C0, R0 = ak
                                                                                                [0X0006],
                                                                                                    ((ak[3] - 0X0001) * 50); local r0 = (qk[C0]); for B0 = 1, ak[0x00001] do (r0)[R0 + B0] =
                                                                                                    qk[C0 + B0]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if not (z0 >= 108) then
                                                                                            if z0 ~= 0X00006B then
                                                                                                local C0, R0 = ak[6],
                                                                                                    (ak[1]); Wk = C0 + R0 -
                                                                                                1; repeat
                                                                                                    local r0, B0 = Uk,
                                                                                                        (qk); local c0 = ({}); for Q0, S0 in X, r0 do
                                                                                                        for H0, Z0 in X, S0 do
                                                                                                            if Z0[0X00001] == B0 and Z0[2] >= 0 then
                                                                                                                local F0 =
                                                                                                                Z0[2]; do
                                                                                                                    if not (not c0[F0]) then else c0[F0] = {
                                                                                                                            B0[F0] }; end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ; Z0[0X0001] =
                                                                                                                c0[F0]; Z0[2] = 1;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                until true
                                                                                                ; do return true, C0, R0; end
                                                                                                ;
                                                                                            else
                                                                                                do qk[ak[6]] = f(
                                                                                                    qk[ak[1]], qk[ak[3]]); end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if z0 ~= 0x006D then (qk)[ak[6]] =
                                                                                                ak[5]; else
                                                                                                if ak[0X3] ~= 0XBC then
                                                                                                    do qk[ak[6]] = nil; end
                                                                                                    ;
                                                                                                else
                                                                                                    do Ik = Ik - 0X1; end
                                                                                                    ; uk[Ik] = {
                                                                                                        [6] = (ak[0X6] - 217),
                                                                                                        [0X07] = 12,
                                                                                                        [1] = (ak[1] - 0X00D9) };
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 >= 0X72 then
                                                                                        if not (z0 < 0x000074) then
                                                                                            if z0 ~= 0X000075 then
                                                                                                Wk = ak[6]; qk[Wk] = qk
                                                                                                [Wk]();
                                                                                            else
                                                                                                local C0 = (ak[6]); local R0 =
                                                                                                qk[ak[0X1]]; (qk)[C0 + 1] =
                                                                                                R0; qk[C0] = R0[ak[4]];
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            do
                                                                                                if z0 ~= 115 then qk[ak[6]] =
                                                                                                    qk[ak[0X001]]; else
                                                                                                    do
                                                                                                        if qk[ak[0X1]] == ak[0x4] then else Ik =
                                                                                                            ak[0X6]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if not (z0 < 0X000070) then
                                                                                            if z0 == 0x71 then
                                                                                                local C0 = ak[0X001]; local R0 = nil; local r0 = (C0[0x00001]); local B0 = #
                                                                                                r0; if not (B0 > 0) then else
                                                                                                    do R0 = {}; end
                                                                                                    ; for c0 = 0x001, B0 do
                                                                                                        local Q0 = r0
                                                                                                        [c0]; if Q0[0X1] ~= 0X0 then (R0)[c0 - 0X00001] =
                                                                                                            Yk[Q0[0X2]]; else
                                                                                                            do (R0)[c0 - 1] = {
                                                                                                                    qk,
                                                                                                                    Q0[2] }; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ; h(Uk, R0);
                                                                                                end
                                                                                                ; do (qk)[ak[6]] = C
                                                                                                    [ak[0x3]](R0); end
                                                                                                ;
                                                                                            else
                                                                                                local C0 = (ak[6]); local R0 = ((ak[0x003] - 1) * 0X00032); local r0 = (qk[C0]); for B0 = 0X1, Wk - C0 do
                                                                                                    do (r0)[R0 + B0] = qk
                                                                                                        [C0 + B0]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if z0 == 111 then qk[ak[0X6]] =
                                                                                                ak[5] + ak[0x4]; else
                                                                                                if ak[0x003] ~= 0X5E then
                                                                                                    repeat
                                                                                                        local C0, R0, r0 =
                                                                                                        Uk, qk, ({}); for B0, c0 in X, C0 do
                                                                                                            do
                                                                                                                for Q0, S0 in X, c0 do
                                                                                                                    if not (S0[1] == R0 and S0[0X2] >= 0X0) then else
                                                                                                                        local H0 =
                                                                                                                        S0[2]; if not r0[H0] then
                                                                                                                            do r0[H0] = {
                                                                                                                                    R0[H0] }; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ; S0[1] =
                                                                                                                        r0[H0]; (S0)[2] = 0X1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ; return;
                                                                                                else
                                                                                                    Ik = Ik - 1; uk[Ik] = {
                                                                                                        [6] = (ak[6] - 0x33),
                                                                                                        [0x1] = (ak[0X01] - 51),
                                                                                                        [0X7] = 109 };
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if z0 >= 0X5F then
                                                                                    if not (z0 < 0X63) then
                                                                                        if z0 >= 101 then
                                                                                            do
                                                                                                if z0 == 0x66 then (qk)[ak[6]] =
                                                                                                    ak[0X5] ~= ak[4]; else (qk)[ak[6]] =
                                                                                                    k(qk[ak[1]]); end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            do
                                                                                                if z0 ~= 100 then
                                                                                                    local C0 = ak[0X06]; qk
                                                                                                        [C0](qk[C0 + 1]); Wk =
                                                                                                    C0 - 1;
                                                                                                else Fq[ak[1]] = qk
                                                                                                    [ak[0x6]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if not (z0 < 97) then
                                                                                            if z0 ~= 98 then
                                                                                                local C0 = (ak[6]); local R0, r0, B0 =
                                                                                                qk[C0], qk[C0 + 1],
                                                                                                    qk[C0 + 0X02]; do (qk)[C0] =
                                                                                                    T(function()
                                                                                                        for c0 = R0, r0, B0 do
                                                                                                            s(true, c0); end
                                                                                                        ;
                                                                                                    end); end
                                                                                                ; do Ik = ak[0X01]; end
                                                                                                ;
                                                                                            else (qk)[ak[0X006]] = ak
                                                                                                [0X5] < qk[ak[3]]; end
                                                                                            ;
                                                                                        else
                                                                                            if z0 == 0X00060 then qk[ak[0X006]] =
                                                                                                qk[ak[1]] >= qk[ak[3]]; else (qk)[ak[0X6]] =
                                                                                                qk[ak[1]] <=
                                                                                                qk[ak[0X0003]]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 >= 0x5b then
                                                                                        if z0 >= 0X5d then
                                                                                            if z0 ~= 94 then
                                                                                                if ak[3] == 0x000cd then
                                                                                                    do Ik = Ik - 1; end
                                                                                                    ; (uk)[Ik] = {
                                                                                                        [0x006] = (ak[6] - 102),
                                                                                                        [1] = (ak[1] - 102),
                                                                                                        [7] = 12 };
                                                                                                else
                                                                                                    local R0 = _k - Nk; local C0 =
                                                                                                    ak[6]; if not (R0 < 0) then else R0 = -1; end
                                                                                                    ; for r0 = C0, C0 + R0 do qk[r0] =
                                                                                                        xk[Nk + (r0 - C0) + 1]; end
                                                                                                    ; Wk = C0 + R0;
                                                                                                end
                                                                                                ;
                                                                                            else qk[ak[6]] = qk[ak[0X1]] -
                                                                                                ak[4]; end
                                                                                            ;
                                                                                        else
                                                                                            if z0 ~= 92 then
                                                                                                do (qk)[ak[0x006]] = -qk
                                                                                                    [ak[1]]; end
                                                                                                ;
                                                                                            else
                                                                                                do Wk = ak[0X006]; end
                                                                                                ; qk[Wk](); Wk = Wk - 1;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if not (z0 >= 89) then qk[ak[6]] =
                                                                                                qk[ak[1]] *
                                                                                                qk[ak[0X0003]]; else
                                                                                                if z0 == 0X00005a then
                                                                                                    if ak[3] ~= 25 then
                                                                                                        do
                                                                                                            if not qk[ak[6]] then Ik =
                                                                                                                ak[1]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    else
                                                                                                        Ik = Ik - 0X1; do (uk)[Ik] = {
                                                                                                                [0X7] = 0x001c,
                                                                                                                [0X0006] = (ak[6] - 0X0000a6),
                                                                                                                [0x1] = (ak[1] - 0Xa6) }; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    repeat
                                                                                                        local C0, R0 = Uk,
                                                                                                            qk; local r0 = ({}); for B0, c0 in X, C0 do
                                                                                                            for Q0, S0 in X, c0 do
                                                                                                                do
                                                                                                                    if not (S0[0X1] == R0 and S0[2] >= 0) then else
                                                                                                                        local H0 = (S0[0X2]); if not r0[H0] then
                                                                                                                            do (r0)[H0] = {
                                                                                                                                    R0[H0] }; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ; (S0)[1] =
                                                                                                                        r0[H0]; (S0)[2] = 0X1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ; return true, ak[6],
                                                                                                        0X0;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if z0 < 29 then
                                                                            if z0 >= 14 then
                                                                                if z0 >= 21 then
                                                                                    if z0 >= 25 then
                                                                                        if z0 < 0X1b then
                                                                                            if z0 == 26 then qk[ak[6]] =
                                                                                                gk[ak[0x1]]; else (qk)[ak[6]] =
                                                                                                qk[ak[1]] % qk[ak[3]]; end
                                                                                            ;
                                                                                        else
                                                                                            if z0 ~= 28 then
                                                                                                if ak[3] ~= 223 then
                                                                                                    repeat
                                                                                                        local C0, R0, r0 =
                                                                                                        Uk, qk, (ak[6]); local B0 = ({}); for c0, Q0 in X, C0 do
                                                                                                            do
                                                                                                                for S0, H0 in X, Q0 do
                                                                                                                    if H0[1] == R0 and H0[0X00002] >= r0 then
                                                                                                                        local Z0 =
                                                                                                                        H0[2]; if not (not B0[Z0]) then else (B0)[Z0] = {
                                                                                                                                R0[Z0] }; end
                                                                                                                        ; (H0)[1] =
                                                                                                                        B0[Z0]; (H0)[2] = 0X1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ;
                                                                                                else
                                                                                                    Ik = Ik - 0x1; uk[Ik] = {
                                                                                                        [6] = (ak[0x0006] - 63),
                                                                                                        [0X1] = (ak[0X1] - 63),
                                                                                                        [7] = 110 };
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                for C0 = ak[0X006], ak[0X1] do
                                                                                                    do qk[C0] = nil; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if z0 >= 0x000017 then
                                                                                            do
                                                                                                if z0 == 0X18 then qk[ak[0X006]] = true; else qk[ak[6]] =
                                                                                                    ak[5] > ak[4]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if z0 == 22 then
                                                                                                local C0 = ak[0X06]; Wk =
                                                                                                C0 + ak[1] - 1; qk[C0](i(
                                                                                                qk, C0 + 1, Wk)); Wk = C0 -
                                                                                                1;
                                                                                            else (qk)[ak[6]] = qk
                                                                                                [ak[0x1]] + ak[0X4]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 < 17 then
                                                                                        if z0 >= 15 then
                                                                                            if z0 == 16 then
                                                                                                do
                                                                                                    if qk[ak[0x1]] ~= qk[ak[3]] then Ik =
                                                                                                        ak[6]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else (qk)[ak[6]] = #qk
                                                                                                [ak[0X1]]; end
                                                                                            ;
                                                                                        else
                                                                                            if not (qk[ak[1]] <= qk[ak[0X3]]) then Ik =
                                                                                                ak[0x006]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if not (z0 >= 19) then
                                                                                            if z0 == 18 then qk[ak[0X6]] =
                                                                                                Fq[ak[1]]; else qk[ak[6]] =
                                                                                                qk[ak[1]][qk[ak[0x3]]]; end
                                                                                            ;
                                                                                        else
                                                                                            if z0 == 20 then
                                                                                                local C0 = (ak[6]); qk[C0] =
                                                                                                qk[C0](i(qk, C0 + 1, Wk)); do Wk =
                                                                                                    C0; end
                                                                                                ;
                                                                                            else qk[ak[0x6]] = qk
                                                                                                [ak[0X1]][ak[0X4]]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (z0 >= 7) then
                                                                                    if z0 < 3 then
                                                                                        if z0 < 0X1 then
                                                                                            local C0 = ak[1]; (qk)[ak[0X006]] =
                                                                                            qk[C0] .. qk[C0 + 1];
                                                                                        else
                                                                                            if z0 ~= 0X2 then
                                                                                                do qk[ak[0X6]] = qk
                                                                                                    [ak[1]] % ak[4]; end
                                                                                                ;
                                                                                            else
                                                                                                local C0 = ak[6]; local R0 =
                                                                                                T(function(...)
                                                                                                    s(); for r0, B0 in ... do
                                                                                                        s(true, r0, B0); end
                                                                                                    ;
                                                                                                end); (R0)(qk[C0],
                                                                                                    qk[C0 + 1],
                                                                                                    qk[C0 + 0X02]); Wk =
                                                                                                C0; do (qk)[C0] = R0; end
                                                                                                ; Ik = ak[0x1];
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if z0 >= 0x5 then
                                                                                            if z0 ~= 0X0006 then
                                                                                                local C0, R0 =
                                                                                                ak[0X00001], nil; local r0 = (C0[0x1]); local B0 = #
                                                                                                r0; if not (B0 > 0) then else
                                                                                                    R0 = {}; for c0 = 0X0001, B0 do
                                                                                                        local Q0 = r0
                                                                                                        [c0]; if Q0[1] ~= 0 then (R0)[c0 - 0X001] =
                                                                                                            Yk[Q0[0X2]]; else (R0)[c0 - 0X0001] = {
                                                                                                                qk, Q0
                                                                                                                [2] }; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ; h(Uk, R0);
                                                                                                end
                                                                                                ; (qk)[ak[0X06]] = Pq(C0,
                                                                                                    R0, kk);
                                                                                            else
                                                                                                local C0 = ak[0X6]; for R0 = C0, C0 + (ak[1] - 1) do (qk)[R0] =
                                                                                                    xk[Nk + (R0 - C0) + 1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if z0 ~= 0X04 then
                                                                                                do
                                                                                                    if ak[0X3] == 193 then
                                                                                                        Ik = Ik - 1; (uk)[Ik] = {
                                                                                                            [6] = (ak[0X6] - 101),
                                                                                                            [0X7] = 0x51,
                                                                                                            [0X1] = (ak[1] - 0X0065) };
                                                                                                    elseif ak[3] == 0X0020 then
                                                                                                        Ik = Ik - 1; (uk)[Ik] = {
                                                                                                            [0X7] = 0X7,
                                                                                                            [0X1] = (ak[0X1] - 69),
                                                                                                            [0X006] = (ak[0X6] - 0X000045) };
                                                                                                    else
                                                                                                        do
                                                                                                            if qk[ak[6]] then
                                                                                                                do Ik =
                                                                                                                    ak[0X1]; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else qk[ak[0X6]] = ak[1]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if not (z0 < 0X000A) then
                                                                                            if z0 < 0Xc then
                                                                                                if z0 == 11 then (qk)[ak[0X6]] =
                                                                                                    ak[5] < ak[4]; else
                                                                                                    if qk[ak[0X1]] <= qk[ak[3]] then
                                                                                                        do Ik = ak[6]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                if z0 ~= 0xd then
                                                                                                    if ak[3] == 0X0B then
                                                                                                        Ik = Ik - 0X1; uk[Ik] = {
                                                                                                            [6] = (ak[6] - 218),
                                                                                                            [0X001] = (ak[0X1] - 218),
                                                                                                            [7] = 55 };
                                                                                                    elseif ak[3] == 0xb4 then
                                                                                                        Ik = Ik - 0X1; (uk)[Ik] = {
                                                                                                            [0x6] = (ak[6] - 0X000B1),
                                                                                                            [7] = 0X1b,
                                                                                                            [1] = (ak[1] - 177) };
                                                                                                    else
                                                                                                        repeat
                                                                                                            local C0, R0 =
                                                                                                            Uk, qk; local r0 = {}; for B0, c0 in X, C0 do
                                                                                                                for Q0, S0 in X, c0 do
                                                                                                                    if not (S0[1] == R0 and S0[0X2] >= 0X0) then else
                                                                                                                        local H0 =
                                                                                                                        S0[0x2]; if not r0[H0] then r0[H0] = {
                                                                                                                                R0[H0] }; end
                                                                                                                        ; (S0)[0X00001] =
                                                                                                                        r0[H0]; (S0)[0X2] = 1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        until true
                                                                                                        ; return false,
                                                                                                            ak[0X006], Wk;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    do (qk)[ak[0x006]] =
                                                                                                        qk[ak[0X001]] /
                                                                                                        qk[ak[0X3]]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if z0 >= 8 then
                                                                                                if z0 == 9 then qk[ak[0X00006]] =
                                                                                                    qk[ak[0X001]] >=
                                                                                                    ak[4]; else qk[ak[6]] =
                                                                                                    qk[ak[0x00001]] ~=
                                                                                                    ak[0X0004]; end
                                                                                                ;
                                                                                            else
                                                                                                do
                                                                                                    if ak[0X3] ~= 0XE2 then
                                                                                                        do
                                                                                                            repeat
                                                                                                                local R0, r0 =
                                                                                                                Uk, qk; local B0 = ({}); for c0, Q0 in X, R0 do
                                                                                                                    for S0, H0 in X, Q0 do
                                                                                                                        if H0[1] == r0 and H0[2] >= 0x0 then
                                                                                                                            local Z0 =
                                                                                                                            H0[2]; if not (not B0[Z0]) then else (B0)[Z0] = {
                                                                                                                                    r0[Z0] }; end
                                                                                                                            ; do (H0)[0x0001] =
                                                                                                                                B0[Z0]; end
                                                                                                                            ; do (H0)[0X0002] = 1; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            until true
                                                                                                            ;
                                                                                                        end
                                                                                                        ; local C0 = (ak[6]); return
                                                                                                        false, C0,
                                                                                                            C0 + ak[0X1] -
                                                                                                            0X00002;
                                                                                                    else
                                                                                                        Ik = Ik - 0X00001; uk[Ik] = {
                                                                                                            [7] = 0XC,
                                                                                                            [1] = (ak[0X1] - 0X0032),
                                                                                                            [0x6] = (ak[0X6] - 50) };
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if z0 >= 0x002c then
                                                                                if not (z0 < 0X33) then
                                                                                    if z0 < 55 then
                                                                                        if z0 < 53 then
                                                                                            do
                                                                                                if z0 == 52 then
                                                                                                    do (gk)[ak[1]] = qk
                                                                                                        [ak[0X00006]]; end
                                                                                                    ;
                                                                                                else qk[ak[0X0006]] = _(
                                                                                                    qk[ak[0X1]],
                                                                                                        qk[ak[0X003]]); end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if z0 == 54 then (qk)[ak[6]] =
                                                                                                qk[ak[0X1]] / ak[4]; else
                                                                                                do
                                                                                                    repeat
                                                                                                        local C0, R0, r0 =
                                                                                                        Uk, qk, {}; for B0, c0 in X, C0 do
                                                                                                            for Q0, S0 in X, c0 do
                                                                                                                do
                                                                                                                    if S0[1] == R0 and S0[0X002] >= 0X0 then
                                                                                                                        local H0 =
                                                                                                                        S0[0X2]; if not r0[H0] then
                                                                                                                            do r0[H0] = {
                                                                                                                                    R0[H0] }; end
                                                                                                                            ;
                                                                                                                        end
                                                                                                                        ; (S0)[1] =
                                                                                                                        r0[H0]; S0[2] = 1;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ;
                                                                                                end
                                                                                                ; return true, ak
                                                                                                [0X0006], 1;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if z0 >= 57 then
                                                                                            if z0 ~= 0X3a then
                                                                                                local C0 = (ak[0X006]); local R0, r0 =
                                                                                                qk[C0](); do
                                                                                                    if R0 then
                                                                                                        for B0 = 0x1, ak[3] do (qk)[C0 + B0] =
                                                                                                            r0[B0]; end
                                                                                                        ; Ik = ak[1];
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else (kk)[ak[0X5]] = qk
                                                                                                [ak[0X6]]; end
                                                                                            ;
                                                                                        else
                                                                                            if z0 ~= 56 then qk[ak[6]] = not
                                                                                                qk[ak[0X001]]; else (qk[ak[0x6]])[ak[5]] =
                                                                                                ak[4]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if not (z0 < 47) then
                                                                                        if not (z0 >= 49) then
                                                                                            if z0 ~= 0X000030 then
                                                                                                local C0 = ak[0X6]; qk[C0] =
                                                                                                qk[C0](qk[C0 + 0X1],
                                                                                                    qk[C0 + 2]); do Wk =
                                                                                                    C0; end
                                                                                                ;
                                                                                            else
                                                                                                local C0 = (ak[6]); (qk)[C0] =
                                                                                                qk[C0](qk[C0 + 1]); Wk =
                                                                                                C0;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if z0 ~= 0x32 then (qk)[ak[0X6]] =
                                                                                                qk[ak[1]] ~= qk[ak[0X3]]; else qk[ak[6]] =
                                                                                                ak[5] ^ qk[ak[0X00003]]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if not (z0 >= 0x2D) then
                                                                                                do qk[ak[6]] = qk[ak[1]] -
                                                                                                    qk[ak[0X3]]; end
                                                                                                ;
                                                                                            else
                                                                                                if z0 ~= 46 then qk[ak[6]] =
                                                                                                    qk[ak[1]] ^ qk
                                                                                                    [ak[3]]; else qk[ak[0X6]] =
                                                                                                    ak[5] - ak[4]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                do
                                                                                    if z0 >= 36 then
                                                                                        if not (z0 < 0X28) then
                                                                                            do
                                                                                                if not (z0 < 42) then
                                                                                                    do
                                                                                                        if z0 ~= 43 then
                                                                                                            local C0 = (ak[0x00006]); (qk[C0])(
                                                                                                            i(qk, C0 + 1,
                                                                                                                Wk)); Wk =
                                                                                                            C0 - 1;
                                                                                                        else
                                                                                                            local C0 = Yk
                                                                                                            [ak[0x1]]; C0[0x1][C0[0x002]] =
                                                                                                            qk[ak[0X6]];
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else
                                                                                                    if z0 ~= 0X000029 then
                                                                                                        local C0 = Yk
                                                                                                        [ak[0X1]]; qk[ak[6]] =
                                                                                                        C0[0X001][C0[2]];
                                                                                                    else (qk)[ak[6]] = qk
                                                                                                        [ak[0x1]] ==
                                                                                                        ak[4]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if not (z0 >= 38) then
                                                                                                if z0 == 0X000025 then
                                                                                                    local C0 = ak[6]; local R0 = (ak[0X00001]); if R0 ~= 0X0 then Wk =
                                                                                                        C0 + R0 - 0X01; end
                                                                                                    ; local r0 = ak[0x3]; local B0, c0 =
                                                                                                    nil, (nil); if R0 ~= 0X01 then
                                                                                                        do B0, c0 = Sq(
                                                                                                            qk[C0](i(qk,
                                                                                                                C0 + 1,
                                                                                                                Wk))); end
                                                                                                        ;
                                                                                                    else B0, c0 = Sq(qk
                                                                                                        [C0]()); end
                                                                                                    ; if r0 == 0X01 then Wk =
                                                                                                        C0 - 1; else
                                                                                                        if r0 == 0 then
                                                                                                            B0 = B0 + C0 -
                                                                                                            0X00001; Wk =
                                                                                                            B0;
                                                                                                        else
                                                                                                            do B0 = C0 +
                                                                                                                r0 - 2; end
                                                                                                            ; Wk = B0 +
                                                                                                            0X0001;
                                                                                                        end
                                                                                                        ; local Q0 = 0X000; do
                                                                                                            for S0 = C0, B0 do
                                                                                                                Q0 = Q0 +
                                                                                                                0X01; (qk)[S0] =
                                                                                                                c0[Q0];
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else qk[ak[6]][qk[ak[0X001]]] =
                                                                                                    ak[4]; end
                                                                                                ;
                                                                                            else
                                                                                                if z0 == 39 then (qk)[ak[6]] =
                                                                                                    ak[0X00005] +
                                                                                                    qk[ak[3]]; else
                                                                                                    local C0 = (qk[ak[1]] / qk[ak[0X3]]); qk[ak[0x6]] =
                                                                                                    C0 - C0 % 1;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if z0 >= 0X000020 then
                                                                                                if not (z0 >= 0x0022) then
                                                                                                    if z0 == 33 then qk[ak[0X6]][qk[ak[1]]] =
                                                                                                        qk[ak[0X3]]; else (qk)[ak[0X6]] =
                                                                                                        qk[ak[1]] >
                                                                                                        ak[0X4]; end
                                                                                                    ;
                                                                                                else
                                                                                                    do
                                                                                                        if z0 ~= 0x23 then qk[ak[6]] =
                                                                                                            x(
                                                                                                            qk[ak[0x1]],
                                                                                                                qk[ak[3]]); else
                                                                                                            do qk[ak[6]] =
                                                                                                                ak[0x00005] <=
                                                                                                                qk[ak[0X3]]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                do
                                                                                                    if not (z0 >= 0X1e) then (qk)[ak[0x6]] =
                                                                                                        qk[ak[0X1]] <=
                                                                                                        ak[0X4]; else
                                                                                                        if z0 == 31 then
                                                                                                            if not (not (qk[ak[1]] < qk[ak[3]])) then else Ik =
                                                                                                                ak[0X6]; end
                                                                                                            ;
                                                                                                        else
                                                                                                            do qk[ak[0x006]] =
                                                                                                                ak[0X5] -
                                                                                                                qk[ak[0x3]]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end); if mk then
                                                                do
                                                                    if nk then
                                                                        do
                                                                            if Mk ~= 0X001 then
                                                                                do return qk[bk](i(qk, bk + 1, Wk)); end
                                                                                ;
                                                                            else return qk[bk](); end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    elseif not (bk) then else return i(qk, bk, Mk); end
                                                                    ;
                                                                end
                                                                ;
                                                            else
                                                                if S(nk) == "st\114\105\110\103" then
                                                                    if not (P(nk, "at\116\101\109\112\116\032\116o \121\105e\108\100\032\097\099ros\115\032\109\101t\097\109et\104o\100\047\067%\045\099\097ll b\111\117\110d\097\114y")) then else return
                                                                        s(); end
                                                                    ; if P(nk, "^\046\045\058\037d+\058 ") then Z(
                                                                        "Lu\114a\112h Sc\114ip\116:" ..
                                                                        (Ok[Ik - 0X1] or '(in\116\101\114na\108)') ..
                                                                        '\058 ' .. H(nk), 0); else (Z)(nk, 0); end
                                                                    ;
                                                                else Z(nk, 0); end
                                                                ;
                                                            end
                                                            ;
                                                        end; end
                                                    ;
                                                else vk = function(...)
                                                        local qk = {}; local Ik = 0X001; local gk = { [0X2] = pk, [1] = qk }; local Wk = 0X000; local fk = (o and o() or _ENV); local _k, xk =
                                                        Sq(...); _k = _k - 0X0001; for ak = 0, _k do
                                                            if Nk > ak then qk[ak] = xk[ak + 0X1]; else break; end
                                                            ;
                                                        end
                                                        ; local kk = ((fk == Y and ok or fk)); if not jk then xk = nil; elseif Kk then (qk)[Nk] = {
                                                                n = _k >= Nk and _k - Nk + 0X001 or 0,
                                                                i(xk, Nk + 0x1, _k + 0X0001) }; end
                                                        ; if kk ~= fk then
                                                            do
                                                                if p then (p)(vk, kk); else
                                                                    do _ENV = kk; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ; local mk, nk, bk, Mk = Q(function()
                                                            do
                                                                while true do
                                                                    local ak = uk[Ik]; local z0 = (ak[7]); Ik = Ik + 1; if z0 < 0X0000C then
                                                                        if z0 >= 0X6 then
                                                                            if z0 >= 0X09 then
                                                                                if not (z0 < 0Xa) then
                                                                                    if z0 ~= 11 then qk[ak[0x0006]] = qk
                                                                                        [ak[1]] + qk[ak[3]]; else (qk)[ak[0X6]] =
                                                                                        qk[ak[0X01]] < qk[ak[0X3]]; end
                                                                                    ;
                                                                                else end
                                                                                ;
                                                                            else
                                                                                if z0 < 0X007 then
                                                                                    local C0 = ak[0X00006]; local r0 = qk
                                                                                    [C0 + 0X00001]; local R0 = (qk[C0]); local B0 =
                                                                                    qk[C0 + 2]; do (qk)[C0] = T(function()
                                                                                            do
                                                                                                for c0 = R0, r0, B0 do (s)(
                                                                                                    true, c0); end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end); end
                                                                                    ; Ik = ak[1];
                                                                                else
                                                                                    if z0 ~= 8 then
                                                                                        qk[0X00000] = kk[ak[5]]; Ik = Ik +
                                                                                        1; Ik = Ik + 0X1; ak = uk[Ik]; Ik =
                                                                                        Ik + 1; qk[0x0] = qk[0][ak[0x4]]; Ik =
                                                                                        Ik + 1; Ik = Ik + 0X1; do Ik = Ik +
                                                                                            0x1; end
                                                                                        ; Wk = 0X00; qk[Wk] = qk[Wk](); ak =
                                                                                        uk[Ik]; Ik = Ik + 1; if not (not qk[0X0000]) then else Ik =
                                                                                            ak[1]; end
                                                                                        ;
                                                                                    else
                                                                                        local R0 = qk[ak[1]]; local C0 =
                                                                                        ak[6]; (qk)[C0 + 0x1] = R0; do qk[C0] =
                                                                                            R0[ak[0X4]]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if z0 >= 0X0003 then
                                                                                    if not (z0 < 0X4) then
                                                                                        if z0 ~= 0x05 then
                                                                                            qk[0X000] = ak[5]; local r0 = 2; ak =
                                                                                            uk[Ik]; Ik = Ik + 1; qk[0X1] =
                                                                                            kk[ak[5]]; Ik = Ik + 0X1; Ik =
                                                                                            Ik + 0X00001; do ak = uk[Ik]; end
                                                                                            ; do Ik = Ik + 0X00001; end
                                                                                            ; do qk[0x02] = kk[ak[5]]; end
                                                                                            ; Ik = Ik + 0X0001; Ik = Ik +
                                                                                            1; do ak = uk[Ik]; end
                                                                                            ; local R0 = (qk[2]); Ik = Ik +
                                                                                            0X1; local C0 = 0X2; (qk)[C0 + 0X001] =
                                                                                            R0; (qk)[C0] = R0
                                                                                            [ak[0X00004]]; Ik = Ik + 0X1; C0 = 0X2; local B0 = 0X0; if r0 ~= 0X0000 then Wk =
                                                                                                C0 + r0 - 1; end
                                                                                            ; local c0, Q0 = nil, nil; do
                                                                                                if r0 == 0x0001 then c0, Q0 =
                                                                                                    Sq(qk[C0]()); else c0, Q0 =
                                                                                                    Sq(qk[C0](i(qk,
                                                                                                        C0 + 0X1, Wk))); end
                                                                                                ;
                                                                                            end
                                                                                            ; do
                                                                                                if B0 == 1 then
                                                                                                    do Wk = C0 - 1; end
                                                                                                    ;
                                                                                                else
                                                                                                    if B0 == 0X0000 then
                                                                                                        c0 = c0 + C0 -
                                                                                                        0x00001; do Wk =
                                                                                                            c0; end
                                                                                                        ;
                                                                                                    else
                                                                                                        c0 = C0 + B0 - 2; Wk =
                                                                                                        c0 + 1;
                                                                                                    end
                                                                                                    ; local H0 = 0; for Z0 = C0, c0 do
                                                                                                        do H0 = H0 + 1; end
                                                                                                        ; do (qk)[Z0] =
                                                                                                            Q0[H0]; end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ; Ik = Ik + 0X01; C0 = 0X1; do r0 = 0X00000; end
                                                                                            ; B0 = 0x04; if r0 == 0X0 then else Wk =
                                                                                                C0 + r0 - 0x001; end
                                                                                            ; do c0, Q0 = nil; end
                                                                                            ; if r0 ~= 1 then c0, Q0 = Sq(
                                                                                                qk[C0](i(qk, C0 + 1, Wk))); else c0, Q0 =
                                                                                                Sq(qk[C0]()); end
                                                                                            ; if B0 == 1 then Wk = C0 -
                                                                                                0X01; else
                                                                                                if B0 == 0 then
                                                                                                    c0 = c0 + C0 - 0X01; Wk =
                                                                                                    c0;
                                                                                                else
                                                                                                    do c0 = C0 + B0 - 2; end
                                                                                                    ; do Wk = c0 + 1; end
                                                                                                    ;
                                                                                                end
                                                                                                ; local H0 = (0X0); for Z0 = C0, c0 do
                                                                                                    H0 = H0 + 1; qk[Z0] =
                                                                                                    Q0[H0];
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ; ak = uk[Ik]; Ik = Ik + 0X1; C0 = 0X1; local S0 =
                                                                                            T(function(...)
                                                                                                (s)(); do
                                                                                                    for H0, Z0 in ... do (s)(
                                                                                                        true, H0, Z0); end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end); S0(qk[C0], qk[C0 + 1],
                                                                                                qk[C0 + 0X2]); Wk = C0; qk[C0] =
                                                                                            S0; Ik = ak[1];
                                                                                        else (qk)[ak[0X0006]] = {
                                                                                                i({}, 0x1, ak[1]) }; end
                                                                                        ;
                                                                                    else qk[ak[6]] = kk[ak[0X5]]; end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if z0 < 1 then
                                                                                            local C0 = Yk[0X0000]; qk[0] =
                                                                                            C0[0x1][C0[2]]; ak = uk[Ik]; local R0 = 0X00; Ik =
                                                                                            Ik + 0X1; local r0 = (qk[0X0]); qk[R0 + 1] =
                                                                                            r0; do (qk)[R0] = r0
                                                                                                [ak[0x4]]; end
                                                                                            ; ak = uk[Ik]; Ik = Ik + 1; qk[0X02] =
                                                                                            ak[0X5]; Ik = Ik + 0x1; R0 = 0X0; qk[R0] =
                                                                                            qk[R0](qk[R0 + 0x01],
                                                                                                qk[R0 + 0X0002]); Wk = R0; Ik =
                                                                                            Ik + 1; do Ik = Ik + 1; end
                                                                                            ; do ak = uk[Ik]; end
                                                                                            ; Ik = Ik + 1; do
                                                                                                if not (not qk[0X0]) then else Ik =
                                                                                                    ak[1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            if z0 == 2 then
                                                                                                local C0 = (ak[6]); local R0, r0, B0 =
                                                                                                qk[C0](); do
                                                                                                    if not (R0) then else
                                                                                                        qk[C0 + 1] = r0; qk[C0 + 2] =
                                                                                                        B0; Ik = ak[1];
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                do
                                                                                                    if not qk[ak[0X06]] then Ik =
                                                                                                        ak[0X1]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if not (z0 >= 18) then
                                                                            do
                                                                                if z0 < 0Xf then
                                                                                    if not (z0 >= 13) then
                                                                                        if not (qk[ak[1]] <= qk[ak[3]]) then
                                                                                            do Ik = ak[6]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        if z0 ~= 14 then
                                                                                            for C0 = ak[6], ak[0X001] do qk[C0] = nil; end
                                                                                            ;
                                                                                        else
                                                                                            (qk)[4] = kk[ak[0X5]]; do Ik =
                                                                                                Ik + 1; end
                                                                                            ; local C0 = 5; local r0 = (2); Ik =
                                                                                            Ik + 0X0001; do ak = uk[Ik]; end
                                                                                            ; Ik = Ik + 0X1; local R0 = (qk[3]); (qk)[C0 + 1] =
                                                                                            R0; qk[C0] = R0[ak[0x00004]]; Ik =
                                                                                            Ik + 0X01; C0 = 0X05; local B0 = 0; do
                                                                                                if r0 ~= 0X000 then Wk =
                                                                                                    C0 + r0 - 1; end
                                                                                                ;
                                                                                            end
                                                                                            ; local c0, Q0 = nil, nil; if r0 ~= 1 then c0, Q0 =
                                                                                                Sq(qk[C0](i(qk, C0 + 0X1,
                                                                                                    Wk))); else c0, Q0 =
                                                                                                Sq(qk[C0]()); end
                                                                                            ; if B0 == 0x1 then Wk = C0 -
                                                                                                0X1; else
                                                                                                do
                                                                                                    if B0 ~= 0X0 then
                                                                                                        c0 = C0 + B0 - 2; Wk =
                                                                                                        c0 + 1;
                                                                                                    else
                                                                                                        c0 = c0 + C0 - 1; Wk =
                                                                                                        c0;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ; local H0 = 0X0; for Z0 = C0, c0 do
                                                                                                    H0 = H0 + 0X0001; qk[Z0] =
                                                                                                    Q0[H0];
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ; Ik = Ik + 0X001; Ik = Ik +
                                                                                            1; Ik = Ik + 1; C0 = 0X004; r0 = 0X0; do B0 = 4; end
                                                                                            ; if r0 ~= 0 then Wk = C0 +
                                                                                                r0 - 0x1; end
                                                                                            ; c0, Q0 = nil; if r0 == 0X00001 then c0, Q0 =
                                                                                                Sq(qk[C0]()); else c0, Q0 =
                                                                                                Sq(qk[C0](i(qk,
                                                                                                    C0 + 0x00001, Wk))); end
                                                                                            ; if B0 == 1 then
                                                                                                do Wk = C0 - 0X1; end
                                                                                                ;
                                                                                            else
                                                                                                if B0 ~= 0 then
                                                                                                    do c0 = C0 + B0 - 2; end
                                                                                                    ; Wk = c0 + 1;
                                                                                                else
                                                                                                    c0 = c0 + C0 - 0x1; Wk =
                                                                                                    c0;
                                                                                                end
                                                                                                ; local H0 = (0X0); for Z0 = C0, c0 do
                                                                                                    H0 = H0 + 1; (qk)[Z0] =
                                                                                                    Q0[H0];
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ; ak = uk[Ik]; Ik = Ik + 1; C0 = 0x4; local S0 = (T(function(...)
                                                                                                s(); for H0, Z0 in ... do (s)(
                                                                                                    true, H0, Z0); end
                                                                                                ;
                                                                                            end)); S0(qk[C0], qk[C0 + 0X1],
                                                                                                qk[C0 + 2]); do Wk = C0; end
                                                                                            ; qk[C0] = S0; Ik = ak[1];
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 >= 16 then
                                                                                        do
                                                                                            if z0 ~= 17 then Ik = ak
                                                                                                [0X1]; else qk[ak[6]] = -
                                                                                                qk[ak[1]]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        local C0, R0 = ak[0X1], nil; local r0 =
                                                                                        C0[1]; local B0 = #r0; if not (B0 > 0) then else
                                                                                            R0 = {}; for c0 = 0x1, B0 do
                                                                                                local Q0 = r0[c0]; if Q0[1] == 0X0 then R0[c0 - 1] = {
                                                                                                        qk, Q0[0x2] }; else (R0)[c0 - 1] =
                                                                                                    Yk[Q0[2]]; end
                                                                                                ;
                                                                                            end
                                                                                            ; (h)(Uk, R0);
                                                                                        end
                                                                                        ; do qk[ak[6]] = Pq(C0, R0, kk); end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if z0 < 21 then
                                                                                do
                                                                                    if not (z0 < 19) then
                                                                                        if z0 ~= 20 then
                                                                                            do qk[7] = qk[0X006]
                                                                                                [ak[0X0004]]; end
                                                                                            ; Ik = Ik + 1; Ik = Ik + 0X1; ak =
                                                                                            uk[Ik]; Ik = Ik + 1; do
                                                                                                if qk[0x00007] ~= qk[0] then Ik =
                                                                                                    ak[6]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else (qk)[ak[6]] = ak[0X005]; end
                                                                                        ;
                                                                                    else
                                                                                        do qk[7] = kk[ak[0x5]]; end
                                                                                        ; Ik = Ik + 1; Ik = Ik + 1; local C0 = 0X7; ak =
                                                                                        uk[Ik]; Ik = Ik + 1; local R0 = (qk[0X7]); qk[C0 + 0X1] =
                                                                                        R0; (qk)[C0] = R0[ak[4]]; ak = uk
                                                                                        [Ik]; Ik = Ik + 0x0001; (qk)[0X9] =
                                                                                        ak[0X00005]; Ik = Ik + 1; do C0 = 7; end
                                                                                        ; do qk[C0] = qk[C0](qk[C0 + 1],
                                                                                                qk[C0 + 2]); end
                                                                                        ; Wk = C0; Ik = Ik + 1; Ik = Ik +
                                                                                        0X1; ak = uk[Ik]; Ik = Ik + 0x1; C0 = 0X7; R0 =
                                                                                        qk[0x7]; qk[C0 + 0X01] = R0; qk[C0] =
                                                                                        R0[ak[4]]; ak = uk[Ik]; do Ik =
                                                                                            Ik + 0X1; end
                                                                                        ; do qk[0X9] = ak[0X005]; end
                                                                                        ; Ik = Ik + 1; do C0 = 7; end
                                                                                        ; do (qk)[C0] = qk[C0](
                                                                                            qk[C0 + 0X1], qk[C0 + 2]); end
                                                                                        ; Wk = C0; do Ik = Ik + 1; end
                                                                                        ; Ik = Ik + 0X1; ak = uk[Ik]; Ik =
                                                                                        Ik + 0X001; (qk)[0X00007] = qk
                                                                                        [0X7][ak[0X4]]; do ak = uk[Ik]; end
                                                                                        ; Ik = Ik + 0X1; C0 = 0x7; R0 =
                                                                                        qk[7]; do (qk)[C0 + 0X1] = R0; end
                                                                                        ; (qk)[C0] = R0[ak[0x004]]; Ik =
                                                                                        Ik + 1; qk[0X9] = qk[0X6]; Ik =
                                                                                        Ik + 1; C0 = 0X7; qk[C0](
                                                                                        qk[C0 + 1], qk[C0 + 2]); Wk = C0 -
                                                                                        0X1; Ik = Ik + 0x01; Ik = Ik + 1; do ak =
                                                                                            uk[Ik]; end
                                                                                        ; Ik = Ik + 0X001; Ik = ak[1];
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if z0 >= 22 then
                                                                                    if z0 == 23 then
                                                                                        qk[4] = qk[3][ak[0x4]]; Ik = Ik +
                                                                                        1; Ik = Ik + 0X01; ak = uk[Ik]; do Ik =
                                                                                            Ik + 1; end
                                                                                        ; if qk[4] == ak[0X004] then else Ik =
                                                                                            ak[6]; end
                                                                                        ;
                                                                                    else
                                                                                        repeat
                                                                                            local C0, R0 = Uk, qk; local r0 = ({}); do
                                                                                                for B0, c0 in X, C0 do
                                                                                                    for Q0, S0 in X, c0 do
                                                                                                        if S0[0X1] == R0 and S0[2] >= 0 then
                                                                                                            local H0 = S0
                                                                                                            [2]; if not r0[H0] then r0[H0] = {
                                                                                                                    R0[H0] }; end
                                                                                                            ; S0[1] = r0
                                                                                                            [H0]; S0[0X2] = 1;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        until true
                                                                                        ; do return; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    local C0 = ak[0X6]; local R0 = (ak[3] - 1) *
                                                                                    0X000032; local r0 = qk[C0]; for B0 = 1, ak[0X1] do (r0)[R0 + B0] =
                                                                                        qk[C0 + B0]; end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end); if mk then
                                                            if nk then
                                                                if Mk ~= 1 then return qk[bk](i(qk, bk + 1, Wk)); else return
                                                                    qk[bk](); end
                                                                ;
                                                            elseif not (bk) then else
                                                                do return i(qk, bk, Mk); end
                                                                ;
                                                            end
                                                            ;
                                                        else
                                                            if S(nk) == 's\116r\105n\103' then
                                                                if P(nk, "att\101\109\112\116 to\032\121i\101ld\032\097\099ros\115\032\109e\116\097m\101\116h\111\100/\067%-ca\108\108\032bounda\114\121") then return
                                                                    s(); end
                                                                ; if P(nk, '^\046-\058%\100+: ') then (Z)(
                                                                    '\076ur\097p\104 \083\099\114ipt:' ..
                                                                    (Ok[Ik - 0x00001] or "\040\105n\116\101\114\110a\108\041") ..
                                                                    ': ' .. H(nk), 0); else Z(nk, 0); end
                                                                ;
                                                            else (Z)(nk, 0); end
                                                            ;
                                                        end
                                                        ;
                                                    end; end
                                                ;
                                            end
                                            ;
                                        else
                                            do
                                                if tk < 15 then
                                                    do vk = function(...)
                                                            local Ik, qk = 1, {}; local gk = { [0X2] = pk, [1] = qk }; local fk = (o and o() or _ENV); local Wk, kk =
                                                            0, ((fk == Y and ok or fk)); local _k, xk = Sq(...); do _k =
                                                                _k - 0x1; end
                                                            ; for ak = 0X0, _k do
                                                                if Nk > ak then (qk)[ak] = xk[ak + 1]; else break; end
                                                                ;
                                                            end
                                                            ; do
                                                                if not jk then xk = nil; elseif not (Kk) then else
                                                                    do qk[Nk] = { n = _k >= Nk and _k - Nk + 0x1 or
                                                                        0X0000, i(xk, Nk + 0X01, _k + 1) }; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; do
                                                                if kk == fk then else
                                                                    if p then p(vk, kk); else _ENV = kk; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; local mk, nk, bk, Mk = Q(function()
                                                                do
                                                                    while true do
                                                                        local ak = uk[Ik]; local z0 = ak[0x7]; Ik = Ik +
                                                                        1; if z0 >= 0X9 then
                                                                            if not (z0 >= 13) then
                                                                                if z0 >= 0X00B then
                                                                                    if z0 == 12 then qk[ak[6]] = gk
                                                                                        [ak[1]]; else qk[ak[6]] = {
                                                                                            i({}, 1, ak[1]) }; end
                                                                                    ;
                                                                                else
                                                                                    if z0 == 10 then (qk)[ak[6]] = q(
                                                                                        qk[ak[1]], qk[ak[0X3]]); else
                                                                                        (qk)[0X1] = kk[ak[5]]; Ik = Ik +
                                                                                        1; do Ik = Ik + 1; end
                                                                                        ; local C0 = 1; ak = uk[Ik]; Ik =
                                                                                        Ik + 1; local R0 = qk[0X00001]; do qk[C0 + 0x1] =
                                                                                            R0; end
                                                                                        ; do qk[C0] = R0[ak[4]]; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 1; do (qk)[0X0003] =
                                                                                            ak[5]; end
                                                                                        ; do Ik = Ik + 1; end
                                                                                        ; do C0 = 1; end
                                                                                        ; (qk)[C0] = qk[C0](qk[C0 + 1],
                                                                                            qk[C0 + 0X0002]); Wk = C0; ak =
                                                                                        uk[Ik]; do Ik = Ik + 0x1; end
                                                                                        ; C0 = 0X1; do R0 = qk[0X1]; end
                                                                                        ; (qk)[C0 + 1] = R0; do (qk)[C0] =
                                                                                            R0[ak[0X004]]; end
                                                                                        ; do ak = uk[Ik]; end
                                                                                        ; Ik = Ik + 1; qk[0x3] = ak[0x5]; Ik =
                                                                                        Ik + 0X1; C0 = 1; (qk)[C0] = qk
                                                                                        [C0](qk[C0 + 1], qk[C0 + 2]); Wk =
                                                                                        C0; ak = uk[Ik]; Ik = Ik + 1; do C0 = 1; end
                                                                                        ; R0 = qk[1]; do (qk)[C0 + 1] =
                                                                                            R0; end
                                                                                        ; qk[C0] = R0[ak[0X004]]; ak = uk
                                                                                        [Ik]; do Ik = Ik + 1; end
                                                                                        ; qk[3] = ak[0X005]; Ik = Ik + 1; C0 = 0X1; qk[C0] =
                                                                                        qk[C0](qk[C0 + 1], qk[C0 + 0X2]); Wk =
                                                                                        C0; do ak = uk[Ik]; end
                                                                                        ; do Ik = Ik + 0X1; end
                                                                                        ; do C0 = 0X1; end
                                                                                        ; R0 = qk[1]; qk[C0 + 0X1] = R0; (qk)[C0] =
                                                                                        R0[ak[4]]; ak = uk[Ik]; Ik = Ik +
                                                                                        1; do (qk)[0X3] = ak[1]; end
                                                                                        ; Ik = Ik + 1; (qk)[4] = qk
                                                                                        [0x00000]; Ik = Ik + 1; C0 = 1; Wk =
                                                                                        C0 + 4 - 1; (qk[C0])(i(qk, C0 +
                                                                                        0X1, Wk)); Wk = C0 - 1; Ik = Ik +
                                                                                        1; do Ik = Ik + 0X1; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 0x0001; Ik =
                                                                                        ak[0X1];
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (z0 >= 0XF) then
                                                                                    if z0 ~= 0xe then
                                                                                        for C0 = ak[6], ak[0x1] do qk[C0] = nil; end
                                                                                        ;
                                                                                    else (qk)[ak[6]] = kk[ak[5]]; end
                                                                                    ;
                                                                                else
                                                                                    if z0 >= 16 then
                                                                                        if z0 ~= 17 then (qk)[ak[6]] = true; else
                                                                                            local C0, R0 = ak[0X1], (nil); local r0 = (C0[1]); local B0 = #
                                                                                            r0; if B0 > 0 then
                                                                                                R0 = {}; for c0 = 0x1, B0 do
                                                                                                    local Q0 = r0[c0]; if Q0[0X1] ~= 0X00 then (R0)[c0 - 0X00001] =
                                                                                                        Yk[Q0[2]]; else (R0)[c0 - 1] = {
                                                                                                            qk,
                                                                                                            Q0[0X0002] }; end
                                                                                                    ;
                                                                                                end
                                                                                                ; (h)(Uk, R0);
                                                                                            end
                                                                                            ; (qk)[ak[6]] = Pq(C0, R0, kk);
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do (qk)[1] = kk[ak[5]]; end
                                                                                        ; local R0, C0 = 0X2, (Yk[0]); Ik =
                                                                                        Ik + 1; qk[2] = C0[1][C0[2]]; ak =
                                                                                        uk[Ik]; Ik = Ik + 1; local r0 =
                                                                                        qk[0X2]; do qk[R0 + 0X001] = r0; end
                                                                                        ; qk[R0] = r0[ak[4]]; ak = uk
                                                                                        [Ik]; local B0 = 3; Ik = Ik + 0X1; (qk)[0X00004] =
                                                                                        ak[0X5]; Ik = Ik + 0X1; do R0 = 2; end
                                                                                        ; local c0 = (0); if B0 ~= 0 then Wk =
                                                                                            R0 + B0 - 0X1; end
                                                                                        ; local Q0, S0 = nil, nil; if B0 == 1 then
                                                                                            do Q0, S0 = Sq(qk[R0]()); end
                                                                                            ;
                                                                                        else
                                                                                            do Q0, S0 = Sq(qk[R0](i(qk,
                                                                                                    R0 + 0X1, Wk))); end
                                                                                            ;
                                                                                        end
                                                                                        ; if c0 == 1 then Wk = R0 - 0X1; else
                                                                                            if c0 == 0x0 then
                                                                                                Q0 = Q0 + R0 - 0x1; Wk =
                                                                                                Q0;
                                                                                            else
                                                                                                Q0 = R0 + c0 - 0X002; do Wk =
                                                                                                    Q0 + 0X01; end
                                                                                                ;
                                                                                            end
                                                                                            ; local H0 = 0X0; for Z0 = R0, Q0 do
                                                                                                H0 = H0 + 1; qk[Z0] = S0
                                                                                                [H0];
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ; Ik = Ik + 0X0001; R0 = 1; qk
                                                                                            [R0](i(qk, R0 + 0x1, Wk)); Wk =
                                                                                        R0 - 0X1; Ik = Ik + 0X1; do Ik =
                                                                                            Ik + 0X001; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 1; Ik =
                                                                                        ak[1];
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if z0 >= 0X4 then
                                                                                if z0 < 6 then
                                                                                    if z0 ~= 5 then (qk)[ak[0x6]] = ak
                                                                                        [5]; else
                                                                                        repeat
                                                                                            local C0, R0, r0 = Uk, qk,
                                                                                                ({}); for B0, c0 in X, C0 do
                                                                                                do
                                                                                                    for Q0, S0 in X, c0 do
                                                                                                        if not (S0[0X1] == R0 and S0[0X02] >= 0) then else
                                                                                                            local H0 = S0
                                                                                                            [2]; do
                                                                                                                if not r0[H0] then (r0)[H0] = {
                                                                                                                        R0[H0] }; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ; (S0)[0X1] =
                                                                                                            r0[H0]; (S0)[2] = 1;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        until true
                                                                                        ; do return; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if z0 < 0x7 then
                                                                                            local C0 = (Yk[1]); (qk)[0] =
                                                                                            C0[0X1][C0[2]]; Ik = Ik + 1; Ik =
                                                                                            Ik + 1; Ik = Ik + 0X1; Wk = 0; qk[Wk] =
                                                                                            qk[Wk](); do Ik = Ik + 0X1; end
                                                                                            ; Ik = Ik + 1; ak = uk[Ik]; do Ik =
                                                                                                Ik + 1; end
                                                                                            ; if not qk[0] then Ik = ak
                                                                                                [1]; end
                                                                                            ;
                                                                                        else
                                                                                            if z0 == 8 then Ik = ak[1]; else
                                                                                                local C0 = Yk[0]; local R0 = 0X0; qk[0X00] =
                                                                                                C0[0X1][C0[0x2]]; Ik = Ik +
                                                                                                0X01; Ik = Ik + 0X1; do ak =
                                                                                                    uk[Ik]; end
                                                                                                ; do Ik = Ik + 0x1; end
                                                                                                ; local r0 = qk[0X0]; qk[R0 + 0X0001] =
                                                                                                r0; qk[R0] = r0[ak[0X4]]; ak =
                                                                                                uk[Ik]; do Ik = Ik + 1; end
                                                                                                ; do (qk)[2] = ak
                                                                                                    [0x0005]; end
                                                                                                ; Ik = Ik + 0X1; R0 = 0X0; (qk)[R0] =
                                                                                                qk[R0](qk[R0 + 1],
                                                                                                    qk[R0 + 0x2]); do Wk =
                                                                                                    R0; end
                                                                                                ; do ak = uk[Ik]; end
                                                                                                ; Ik = Ik + 1; if not (not qk[0]) then else Ik =
                                                                                                    ak[0X1]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            else
                                                                                if not (z0 < 2) then
                                                                                    if z0 ~= 0X3 then else (qk)[ak[0x6]] =
                                                                                        qk[ak[0X1]] <= qk[ak[3]]; end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if z0 ~= 0X1 then
                                                                                            (qk)[0X00] = kk[ak[0X5]]; Ik =
                                                                                            Ik + 0X1; do Ik = Ik + 1; end
                                                                                            ; ak = uk[Ik]; do Ik = Ik +
                                                                                                0x00001; end
                                                                                            ; qk[0] = qk[0X000][ak[0X4]]; do Ik =
                                                                                                Ik + 0X01; end
                                                                                            ; Ik = Ik + 1; do Ik = Ik + 1; end
                                                                                            ; Wk = 0X0; (qk)[Wk] = qk
                                                                                            [Wk](); Ik = Ik + 0x1; do Ik =
                                                                                                Ik + 0X1; end
                                                                                            ; ak = uk[Ik]; Ik = Ik + 1; if not (not qk[0x0]) then else Ik =
                                                                                                ak[1]; end
                                                                                            ;
                                                                                        else qk[ak[6]] = not qk
                                                                                            [ak[0X0001]]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end); do
                                                                if not (mk) then
                                                                    if S(nk) == "st\114\105ng" then
                                                                        if not (P(nk, "\097t\116e\109pt \116\111 \121\105\101\108d across \109\101tam\101\116h\111\100\047\067%-\099\097l\108 \098oun\100ary")) then else
                                                                            do return s(); end
                                                                            ;
                                                                        end
                                                                        ; if not (P(nk, "\094.\045:\037d+\058\032")) then (Z)(
                                                                            nk, 0); else (Z)(
                                                                            'Lu\114\097p\104 S\099\114\105\112\116:' ..
                                                                            (Ok[Ik - 0X1] or '(int\101\114\110\097l\041') ..
                                                                            "\058\032" .. H(nk), 0X0); end
                                                                        ;
                                                                    else (Z)(nk, 0); end
                                                                    ;
                                                                else
                                                                    if nk then
                                                                        do
                                                                            if Mk ~= 1 then return qk[bk](i(qk, bk + 0x1,
                                                                                    Wk)); else return qk[bk](); end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    elseif bk then return i(qk, bk, Mk); end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end; end
                                                    ;
                                                else
                                                    if tk ~= 0X000010 then vk = function(...)
                                                            local qk = ({}); local Ik = (1); local fk = ((o and o() or _ENV)); local gk = {
                                                                [1] = qk, [0X2] = pk }; local _k, xk = Sq(...); local kk = (fk == Y and ok or fk); _k =
                                                            _k - 0X1; for ak = 0X0, _k do
                                                                do
                                                                    if Nk > ak then (qk)[ak] = xk[ak + 1]; else
                                                                        do break; end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ; do
                                                                if not jk then xk = nil; elseif not (Kk) then else qk[Nk] = {
                                                                        n = _k >= Nk and _k - Nk + 1 or 0,
                                                                        i(xk, Nk + 1, _k + 1) }; end
                                                                ;
                                                            end
                                                            ; local Wk = 0; if kk == fk then else
                                                                if not (p) then _ENV = kk; else p(vk, kk); end
                                                                ;
                                                            end
                                                            ; local mk, nk, bk, Mk = Q(function()
                                                                while true do
                                                                    local ak = (uk[Ik]); local z0 = (ak[0X7]); Ik = Ik +
                                                                    0x0001; if not (z0 < 0X0000a) then
                                                                        if z0 >= 0X0000f then
                                                                            do
                                                                                if not (z0 < 18) then
                                                                                    if z0 < 19 then
                                                                                        local C0 = Yk[0X0]; qk[0x5] = C0
                                                                                        [0X00001][C0[0x002]]; Ik = Ik + 1; Ik =
                                                                                        Ik + 0X1; local R0 = (5); do Ik =
                                                                                            Ik + 1; end
                                                                                        ; (qk)[0X6] = qk[2]; Ik = Ik + 1; (qk[R0])(
                                                                                        qk[R0 + 1]); Wk = R0 - 1; do Ik =
                                                                                            Ik + 1; end
                                                                                        ; Ik = Ik + 1; ak = uk[Ik]; Ik =
                                                                                        Ik + 0X01; Ik = ak[0x001];
                                                                                    else
                                                                                        if z0 ~= 20 then
                                                                                            if qk[ak[0X01]] ~= qk[ak[3]] then
                                                                                                do Ik = ak[0x6]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else
                                                                                            local C0 = (ak[0X6]); local R0 = (T(function(...)
                                                                                                s(); for r0, B0, c0, Q0, S0, H0, Z0, F0, e0, E0 in ... do (s)(
                                                                                                    true,
                                                                                                        { r0, B0, c0, Q0,
                                                                                                            S0, H0, Z0,
                                                                                                            F0, e0, E0 }); end
                                                                                                ;
                                                                                            end)); R0(qk[C0], qk[C0 + 0X1],
                                                                                                qk[C0 + 0x2]); Wk = C0; (qk)[C0] =
                                                                                            R0; Ik = ak[0X1];
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 >= 0X010 then
                                                                                        if z0 == 17 then
                                                                                            local C0, R0 = 1, (qk[0]); (qk)[C0 + 0X0001] =
                                                                                            R0; (qk)[C0] = R0[ak[4]]; ak =
                                                                                            uk[Ik]; Ik = Ik + 0X001; qk[3] =
                                                                                            ak[5]; Ik = Ik + 1; C0 = 0X1; (qk)[C0] =
                                                                                            qk[C0](qk[C0 + 1], qk[C0 + 2]); Wk =
                                                                                            C0; do ak = uk[Ik]; end
                                                                                            ; Ik = Ik + 0X1; if not (not qk[1]) then else
                                                                                                do Ik = ak[0X01]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else Ik = ak[0x1]; end
                                                                                        ;
                                                                                    else
                                                                                        local R0 = qk[0X00002]; local C0 = (0X5); (qk)[C0 + 1] =
                                                                                        R0; do qk[C0] = R0[ak[0x4]]; end
                                                                                        ; ak = uk[Ik]; Ik = Ik + 0x00001; qk[0X007] =
                                                                                        ak[5]; Ik = Ik + 0X1; C0 = 5; do qk[C0] =
                                                                                            qk[C0](qk[C0 + 1], qk[C0 + 2]); end
                                                                                        ; do Wk = C0; end
                                                                                        ; Ik = Ik + 0x1; Ik = Ik + 0X0001; ak =
                                                                                        uk[Ik]; Ik = Ik + 0X1; if not qk[0X5] then
                                                                                            do Ik = ak[0X0001]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            if not (z0 < 12) then
                                                                                if not (z0 < 13) then
                                                                                    do
                                                                                        if z0 ~= 0XE then
                                                                                            do qk[0X1][ak[0X5]] = ak
                                                                                                [0X4]; end
                                                                                            ; local C0 = 2; ak = uk[Ik]; Ik =
                                                                                            Ik + 1; local R0 = qk
                                                                                            [0X0001]; qk[C0 + 0x01] = R0; qk[C0] =
                                                                                            R0[ak[0X4]]; ak = uk[Ik]; Ik =
                                                                                            Ik + 0X1; (qk)[4] = ak[5]; Ik =
                                                                                            Ik + 0X1; C0 = 0X00002; (qk)[C0] =
                                                                                            qk[C0](qk[C0 + 0X01],
                                                                                                qk[C0 + 2]); Wk = C0; Ik =
                                                                                            Ik + 0X1; Ik = Ik + 1; ak =
                                                                                            uk[Ik]; do Ik = Ik + 1; end
                                                                                            ; C0 = 0X3; R0 = qk[1]; qk[C0 + 1] =
                                                                                            R0; do (qk)[C0] = R0[ak[4]]; end
                                                                                            ; do ak = uk[Ik]; end
                                                                                            ; do Ik = Ik + 0X01; end
                                                                                            ; qk[5] = ak[5]; do Ik = Ik +
                                                                                                1; end
                                                                                            ; C0 = 3; do (qk)[C0] = qk
                                                                                                [C0](qk[C0 + 0X0001],
                                                                                                    qk[C0 + 2]); end
                                                                                            ; Wk = C0; do Ik = Ik + 1; end
                                                                                            ; do Ik = Ik + 1; end
                                                                                            ; ak = uk[Ik]; Ik = Ik + 0x1; do C0 = 0X004; end
                                                                                            ; R0 = qk[0X1]; do qk[C0 + 1] =
                                                                                                R0; end
                                                                                            ; do (qk)[C0] = R0[ak[4]]; end
                                                                                            ; ak = uk[Ik]; Ik = Ik + 1; qk[6] =
                                                                                            ak[0X5]; Ik = Ik + 1; C0 = 0X4; do qk[C0] =
                                                                                                qk[C0](qk[C0 + 1],
                                                                                                    qk[C0 + 0X2]); end
                                                                                            ; Wk = C0; do Ik = Ik + 1; end
                                                                                            ; Ik = Ik + 0X1; ak = uk[Ik]; do Ik =
                                                                                                Ik + 0X1; end
                                                                                            ; do
                                                                                                if not (not qk[0X2]) then else Ik =
                                                                                                    ak[0x00001]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else (kk)[ak[0X0005]] = qk[ak[6]]; end
                                                                                ;
                                                                            else
                                                                                do
                                                                                    if z0 ~= 0Xb then
                                                                                        do
                                                                                            for C0 = ak[6], ak[1] do (qk)[C0] = nil; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do (qk)[ak[0X6]] = {
                                                                                                i({}, 0X1, ak[0X1]) }; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if not (z0 < 0X5) then
                                                                            if z0 < 0X7 then
                                                                                if z0 ~= 0x6 then
                                                                                    do (qk)[ak[0X006]] = qk[ak[1]] >
                                                                                        qk[ak[0x003]]; end
                                                                                    ;
                                                                                else (qk)[ak[0X6]] = kk[ak[0X5]]; end
                                                                                ;
                                                                            else
                                                                                if z0 < 0X8 then (qk)[ak[6]] = gk
                                                                                    [ak[0X1]]; else
                                                                                    if z0 == 9 then (gk)[ak[0x00001]] =
                                                                                        qk[ak[6]]; else
                                                                                        repeat
                                                                                            local C0, R0, r0 = Uk, qk, {}; for B0, c0 in X, C0 do
                                                                                                for Q0, S0 in X, c0 do
                                                                                                    if not (S0[1] == R0 and S0[2] >= 0x0) then else
                                                                                                        local H0 = (S0[0x2]); do
                                                                                                            if not r0[H0] then r0[H0] = {
                                                                                                                    R0[H0] }; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ; do (S0)[0X00001] =
                                                                                                            r0[H0]; end
                                                                                                        ; S0[2] = 1;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        until true
                                                                                        ; do return; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        else
                                                                            do
                                                                                if z0 < 2 then
                                                                                    if z0 == 0X1 then (qk)[ak[6]] = ak
                                                                                        [5]; else
                                                                                        local C0 = ak[0X06]; do
                                                                                            for R0 = C0, C0 + (ak[1] - 1) do (qk)[R0] =
                                                                                                xk[Nk + (R0 - C0) + 1]; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    do
                                                                                        if not (z0 < 0x3) then
                                                                                            if z0 == 0X00004 then
                                                                                                local C0 = ak[1]; local R0 = nil; local r0 = (C0[0X00001]); local B0 = #
                                                                                                r0; if not (B0 > 0x00) then else
                                                                                                    do R0 = {}; end
                                                                                                    ; do
                                                                                                        for c0 = 0X00001, B0 do
                                                                                                            local Q0 = r0
                                                                                                            [c0]; if Q0[0X01] ~= 0x0 then
                                                                                                                do (R0)[c0 - 1] =
                                                                                                                    Yk[Q0[2]]; end
                                                                                                                ;
                                                                                                            else (R0)[c0 - 0x1] = {
                                                                                                                    qk,
                                                                                                                    Q0[0x002] }; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ; h(Uk, R0);
                                                                                                end
                                                                                                ; (qk)[ak[0X6]] = Pq(C0,
                                                                                                    R0, kk);
                                                                                            else qk[ak[6]] = qk[ak[1]] ^
                                                                                                qk[ak[0X3]]; end
                                                                                            ;
                                                                                        else
                                                                                            local C0 = (ak[0x6]); local R0, r0, B0 =
                                                                                            qk[C0], qk[C0 + 0X01],
                                                                                                qk[C0 + 0X002]; do qk[C0] =
                                                                                                T(function()
                                                                                                    for c0 = R0, r0, B0 do
                                                                                                        s(true, c0); end
                                                                                                    ;
                                                                                                end); end
                                                                                            ; Ik = ak[0X1];
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end); do
                                                                if not (mk) then
                                                                    if S(nk) == "\115t\114i\110\103" then
                                                                        if P(nk, "\097t\116\101\109\112t\032t\111\032y\105e\108\100\032\097\099ros\115 me\116a\109et\104\111\100\047\067%-ca\108l\032bo\117\110\100\097\114y") then return
                                                                            s(); end
                                                                        ; if not (P(nk, '\094.-:%d+\058 ')) then Z(nk, 0); else
                                                                            Z(
                                                                            "\076u\114\097\112\104 Sc\114\105\112t\058" ..
                                                                            (Ok[Ik - 0x1] or '\040int\101r\110\097l)') ..
                                                                            ':\032' .. H(nk), 0); end
                                                                        ;
                                                                    else Z(nk, 0X0); end
                                                                    ;
                                                                else
                                                                    if nk then
                                                                        do
                                                                            if Mk == 0X1 then return qk[bk](); else return
                                                                                qk[bk](i(qk, bk + 1, Wk)); end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    elseif bk then return i(qk, bk, Mk); end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end; else
                                                        do vk = function(...)
                                                                local Ik, Wk, qk = 1, 0x0, {}; local gk = { [0X2] = pk,
                                                                    [1] = qk }; local fk = (o and o() or _ENV); local _k, xk =
                                                                Sq(...); local kk = ((fk == Y and ok or fk)); _k = _k -
                                                                0X1; do
                                                                    for ak = 0, _k do
                                                                        if not (Nk > ak) then break; else (qk)[ak] = xk
                                                                            [ak + 1]; end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ; if not jk then
                                                                    do xk = nil; end
                                                                    ;
                                                                elseif Kk then
                                                                    do (qk)[Nk] = { n = _k >= Nk and _k - Nk + 1 or 0,
                                                                            i(xk, Nk + 1, _k + 0X1) }; end
                                                                    ;
                                                                end
                                                                ; if kk ~= fk then
                                                                    do
                                                                        if p then p(vk, kk); else _ENV = kk; end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ; local mk, nk, bk, Mk = Q(function()
                                                                    do
                                                                        while true do
                                                                            local ak = (uk[Ik]); local z0 = ak[0x7]; Ik =
                                                                            Ik + 1; do
                                                                                if not (z0 >= 0X06) then
                                                                                    if not (z0 < 3) then
                                                                                        if not (z0 >= 4) then
                                                                                            do qk[ak[0X6]] = {
                                                                                                    i({}, 1, ak[1]) }; end
                                                                                            ;
                                                                                        else
                                                                                            if z0 ~= 0X005 then
                                                                                                for C0 = ak[0X6], ak[1] do qk[C0] = nil; end
                                                                                                ;
                                                                                            else
                                                                                                if qk[ak[0X1]] < qk[ak[3]] then
                                                                                                    do Ik = ak[0X6]; end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    else
                                                                                        do
                                                                                            if not (z0 < 1) then
                                                                                                do
                                                                                                    if z0 == 2 then
                                                                                                        local C0 = ak[1]; local r0, R0 =
                                                                                                        C0[1], (nil); local B0 = #
                                                                                                        r0; if B0 > 0 then
                                                                                                            R0 = {}; do
                                                                                                                for c0 = 1, B0 do
                                                                                                                    local Q0 =
                                                                                                                    r0[c0]; if Q0[1] ~= 0X0 then
                                                                                                                        do R0[c0 - 0x01] =
                                                                                                                            Yk[Q0[2]]; end
                                                                                                                        ;
                                                                                                                    else R0[c0 - 1] = {
                                                                                                                            qk,
                                                                                                                            Q0[0x2] }; end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ; (h)(Uk, R0);
                                                                                                        end
                                                                                                        ; do (qk)[ak[6]] =
                                                                                                            Pq(C0, R0, kk); end
                                                                                                        ;
                                                                                                    else (qk)[ak[0x6]] =
                                                                                                        k(qk[ak[0X001]]); end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            else
                                                                                                qk[0x1] = qk[0][ak[4]]; do Ik =
                                                                                                    Ik + 0X1; end
                                                                                                ; Ik = Ik + 0X1; ak = uk
                                                                                                [Ik]; local C0 = (0X2); do Ik =
                                                                                                    Ik + 0x1; end
                                                                                                ; local R0 = (qk[1]); qk[C0 + 1] =
                                                                                                R0; (qk)[C0] = R0[ak[4]]; ak =
                                                                                                uk[Ik]; Ik = Ik + 0X001; do (qk)[4] =
                                                                                                    ak[5]; end
                                                                                                ; ak = uk[Ik]; Ik = Ik +
                                                                                                0x1; qk[5] = ak[5]; Ik =
                                                                                                Ik + 0x01; C0 = 0X2; Wk =
                                                                                                C0 + 4 - 0X1; qk[C0] = qk
                                                                                                [C0](i(qk, C0 + 1, Wk)); do Wk =
                                                                                                    C0; end
                                                                                                ; do Ik = Ik + 1; end
                                                                                                ; Ik = Ik + 0x1; Ik = Ik +
                                                                                                1; (qk)[3] = qk[0X2]; ak =
                                                                                                uk[Ik]; Ik = Ik + 1; (qk[0])[ak[0X5]] =
                                                                                                qk[3]; Ik = Ik + 1; do
                                                                                                    repeat
                                                                                                        local r0, B0 = Uk,
                                                                                                            qk; local c0 = ({}); for Q0, S0 in X, r0 do
                                                                                                            do
                                                                                                                for H0, Z0 in X, S0 do
                                                                                                                    do
                                                                                                                        if not (Z0[1] == B0 and Z0[2] >= 0) then else
                                                                                                                            local F0 = (Z0[2]); if not (not c0[F0]) then else
                                                                                                                                do (c0)[F0] = {
                                                                                                                                        B0[F0] }; end
                                                                                                                                ;
                                                                                                                            end
                                                                                                                            ; (Z0)[0X1] =
                                                                                                                            c0[F0]; Z0[2] = 0X0001;
                                                                                                                        end
                                                                                                                        ;
                                                                                                                    end
                                                                                                                    ;
                                                                                                                end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    until true
                                                                                                    ;
                                                                                                end
                                                                                                ; return;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                else
                                                                                    if z0 < 9 then
                                                                                        if not (z0 < 0x7) then
                                                                                            if z0 == 0x00008 then else (qk)[ak[6]] =
                                                                                                ak[5]; end
                                                                                            ;
                                                                                        else Ik = ak[0X001]; end
                                                                                        ;
                                                                                    else
                                                                                        if not (z0 < 0XA) then
                                                                                            do
                                                                                                if z0 == 0X0B then
                                                                                                    local C0 = ak[0X6]; local R0, r0 =
                                                                                                    qk[C0](); do
                                                                                                        if not (R0) then else
                                                                                                            for B0 = 0X1, ak[0X00003] do (qk)[C0 + B0] =
                                                                                                                r0[B0]; end
                                                                                                            ; do Ik = ak
                                                                                                                [1]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                else qk[ak[0X6]] = kk
                                                                                                    [ak[5]]; end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        else qk[ak[0x6]] = qk[ak[0X01]] <=
                                                                                            qk[ak[0x3]]; end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end); do
                                                                    if mk then
                                                                        do
                                                                            if nk then
                                                                                if Mk ~= 1 then return qk[bk](i(qk, bk +
                                                                                    1, Wk)); else return qk[bk](); end
                                                                                ;
                                                                            elseif bk then return i(qk, bk, Mk); end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    else
                                                                        if S(nk) == "str\105\110\103" then
                                                                            do
                                                                                if not (P(nk, "\097t\116emp\116 to\032yi\101\108d \097c\114\111\115\115\032met\097met\104\111d/C%\045\099\097l\108 \098ou\110dar\121")) then else return
                                                                                    s(); end
                                                                                ;
                                                                            end
                                                                            ; if not (P(nk, '^.-\058\037d\043:\032')) then
                                                                                Z(nk, 0); else (Z)(
                                                                                '\076\117\114\097\112\104 \083cr\105pt\058' ..
                                                                                (Ok[Ik - 1] or "(\105nte\114\110\097\108\041") ..
                                                                                ': ' .. H(nk), 0); end
                                                                            ;
                                                                        else Z(nk, 0x0); end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end; end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    end
                                    ;
                                end
                                ; if not (p) then else (p)(vk, ok); end
                                ; return vk;
                            end;
                        else
                            if lk == 7.81723675E8 then
                                do hq = nil; end
                                ; if not (not Fk[9.44153235E8]) then lk = Fk[9.44153235E8]; else
                                    lk = 6.17004734E8; (Fk)[9.44153235E8] = lk;
                                end
                                ;
                            else
                                if lk == 6.17004734E8 then
                                    hq = function()
                                        local ok, pk = "\094X\062*a", nil; local qk = 1.56136545E9; while 0.9960402375139955 do
                                            if not (qk < 1.56136545E9) then
                                                do qk = 8.84115617E8; end
                                                ; ok = {};
                                            else
                                                pk = { nil, {}, kq, kq, nil, {}, nil, {}, kq }; break;
                                            end
                                            ;
                                        end
                                        ; (pk)[0x00e] = a(); local Nk = (0.8006297163327404); local dk = nil; local Gk = nil; do
                                            for fk = 2809.0, 4216.0, 1407.0 do
                                                if fk == 2809.0 then
                                                    do Gk = zq() - 0X144Ac; end
                                                    ;
                                                else
                                                    if fk == 4216.0 then
                                                        do dk = {}; end
                                                        ; do Nk = pk[8]; end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        end
                                        ; do
                                            for fk = oq, Gk do
                                                local kk = ('l\071\126'); local bk, Mk = 0.45863381303606865, (-96364822); local xk = (nil); local _k = nil; local nk = (true); local mk = true; for ak = 193.0, 2641.0, 2448.0 do
                                                    if ak > 193.0 then (Nk)[fk] = { [4] = bk, [0x0002] = nk, [5] = Mk,
                                                            [7] = _k, [1] = Mk == 1 and hq() or (xk - Mk) / 0X0008,
                                                            [3] = (kk - bk) / 0X0008, [Wq] = (mk - nk) / 0X0008 }; else
                                                        if ak < 2641.0 then
                                                            kk, _k, xk, mk = Bq(), Bq(), Bq(), Bq(); nk, bk, Mk =
                                                            mk % 0X0008, kk % 0X0008, xk % 0X0008;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        end
                                        ; local Kk, tk = 195515709, nil; local jk, Ok = '', nil; for fk = 1605.0, 141691.0, 7939.0 do
                                            do
                                                if fk == 9544.0 then
                                                    do (pk)[1] = dk; end
                                                    ; do
                                                        for fk = 0X00001, rq() do dk[fk] = { a(), rq() }; end
                                                        ;
                                                    end
                                                    ;
                                                elseif fk == 49239.0 then Kk = pk[6]; elseif fk == 1605.0 then
                                                    do (pk)[16] = zq(); end
                                                    ;
                                                elseif fk == 33361.0 then
                                                    do
                                                        for fk = 0x0, Ok - oq do jk[fk] = hq(); end
                                                        ;
                                                    end
                                                    ;
                                                else
                                                    if fk == 17483.0 then jk = pk[0X2]; elseif fk ~= 25422.0 then
                                                        if fk == 57178.0 then
                                                            tk = zq(); break;
                                                        elseif fk == 41300.0 then pk[Zk] = a(); end
                                                        ;
                                                    else
                                                        do Ok = zq() - 66945; end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        end
                                        ; local Yk, Uk = 0.104312396127611, (-0X380d49f0); for fk = 4424.0, 14539.0, 2023.0 do
                                            if fk < 12516.0 and fk > 8470.0 then Yk = {}; elseif fk < 14539.0 and fk > 10493.0 then (pk)[0X3] =
                                                rq(); elseif fk > 12516.0 then
                                                Uk = a(); do (pk)[5] = M(Uk, 0x01, 1) ~= 0; end
                                                ;
                                            else
                                                if fk > 4424.0 and fk < 8470.0 then (pk)[16] = zq(); elseif fk < 6447.0 then
                                                    do
                                                        for fk = 1, tk do
                                                            local xk = 0.6909823979031633; local kk = (true); local _k = (nil); for mk = 1286.0, 89834.0, 8352.0 do
                                                                if mk < 9638.0 then kk = zq(); elseif mk > 1286.0 and mk < 17990.0 then
                                                                    do _k = zq(); end
                                                                    ; xk = zq();
                                                                else
                                                                    if not (mk > 9638.0) then else
                                                                        for mk = kk, _k do
                                                                            do Kk[mk] = xk; end
                                                                            ;
                                                                        end
                                                                        ; break;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                else
                                                    if fk > 6447.0 and fk < 10493.0 then (pk)[12] = a(); end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        end
                                        ; for fk = 506.0, 76673.0, 2209.0 do
                                            if fk > 506.0 then
                                                (pk)[0x07] = rq(); break;
                                            else
                                                if fk < 2715.0 then pk[0X4] = M(Uk, 0X2, 1) ~= Kq; end
                                                ;
                                            end
                                            ;
                                        end
                                        ; do (pk)[9] = rq(); end
                                        ; local uk = (-1759787864); local Wk = 0.09880010632882996; local Ik, gk = nil,
                                            (1.454291803E9); local vk = 1366158191; while "\062S\044\048K" do
                                            do
                                                if gk < 7.53500692E8 and gk > 2.32241406E8 then
                                                    do gk = 7.53500692E8; end
                                                    ; for fk = 0X1, Gk do
                                                        local _k = (7.14584991E8); local kk = false; repeat
                                                            if _k > 7.14584991E8 then
                                                                for xk, mk in X, m do
                                                                    local nk = false; local bk = 0.037620465484766274; for Mk = 3781.0, 112755.0, 4502.0 do
                                                                        if Mk == 8283.0 then bk = kk[nk]; else
                                                                            if Mk == 3781.0 then nk = b[mk]; else
                                                                                if Mk == 12785.0 then
                                                                                    if bk == jq then
                                                                                        local Mk, ak = ok[kk[mk]], false; for z0 = 7192.0, 13299.0, 6107.0 do
                                                                                            do
                                                                                                if not (z0 > 7192.0) then ak =
                                                                                                    Yk[Mk]; elseif ak then
                                                                                                    local z0 = nil; for C0 = 5419.0, 63601.0, 7571.0 do
                                                                                                        if C0 > 5419.0 then
                                                                                                            do
                                                                                                                if not (C0 <= 12990.0) then
                                                                                                                    (z0)[#z0 + 1] = {
                                                                                                                        kk,
                                                                                                                        nk }; break;
                                                                                                                else z0 =
                                                                                                                    ak[vq]; end
                                                                                                                ;
                                                                                                            end
                                                                                                            ;
                                                                                                        else
                                                                                                            do kk[nk] =
                                                                                                                ak[0X1]; end
                                                                                                            ;
                                                                                                        end
                                                                                                        ;
                                                                                                    end
                                                                                                    ;
                                                                                                end
                                                                                                ;
                                                                                            end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    elseif bk == 0 then kk[mk] = fk +
                                                                                        kk[mk] + 1; elseif bk == 0x2 then kk[mk] =
                                                                                        jk[kk[mk]]; else
                                                                                        if bk ~= 0x004 then else kk[mk] =
                                                                                            J(kk[mk]); end
                                                                                        ;
                                                                                    end
                                                                                    ; break;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ; break;
                                                            else
                                                                if not (_k < 1.648061554E9) then else
                                                                    _k = 1.648061554E9; do kk = pk[8][fk]; end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        until false
                                                        ;
                                                    end
                                                    ;
                                                else
                                                    if gk > 1.454291803E9 then
                                                        do gk = 9.85960672E8; end
                                                        ; vk = zq() - 9091;
                                                    else
                                                        if gk < 1.454291803E9 and gk > 8.05539519E8 then
                                                            gk = 8.05539519E8; Wk = a();
                                                        else
                                                            if gk > 5.99656777E8 and gk < 8.05539519E8 then return pk; else
                                                                if gk < 1.961266245E9 and gk > 9.85960672E8 then
                                                                    do gk = 2.32241406E8; end
                                                                    ; (pk)[0X00E] = zq();
                                                                elseif gk < 2.32241406E8 then
                                                                    gk = 5.99656777E8; for fk = 1, vk do
                                                                        local kk, _k, xk = nil, false, (nil); for mk = 6695.0, 16256.0, 3187.0 do
                                                                            do
                                                                                if mk > 9882.0 then
                                                                                    if mk == 13069.0 then
                                                                                        do xk = { kk, {} }; end
                                                                                        ;
                                                                                    else ok[fk - 0x1] = uk; end
                                                                                    ;
                                                                                else
                                                                                    if mk == 6695.0 then
                                                                                        kk = nil; _k = a();
                                                                                    else
                                                                                        do
                                                                                            if _k == 0X73 then kk = zq() +
                                                                                                Aq(zq()) * j; elseif _k == 0X0093 then kk =
                                                                                                F(Qq(Wk), 0X0015); elseif _k == 48 then kk =
                                                                                                a() == 1; elseif _k == 0XCf then kk =
                                                                                                F(Qq(Wk), 6); elseif _k == 227 then kk =
                                                                                                Rq(); elseif _k == 0XD9 then kk =
                                                                                                Cq(); elseif _k == 54 then kk =
                                                                                                Lq(0X0, Rq()); elseif _k == 241 then kk =
                                                                                                F(Qq(Wk), Rq() + zq()); elseif _k == 0Xe2 then kk =
                                                                                                Rq(); elseif _k == 0X0000F4 then kk =
                                                                                                Cq(); elseif _k == 0X00f5 then kk =
                                                                                                F(Qq(Wk), zq()); elseif _k ~= 100 then else kk =
                                                                                                zq() + Eq(zq()) * j; end
                                                                                            ;
                                                                                        end
                                                                                        ;
                                                                                    end
                                                                                    ;
                                                                                end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ; Yk[uk] = xk; do
                                                                            for mk = 991.0, 6879.0, 5888.0 do
                                                                                if mk == 6879.0 then
                                                                                    if Ik then
                                                                                        Hq[Zq] = xk; Zq = Zq + 0X1;
                                                                                    end
                                                                                    ;
                                                                                elseif mk == 991.0 then uk = uk + 0X01; end
                                                                                ;
                                                                            end
                                                                            ;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                else
                                                                    if gk > 7.53500692E8 and gk < 9.85960672E8 then
                                                                        Ik = a() ~= 0X00; gk = 1.36596754E8;
                                                                    else
                                                                        if gk < 5.99656777E8 and gk > 1.36596754E8 then
                                                                            do uk = 0X01; end
                                                                            ; gk = 1.961266245E9;
                                                                        end
                                                                        ;
                                                                    end
                                                                    ;
                                                                end
                                                                ;
                                                            end
                                                            ;
                                                        end
                                                        ;
                                                    end
                                                    ;
                                                end
                                                ;
                                            end
                                            ;
                                        end
                                        ;
                                    end; break;
                                end
                                ;
                            end
                            ;
                        end
                        ;
                    end
                    ;
                end
                ;
            end
            ;
        until false
        ;
    end
    ; local wq = (hq()); local ik = 1.095236725E9; repeat
        if ik < 1.662673744E9 then
            do
                if not (not Fk[4.89080534E8]) then ik = Fk[4.89080534E8]; else
                    ik = 1.662673744E9; do (Fk)[4.89080534E8] = ik; end
                    ;
                end
                ;
            end
            ; wq = Pq(wq, kq, Y)(hq, z, u, yq, Rq, a, zq, R);
        else
            if ik > 1.095236725E9 then return Pq(wq, nil, Y); end
            ;
        end
        ;
    until false
    ;
end)(7, type, "r\115h\105ft", 0X2, 1, 14, bit, string.gsub, rawset, pcall, math.floor, 13, 0X3, string.char, tostring, 5,
    0X9, setfenv, nil, coroutine.yield, "", table, string.sub, 0X01f3d, 0X40000000, select, 0X1000000, 8192, 0XB,
    '\098xo\114', 0X4, 10, coroutine.wrap, 0X000200, 32, unpack, "b\110\111t", 15, 6, 8, 0x000010, 0X0, next, string,
    function(...) (...)[...] = nil; end, {},
    { 44218, 1003746281, 3706783829, 0X2764040, 0X7f1D20e4, 4212211329, 2613423996, 2725401886, 0x7B812eEf })(...);
